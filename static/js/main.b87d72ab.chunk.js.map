{"version":3,"sources":["util/Spotify.js","Context/MainContext.js","Containers/SearchBar/SearchBar.js","Components/Navbar/Navbar.js","Components/Text/Text.js","Components/Time/Time.js","Components/Buttons/PlayButton/PlayButton.js","Components/Buttons/AddButton/AddButton.js","Components/Buttons/DeleteButton/DeleteButton.js","Components/Buttons/OpenButton/OpenButton.js","Components/ActionOverlay/ActionOverlay.js","Components/Track/Track.js","Components/Grid/Grid.js","Components/TrackList/TrackList.js","Components/Buttons/Button/Button.js","Containers/NewPlaylist/NewPlaylist.js","Components/CurrentPlaylist/CurrentPlaylist.js","Components/SearchResults/SearchResults.js","Components/Card/Card.js","Containers/PlaylistDisplay/PlaylistDisplay.js","Containers/Library/Library.js","Containers/UserPlaylists/UserPlaylists.js","Components/Title/Title.js","Components/Border/Border.js","Components/Header/Header.js","Containers/ResultsTracklist/ResultsTracklist.js","Containers/Albumslist/Albumslist.js","Containers/Artists/Artists.js","Containers/Playlists/Playlists.js","Containers/Main/Main.js","Components/ProgressionBar/ProgressionBar.js","Components/Buttons/PauseButton/PauseButton.js","Components/Buttons/ForwardButton/ForwardButton.js","Components/Buttons/BackwardButton/BackwardButton.js","Components/Buttons/PlaylistButton/PlaylistButton.js","Components/TrackProgression/TrackProgression.js","Containers/Player/Player.js","App.js","registerServiceWorker.js","index.js"],"names":["userAccesToken","SpotifyApi","getAccesToken","accessTokenPara","window","location","href","match","expiresInPara","expiresIn","Number","setTimeout","history","pushState","authorizeUrl","concat","getUserId","_getUserId","Object","asyncToGenerator","regenerator_default","a","mark","_callee","access","authorization","userId","response","jsonResponse","wrap","_context","prev","next","Authorization","fetch","headers","sent","ok","json","id","abrupt","t0","console","log","stop","this","apply","arguments","searchPlaylists","_searchPlaylists","_callee2","searchTerm","offset","limit","playlists","_args2","_context2","length","undefined","items","_x","searchArtists","_searchArtists","_callee3","artists","_args3","_context3","_x2","searchAlbums","_searchAlbums","_callee4","albums","_args4","_context4","_x3","searchTracks","_searchTracks","_callee5","url","tracks","_args5","_context5","_x4","fullSearch","_fullSearch","_callee6","resultsList","_context6","t1","t2","t3","_x5","nextResults","_nextResults","_callee7","type","_context7","_x6","_x7","_x8","sendPlayList","_sendPlayList","_callee8","playlistName","playlistUris","playlistId","_context8","method","body","JSON","stringify","name","uris","_x9","_x10","transferPlaybackHere","_transferPlaybackHere","_callee9","deviceId","_context9","Content-Type","device_ids","play","_x11","getPlaylist","_getPlaylist","_callee10","playlist","_args10","_context10","user","spotify","spotifyAlbum","playTrack","_playTrack","_callee11","position","_args11","_context11","context_uri","uri","browserSpotify","_browserSpotify","_callee12","rearrangedItems","_context12","categories","map","item","icons","fetchSpotify","_fetchSpotify","_callee13","_context13","_x12","getCategoriePlaylist","_getCategoriePlaylist","_callee14","categoryId","_context14","_x13","ContextStore","createContext","MainContext","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateState","property","newState","setState","defineProperty","searchSpotify","then","results","searchMore","newResults","route","state","toConsumableArray","addToNewPlaylist","track","newPlaylist","filter","element","addToCurrentPlaylist","currentPlaylist","deleteTrack","scrollHeight","inherits","createClass","key","value","react_default","createElement","Provider","children","Component","SearchBar","handleSearchTerm","e","target","context","clearTimeout","delay","search","pathname","push","className","onChange","placeholder","Link","to","index_es","icon","faSearch","onClick","submitSearch","PureComponent","contextType","Navbar","NavLink","faAlignJustify","faPlusSquare","faTh","faListUl","Text","_ref","artist","textSize","overfl","shadow","style","fontSize","overflow","textShadow","Time","ms","minute","seconds","fullSeconds","Math","floor","slice","trackTime","PlayButton","onPlayClick","Fragment","faPlay","size","AddButton","onAdd","faPlus","DeleteButton","onDelete","faMinus","onOpen","faBoxOpen","ActionOverlayOpen","_ref2","OpenButton","ActionOverlay","trackAction","inPlaylist","clickOnOverlay","Buttons_DeleteButton_DeleteButton","Buttons_AddButton_AddButton","Buttons_PlayButton_PlayButton","Track","handlePlay","urisList","getUrisList","handleTrackAction","_this$props$track","album","duration_ms","images","src","alt","Components_Text_Text","Components_Time_Time","Components_ActionOverlay_ActionOverlay","Grid","TrackList","tracklist","newList","Components_Grid_Grid","Components_Track_Track","Button","buttonAction","NewPlaylist","savePlayList","handleChange","_this$context","Components_TrackList_TrackList","Buttons_Button_Button","CurrentPlaylist","SearchResults","Switch","Route","exact","path","render","Card","handleOnclick","istrackList","useContext","includes","split","splice","join","ActionOverlay_ActionOverlayOpen","PlaylistDisplay","traverse","libary","secondPram","Components_Card_Card","Library","_this2","_this$state","Containers_PlaylistDisplay_PlaylistDisplay","UserPlaylists","userPlaylists","_this$props","Title","Border","Header","Components_Title_Title","Components_Border_Border","ResultsTracklist","fromPlaylist","_useState","useState","expanded","Infinity","_useState2","slicedToArray","expand","toggleExpand","Components_Header_Header","Albumslist","Artists","Playlists","Main","loadOnScroll","scrollTop","onScroll","Components_SearchResults_SearchResults","Containers_Playlists_Playlists","assign","Containers_ResultsTracklist_ResultsTracklist","Containers_Albumslist_Albumslist","Containers_Artists_Artists","Components_CurrentPlaylist_CurrentPlaylist","Containers_NewPlaylist_NewPlaylist","Containers_Library_Library","Containers_UserPlaylists_UserPlaylists","ProgressionBar","currentPostion","sliderAction","maxValue","handleMouseUp","onMouseUp","step","min","max","width","PauseButton","faPause","ForwardButton","onForward","faForward","BackwardButton","onBackward","faBackward","PlaylistButton","togglePlaylist","TrackProgression","playing","duration","onSeek","player","setPosition","getPlayerCurrentstate","useCallback","getCurrentState","useEffect","Components_ProgressionBar_ProgressionBar","Player","checkForPlayer","token","Spotify","clearInterval","playerCheckInterval","getOAuthToken","cb","createEventHandlers","connect","on","error","onStateChanged","data","device_id","current_track","track_window","trackName","albumName","artistName","paused","currentTrack","getVolume","volume","onPrevClick","previousTrack","togglePlay","onNextClick","nextTrack","onVolumeClick","setVolume","getPlayerStateTimer","seek","setInterval","toggleMute","mute","showPlaylist","loggedIn","Buttons_BackwardButton_BackwardButton","Buttons_PauseButton_PauseButton","Buttons_ForwardButton_ForwardButton","Components_TrackProgression_TrackProgression","visibility","Buttons_PlaylistButton_PlaylistButton","faVolumeUp","App","Containers_SearchBar_SearchBar","Components_Navbar_Navbar","Containers_Main_Main","Containers_Player_Player","withRouter","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","BrowserRouter","MainContext_MainContext","src_App_0","document","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b87d72ab.chunk.js","sourcesContent":["const clientId = '7234ae8b9cac4739b9af4f2806d43c7c';\r\nlet userAccesToken;\r\n\r\nconst SpotifyApi = {\r\n\r\n  getAccesToken() {\r\n    if(typeof userAccesToken !== 'undefined') {\r\n      return userAccesToken;\r\n    }\r\n\r\n    const accessTokenPara = window.location.href.match(/access_token=([^&]*)/);\r\n    const expiresInPara = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\n    if (accessTokenPara && expiresInPara) {\r\n      userAccesToken = accessTokenPara[1];\r\n      const expiresIn = Number(expiresInPara[1]);\r\n      window.setTimeout(() => userAccesToken = '', expiresIn * 1000);\r\n      window.history.pushState('Access Token', null, '/');\r\n      return userAccesToken;\r\n    } else {\r\n      const authorizeUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&redirect_uri=https://rcvz.github.io/SpotifyClone/&scope=playlist-modify-public%20playlist-modify-private%20streaming%20user-read-birthdate%20user-read-email%20user-read-private%20user-read-currently-playing%20user-read-playback-state&response_type=token`;\r\n      window.location = authorizeUrl;\r\n    }\r\n  },\r\n\r\n  async getUserId () {\r\n    const access = SpotifyApi.getAccesToken();\r\n    const authorization = {Authorization: `Bearer ${access}`};\r\n    let userId = '';\r\n\r\n    try {\r\n      const response = await fetch('https://api.spotify.com/v1/me', {\r\n        headers: authorization\r\n      });\r\n\r\n      if(response.ok) {\r\n        const jsonResponse = await response.json();\r\n        userId = jsonResponse.id;\r\n        return userId;\r\n      }\r\n    }\r\n    catch(error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async searchPlaylists(searchTerm, offset = 0, limit = 50) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n    const authorization = { Authorization: `Bearer ${access}` };\r\n\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${searchTerm}&type=playlist&limit=${limit}&offset=${offset}`, {\r\n        headers: authorization\r\n      });\r\n      if (response.ok) {\r\n        const playlists = await response.json();\r\n        return playlists.playlists.items;\r\n      } else {\r\n        return []\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async searchArtists(searchTerm, offset = 0, limit = 50) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n    const authorization = { Authorization: `Bearer ${access}` };\r\n\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${searchTerm}&type=artist&limit=${limit}&offset=${offset}`, {\r\n        headers: authorization\r\n      });\r\n      if (response.ok) {\r\n        const artists = await response.json();\r\n        return artists.artists.items;\r\n      } else {\r\n        return []\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  },\r\n\r\n  async searchAlbums(searchTerm, offset = 0, limit = 50) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n    const authorization = { Authorization: `Bearer ${access}` };\r\n\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${searchTerm}&type=album&limit=${limit}&offset=${offset}`, {\r\n        headers: authorization\r\n      });\r\n      if (response.ok) {\r\n        const albums = await response.json();\r\n        return albums.albums.items;\r\n      } else {\r\n        return []\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async searchTracks(searchTerm, offset= 0, limit= 50) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n    const authorization = { Authorization: `Bearer ${access}` };\r\n    let url = `https://api.spotify.com/v1/search?q=${searchTerm}&type=track&limit=${limit}&offset=${offset}`;\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        headers: authorization\r\n      });\r\n      if (response.ok) {\r\n        const tracks = await response.json();\r\n        return tracks.tracks.items;\r\n      } else {\r\n        return []\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async fullSearch(searchTerm) {\r\n    let resultsList = {\r\n      playlists: await SpotifyApi.searchPlaylists(searchTerm),\r\n      artists: await SpotifyApi.searchArtists(searchTerm),\r\n      albums: await SpotifyApi.searchAlbums(searchTerm),\r\n      tracks: await SpotifyApi.searchTracks(searchTerm)\r\n    };\r\n    return resultsList\r\n  },\r\n\r\n  async nextResults(searchTerm, offset, type) {\r\n    const limit = 50;\r\n    if (type === 'playlists') {\r\n      return await SpotifyApi.searchPlaylists(searchTerm, offset, limit);\r\n\r\n    } else if (type === 'artist') {\r\n      return await SpotifyApi.searchArtists(searchTerm, offset, limit);\r\n\r\n    } else if (type === 'albums') {\r\n      return await SpotifyApi.searchAlbums(searchTerm, offset, limit);\r\n\r\n    } else if (type === 'tracks') {\r\n      return await SpotifyApi.searchTracks(searchTerm, offset, limit);\r\n    }\r\n  },\r\n\r\n  async sendPlayList(playlistName, playlistUris) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n    const userId = await SpotifyApi.getUserId();\r\n    const authorization = {Authorization: `Bearer ${access}`};\r\n\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n        method: 'POST',\r\n        headers: authorization,\r\n        body: JSON.stringify({name: playlistName})\r\n      });\r\n\r\n      if(response.ok) {\r\n        const jsonResponse = await response.json();\r\n        const playlistId = jsonResponse.id;\r\n\r\n        try {\r\n          const response = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\r\n            headers: authorization,\r\n            method: 'POST',\r\n            body: JSON.stringify({uris:playlistUris})\r\n          });\r\n          if(response.ok){\r\n            return\r\n          }\r\n\r\n        } catch(error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n    catch(error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async transferPlaybackHere(deviceId) { // should be changed\r\n    const access = await SpotifyApi.getAccesToken();\r\n\r\n    const authorization = {\r\n      Authorization: `Bearer ${access}`,\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n\r\n    fetch(\"https://api.spotify.com/v1/me/player\", {\r\n      method: \"PUT\",\r\n      headers: authorization,\r\n      body: JSON.stringify({\r\n        \"device_ids\": [ deviceId ],\r\n        \"play\": true,\r\n      })\r\n    });\r\n  },\r\n\r\n  async getPlaylist(playlistId='', playlist='user' ) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n\r\n    const url = {\r\n      user: `https://api.spotify.com/v1/me/playlists`,\r\n      spotify: `https://api.spotify.com/v1/playlists/${playlistId}/tracks` ,\r\n      spotifyAlbum: `https://api.spotify.com/v1/albums/${playlistId}/tracks`\r\n    }\r\n\r\n    const authorization = {\r\n      Authorization: `Bearer ${access}`,\r\n     \"Content-Type\": \"application/json\"\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url[playlist], {\r\n        headers: authorization\r\n      });\r\n\r\n      if(response.ok) {\r\n        const jsonResponse = await response.json();\r\n        return jsonResponse.items;\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n  async playTrack(position = 1, uris=[''], type = 'track') {\r\n\r\n    const access = SpotifyApi.getAccesToken();\r\n    const authorization = {Authorization: `Bearer ${access}`};\r\n\r\n    let body;\r\n\r\n    console.log(type)\r\n\r\n    if (type === 'playlist' || type === 'album' || type === 'artist') {\r\n      body = {\r\n        \"context_uri\": uris,\r\n        \"offset\": { \"position\": position }\r\n      }\r\n    } else {\r\n      body = {\r\n        \"uris\": uris,\r\n        \"offset\": { \"uri\": position }\r\n      }\r\n    }\r\n\r\n    console.log(body)\r\n\r\n    try {\r\n      const response = await fetch('https://api.spotify.com/v1/me/player/play', {\r\n        method: \"PUT\",\r\n        headers: authorization,\r\n        body: JSON.stringify(body)\r\n      });\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        console.log(jsonResponse);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n  async browserSpotify() {\r\n    const access = await SpotifyApi.getAccesToken();\r\n\r\n    const authorization = {\r\n      Authorization: `Bearer ${access}`,\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://api.spotify.com/v1/browse/categories?&limit=50', {\r\n        headers: authorization\r\n      });\r\n\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        let items = jsonResponse.categories.items;\r\n        let rearrangedItems = items.map((item) => {\r\n          item['images'] = item.icons\r\n          return item;\r\n        });\r\n        return rearrangedItems;\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n    async fetchSpotify(url) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n\r\n    const authorization = {\r\n      Authorization: `Bearer ${access}`,\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        headers: authorization\r\n      });\r\n\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        console.log(jsonResponse);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n  async getCategoriePlaylist(categoryId) {\r\n  const access = await SpotifyApi.getAccesToken();\r\n\r\n  const authorization = {\r\n    Authorization: `Bearer ${access}`,\r\n    \"Content-Type\": \"application/json\"\r\n  };\r\n\r\n\r\n\r\n  try {\r\n    const response = await fetch(`https://api.spotify.com/v1/browse/categories/${categoryId}/playlists`, {\r\n      headers: authorization\r\n    });\r\n\r\n    if (response.ok) {\r\n      const jsonResponse = await response.json();\r\n      console.log(jsonResponse)\r\n      return jsonResponse.playlists.items;\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n};\r\n\r\n\r\nexport default SpotifyApi;\r\n","import React, { Component, createContext } from 'react';\r\nimport SpotifyApi from '../util/Spotify';\r\n\r\nexport const ContextStore = createContext()\r\n\r\nexport class MainContext extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchTerm: '',\r\n      playlists: [],\r\n      artists: [],\r\n      albums: [],\r\n      tracks: [],\r\n      newPlaylist: [],\r\n      currentPlaylist: [],\r\n      addToNewPlaylist: this.addToNewPlaylist,\r\n      addToCurrentPlaylist: this.addToCurrentPlaylist,\r\n      deleteTrack: this.deleteTrack,\r\n      updateState: this.updateState,\r\n      searchSpotify: this.searchSpotify,\r\n      searchMore: this.searchMore\r\n    }\r\n\r\n    this.scrollHeight = 200;\r\n    this.offset = 50;\r\n  }\r\n\r\n  componentDidMount() {\r\n    SpotifyApi.getAccesToken();\r\n  }\r\n\r\n  updateState = (property, newState) => {\r\n    this.setState({ [property]: newState })\r\n  }\r\n\r\n  searchSpotify = (searchTerm) => {\r\n    SpotifyApi.fullSearch(searchTerm).then((results) => {\r\n      const { playlists, artists, albums, tracks } = results;\r\n      this.tracks = tracks;\r\n      this.setState({\r\n        searchTerm: searchTerm,\r\n        playlists: playlists,\r\n        artists: artists,\r\n        albums: albums,\r\n        tracks: tracks\r\n      })\r\n    })\r\n  }\r\n\r\n  searchMore = (newResults, route) => {  // temp\r\n    this.setState(state => ({\r\n      [route]: [...state[route], ...newResults]\r\n    }));\r\n  }\r\n\r\n\r\n  addToNewPlaylist = (track, type = 'track', trackIndex = 0) => {\r\n    this.setState((state) => {\r\n      const tracks = state.newPlaylist.filter(element => element.id !== track.id); \r\n      const newItem = type === 'track' ? [...tracks, track] : [...tracks, ...track];\r\n      return { newPlaylist: newItem }\r\n    });\r\n  }\r\n\r\n  addToCurrentPlaylist = (tracks) => {\r\n    this.setState({ currentPlaylist: tracks });\r\n  }\r\n\r\n  deleteTrack = (track) => {\r\n    const tracks = this.state.newPlaylist.filter(element => element.id !== track.id);\r\n    this.setState({ newPlaylist: tracks });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <ContextStore.Provider value={this.state} >\r\n        {this.props.children}      \r\n      </ContextStore.Provider>\r\n    );\r\n  }\r\n}","import React, { PureComponent } from 'react';\r\nimport './SearchBar.css';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass SearchBar extends PureComponent {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.delay = null;\r\n  }\r\n  \r\n  static contextType = ContextStore;\r\n\r\n  handleSearchTerm = (e) => {\r\n    let searchTerm = e.target.value;\r\n    this.context.updateState('searchTerm', searchTerm)\r\n    clearTimeout(this.delay);\r\n    this.delay = setTimeout(this.search(searchTerm), 16.7); // makes the results transition more natural delay is set to 60frames per second. can be improved by taking the time react/api takes to update/fetch into account.\r\n  }\r\n\r\n  search = (searchTerm) => {\r\n    this.context.searchSpotify(searchTerm);\r\n    if (this.props.location.pathname === '/') { \r\n      this.props.history.push('/search')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className='SearchBar'>\r\n        <input onChange={this.handleSearchTerm}  placeholder=\"Enter A Song, Album, or Artist\"/>\r\n        <Link to=\"/search\">\r\n          <FontAwesomeIcon className=\"Search_Button\" icon={faSearch}/>\r\n          <button type=\"submit\" onClick={this.submitSearch} name=\"SEARCH\" />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from 'react';\r\nimport './Navbar.css';\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faAlignJustify, faListUl, faPlusSquare, faTh } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return(\r\n      <div className='Navbar-wrapper'>\r\n        <div className='Navbar'>\r\n          <NavLink to=\"/search\"><FontAwesomeIcon icon={faSearch} />  Search</NavLink>\r\n          <NavLink to=\"/currentPlaylist\"><FontAwesomeIcon icon={faAlignJustify} /> Current Playlist</NavLink>\r\n          <NavLink to=\"/newPlaylist\"><FontAwesomeIcon icon={faPlusSquare} /> New Playlist</NavLink>\r\n          <NavLink to=\"/library\"><FontAwesomeIcon icon={faTh} /> Library</NavLink>\r\n          <NavLink to=\"/userPlaylists\"><FontAwesomeIcon icon={faListUl} /> Playlists</NavLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './Text.css';\r\n\r\nconst Text = ({ name, artist, textSize, overfl, shadow }) => {\r\n  return(\r\n    <div className=\"Text\">\r\n      <p style={{ fontSize: textSize, overflow: overfl, textShadow: shadow }}>{name}</p>\r\n      <p style={{ fontSize: textSize, overflow: overfl, textShadow: shadow }}>{artist}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Text;\r\n","import React from 'react';\r\nimport './Time.css';\r\n\r\nconst Time = ({ ms }) => {\r\n  const trackTime = (ms) => {\r\n    let minute, seconds, fullSeconds;\r\n    seconds = Math.floor(ms / 1000);\r\n    minute = Math.floor(seconds / 60);\r\n    seconds = seconds % 60;\r\n    fullSeconds = `0${seconds}`.slice(-2);\r\n      return `${minute}:${fullSeconds}`;\r\n    }\r\n\r\n    return (\r\n        <div className=\"Time\">\r\n            {trackTime(ms)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Time;\r\n\r\n\r\n","import React from 'react';\r\nimport './PlayButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst PlayButton = ({ onPlayClick }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"play-pause\" onClick={onPlayClick} >\r\n        <FontAwesomeIcon className=\"button\" icon={faPlay} size=\"lg\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PlayButton;","import React from 'react';\r\nimport './AddButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst AddButton = ({ onAdd }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"AddButton\" onClick={onAdd} >\r\n        <FontAwesomeIcon className=\"button\" icon={faPlus} size=\"lg\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AddButton;","import React from 'react';\r\nimport './DeleteButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMinus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst DeleteButton = ({ onDelete }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"DeleteButton\" onClick={onDelete} >\r\n        <FontAwesomeIcon className=\"button\" icon={faMinus} size=\"lg\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default DeleteButton;","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBoxOpen } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst AddButton = ({ onOpen }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"AddButton\" onClick={onOpen} >\r\n        <FontAwesomeIcon className=\"button\" icon={faBoxOpen} size=\"lg\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AddButton;","import React from 'react';\r\nimport './ActionOverlay.css';\r\n\r\nimport PlayButton from '../Buttons/PlayButton/PlayButton';\r\nimport AddButton from '../Buttons/AddButton/AddButton';\r\nimport DeleteButton from '../Buttons/DeleteButton/DeleteButton';\r\nimport OpenButton from '../Buttons/OpenButton/OpenButton';\r\n\r\nconst ActionOverlay = ({ trackAction, onPlayClick, inPlaylist, playlist, clickOnOverlay }) => {\r\n\r\n  let className;\r\n  if (playlist === \"artist\" ) {\r\n    className = \"Action-Overlay artist\"\r\n  } else {\r\n    className = \"Action-Overlay\"\r\n  }\r\n\r\n  return (\r\n    <div className={className} onClick={clickOnOverlay}>\r\n      {inPlaylist ? <DeleteButton onDelete={trackAction} /> : <AddButton onAdd={trackAction} />}\r\n      <PlayButton onPlayClick={onPlayClick}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const ActionOverlayOpen = ({ onOpen }) => {\r\n  return (\r\n    <div className=\"Action-Overlay\">\r\n      <OpenButton onOpen={onOpen} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ActionOverlay\r\n","import React, { PureComponent } from 'react';\r\nimport SpotifyApi from '../../util/Spotify';\r\nimport './Track.css'\r\n\r\nimport Text from '../Text/Text';\r\nimport Time from '../Time/Time'; \r\nimport ActionOverlay from '../ActionOverlay/ActionOverlay';\r\n\r\nclass Track extends PureComponent {\r\n  \r\n  handlePlay = (e) => {    \r\n    const urisList = this.props.getUrisList();\r\n    SpotifyApi.playTrack(this.props.track.uri, urisList);\r\n  }\r\n\r\n  handleTrackAction = (e) => {\r\n    this.props.trackAction(this.props.track)\r\n  }\r\n\r\n  render() {\r\n    const {artists, name, album, duration_ms } = this.props.track;\r\n    return(\r\n      <div className=\"Track\">\r\n        <div className=\"Track-information\">\r\n          <div className=\"Album-img\" >\r\n            {album.images[2] ? \r\n              <img className=\"shadow\" src={album.images[2].url} alt=\"album\" /> :\r\n              null\r\n            }            \r\n          </div> \r\n          <div className=\"Track-name\">\r\n            <Text \r\n              name={name} \r\n              artist={artists[0].name} \r\n              shadow={'0 15px 40px 1px rgba(0,0,0,0.30)' }\r\n            />\r\n          </div>  \r\n          <Time className=\"shadow\" ms={duration_ms} />          \r\n        </div>    \r\n        <ActionOverlay trackAction={this.handleTrackAction} onPlayClick={this.handlePlay} inPlaylist={this.props.inPlaylist}/>   \r\n      </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default Track;","import React from 'react';\r\nimport './Grid.css';\r\n\r\nconst Grid = ({children}) => {\r\n  return (\r\n    <div className=\"Grid\">\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\nimport './TrackList.css'\r\n\r\nimport Track from '../Track/Track';\r\nimport Grid from '../Grid/Grid';\r\n\r\nconst TrackList = ({ trackAction, inPlaylist, tracklist }) => {\r\n\r\n const getUrisList = () => {\r\n    const newList = [];\r\n    tracklist.map((track) => newList.push(track.uri));\r\n    return newList;\r\n  }\r\n\r\n  return (\r\n    <Grid>\r\n      {tracklist.map((track) => {\r\n        return (\r\n          <Track\r\n            track={track}\r\n            key={track.id}\r\n            trackAction={trackAction}\r\n            inPlaylist={inPlaylist}\r\n            getUrisList={getUrisList}\r\n          />\r\n        )\r\n      })\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nexport default TrackList;\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\n\r\nconst Button = ({ type, buttonAction, name}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"Button\" type={type} onClick={buttonAction} >{name}</button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { PureComponent } from 'react';\r\nimport './NewPlaylist.css';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\n\r\nimport TrackList from '../../Components/TrackList/TrackList';\r\nimport Button from '../../Components/Buttons/Button/Button';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nclass NewPlaylist extends PureComponent {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      playlistName: ''\r\n    }\r\n  }\r\n\r\n  static contextType = ContextStore; \r\n\r\n  savePlayList = () => {\r\n    const { newPlaylist } = this.context;\r\n    const { playlistName } = this.state;\r\n    if (newPlaylist.length > 0 && playlistName.length > 0) {\r\n      const playlistUris = newPlaylist.map(track => track.uri);\r\n      SpotifyApi.sendPlayList(playlistName, playlistUris);\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ playlistName: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { newPlaylist, deleteTrack } = this.context;\r\n    return(\r\n      <div className=\"Playlist\">\r\n        <input\r\n          onChange={this.handleChange}\r\n          placeholder=\"Playlist\"/>\r\n        <TrackList \r\n          tracklist={newPlaylist}\r\n          trackAction={deleteTrack}\r\n          inPlaylist\r\n        />\r\n        <Button type=\"submit\" buttonAction={this.savePlayList} name=\"SAVE TO SPOTIFY\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewPlaylist;\r\n","import React, { PureComponent } from 'react';\r\nimport './CurrentPlaylist.css';\r\n\r\nimport TrackList from '../TrackList/TrackList';\r\n\r\nclass CurrentPlaylist extends PureComponent {\r\n  render() {\r\n    return (\r\n        <TrackList tracklist={[]} />    \r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrentPlaylist;","import React from 'react';\r\nimport './SearchResults.css';\r\n\r\nimport Grid from '../Grid/Grid';\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nconst SearchResults = ({ children }) => {\r\n  return (\r\n    <Grid>\r\n      <Switch>\r\n        <Route exact path=\"/search\" render={() => children} />\r\n        <Route path=\"/search/playlists\" render={() => children[0]} />\r\n        <Route path=\"/search/tracks\" render={() => children[1]} />\r\n        <Route path=\"/search/albums\" render={() => children[2]} />\r\n        <Route path=\"/search/artists\" render={() => children[3]} />\r\n      </Switch>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nexport default SearchResults;\r\n","import React, { useState, useContext } from 'react';\r\nimport './Card.css';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\n\r\nimport Text from '../Text/Text';\r\nimport ActionOverlay, { ActionOverlayOpen } from '../ActionOverlay/ActionOverlay';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nconst Card = ({ playlist, handleOnclick, id, history, istrackList }) => {\r\n\r\n  const context = useContext(ContextStore);\r\n\r\n  const onPlayClick = () => {\r\n    let uri;\r\n\r\n    if (playlist.uri.includes('user')) {\r\n      playlist.uri.split(':').splice(1, 2).join(':');\r\n      uri = playlist.uri;\r\n    } else {\r\n      uri = playlist.uri.split(':').slice(2).join(':');\r\n    }\r\n\r\n    SpotifyApi.playTrack('1', uri, playlist.type);\r\n  }\r\n\r\n  const clickOnOverlay = () => {\r\n    let newPlaylist = [];\r\n\r\n    if (!istrackList) {\r\n      return handleOnclick(playlist.id, playlist);\r\n    }\r\n\r\n    SpotifyApi.getPlaylist(playlist.id, 'spotify').then((tracklist) => {\r\n      tracklist.map((playlist) => newPlaylist.push(playlist.track));\r\n      context.updateState('tracks', newPlaylist);\r\n      history.push('/search/tracks')\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={`Card ${playlist.type}`}  >\r\n      <div className={`Card-Img ${playlist.type}`} >\r\n        {playlist.images[0] ? <img src={playlist.images[0].url} alt=\"img\" /> : \"\"}\r\n      </div>\r\n      <Text name={playlist.name} />\r\n      {istrackList ?\r\n      <ActionOverlay\r\n        trackAction={() => handleOnclick(id, playlist)}\r\n        playlist={playlist.type === \"artist\" ? \"artist\" : null}\r\n        onPlayClick={onPlayClick}\r\n        clickOnOverlay={clickOnOverlay}\r\n        /> : <ActionOverlayOpen onOpen={() => handleOnclick(id, playlist)} /> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import React, { useContext } from 'react';\r\nimport './PlaylistDisplay.css';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\nimport Card from '../../Components/Card/Card';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nconst PlaylistDisplay = ({ playlists, traverse, albums, libary, history, istrackList }) => {\r\n\r\n  const context = useContext(ContextStore); \r\n\r\n  const handleOnclick = (key, playlist) => {\r\n    console.log(playlist)  \r\n    let images = playlist.images \r\n    let newPlaylist = [];\r\n    let secondPram = 'spotify';\r\n\r\n    if (albums) {\r\n      secondPram = 'spotifyAlbum';\r\n      SpotifyApi.getPlaylist(key, secondPram).then((playlist) => {\r\n        playlist.map((item) => {\r\n          item['album'] = { images }; \r\n          return newPlaylist.push(item);\r\n        });\r\n        context.addToNewPlaylist(newPlaylist, 'tracklist')\r\n      });\r\n    } \r\n\r\n    else if (libary && playlist.type === undefined) {\r\n      SpotifyApi.getCategoriePlaylist(playlist.id).then((playlist) => {\r\n        return traverse(playlist)\r\n      });      \r\n    } \r\n\r\n    else {\r\n      SpotifyApi.getPlaylist(key, secondPram).then((playlists) => {\r\n        playlists.map((playlist) => {\r\n          return newPlaylist.push(playlist.track);\r\n        })\r\n        context.addToNewPlaylist(newPlaylist, 'tracklist')\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"PlaylistDisplay\">\r\n      {playlists.map(playlist => {\r\n        return (\r\n          <Card\r\n            playlist={playlist}\r\n            id={playlist.id}\r\n            key={playlist.id}\r\n            handleOnclick={handleOnclick}\r\n            history={history}\r\n            istrackList={istrackList}\r\n          />)\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaylistDisplay;\r\n","import React, { PureComponent } from 'react';\r\nimport './Library.css';\r\n\r\nimport PlaylistDisplay from '../PlaylistDisplay/PlaylistDisplay';\r\nimport Grid from '../../Components/Grid/Grid';\r\n\r\nimport SpotifyApi from './../../util/Spotify';\r\n\r\nclass Library extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playlists: [],\r\n      istrackList: false,\r\n      results: 6\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    SpotifyApi.browserSpotify().then((playlists) => {\r\n      this.setState({ playlists: playlists });\r\n    })\r\n  }\r\n\r\n  traverse = (playlists) => {\r\n    if (this.state.istrackList === true) {\r\n      this.props.addToCurrentPlaylist(playlists)\r\n    } else {\r\n      this.setState({ playlists: playlists, istrackList: true });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { playlists, istrackList } = this.state;\r\n    return (\r\n      <Grid>\r\n        <PlaylistDisplay\r\n          playlists={playlists}\r\n          traverse={this.traverse}\r\n          history={this.props.history}\r\n          istrackList={istrackList}\r\n          libary\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Library;\r\n","import React, { PureComponent } from 'react';\r\nimport './UserPlaylists.css';\r\n\r\nimport PlaylistDisplay from '../../Containers/PlaylistDisplay/PlaylistDisplay';\r\nimport Grid from '../../Components/Grid/Grid';\r\n\r\nimport SpotifyApi from './../../util/Spotify';\r\n\r\nclass UserPlaylists extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userPlaylists: []\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    SpotifyApi.getPlaylist().then((playlists) => {\r\n      this.setState({ userPlaylists: playlists });\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    const { userPlaylists } = this.state;\r\n    const { addToCurrentPlaylist, history } = this.props; \r\n    return (\r\n      <Grid>\r\n        <PlaylistDisplay \r\n          playlists={userPlaylists} \r\n          addToCurrentPlaylist={addToCurrentPlaylist}\r\n          history={history}\r\n          istrackList\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPlaylists;","import React from 'react';\r\nimport './Title.css';\r\n\r\nconst Title = ({ children }) => {\r\n  return (\r\n    <div className=\"Title\" >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport './Border.css';\r\n\r\nconst Border = () => {\r\n  return(\r\n    <div className=\"Border\"/>\r\n  )\r\n}\r\n\r\nexport default Border;","import React from 'react';\r\nimport './Header.css';\r\nimport Title from '../Title/Title';\r\nimport Button from '../Buttons/Button/Button';\r\nimport Border from '../Border/Border';\r\n\r\nconst Header = ({ children, buttonAction, name }) => {\r\n  return (\r\n    <div className=\"Header\" >\r\n      <Title>{children}</Title>\r\n      <Button type=\"button\" buttonAction={buttonAction} name={name} />\r\n      <Border />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React, { useState, useContext } from 'react';\r\nimport './ResultsTracklist.css';\r\n\r\nimport TrackList from '../../Components/TrackList/TrackList';\r\nimport Header from '../../Components/Header/Header';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nconst ResultsTracklist = ({ history, fromPlaylist }) => {\r\n\r\n  const context = useContext(ContextStore);\r\n\r\n  const [expand, toggleExpand] = useState({\r\n    expanded: false,\r\n    state: 'More',\r\n    results: fromPlaylist ? Infinity : 4 \r\n  });\r\n\r\n  const handleToggleExpand = () => {\r\n    toggleExpand(() => {\r\n      if (history.location.pathname === '/search/tracks') {\r\n        history.push('/search')\r\n        return { expanded: false, state: 'More', results: 4 }\r\n      } else {\r\n        history.push('/search/tracks')\r\n        return { expanded: true, state: 'Less', results: Infinity }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"ResultsTracklist\" >\r\n      <Header name={expand.state} buttonAction={handleToggleExpand}>Tracks</Header>\r\n      <TrackList trackAction={context.addToNewPlaylist} tracklist={context.tracks.slice(0, expand.results)}  />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultsTracklist;\r\n","import React, { useState, useContext  } from 'react';\r\nimport './Albumslist.css';\r\n\r\nimport PlaylistDisplay from '../PlaylistDisplay/PlaylistDisplay';\r\nimport Header from '../../Components/Header/Header';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nconst Albumslist = ({ addToCurrentPlaylist, history })  => {\r\n\r\n  const context = useContext(ContextStore);\r\n\r\n  const [expand, toggleExpand] = useState({\r\n    expanded: false,\r\n    state: 'More',\r\n    results: 3\r\n  });\r\n\r\n  const handleToggleExpand = () => {\r\n    toggleExpand(() => {\r\n      if (history.location.pathname === '/search/albums') {\r\n        history.push('/search')\r\n        return { expanded: false, state: 'More', results: 3 }\r\n      } else {\r\n        history.push('/search/albums')\r\n        return { expanded: true, state: 'Less', results: Infinity }\r\n      }\r\n    })\r\n  }\r\n  return(\r\n    <div className=\"Albumslist\" >\r\n      <Header name={expand.state} buttonAction={handleToggleExpand}>Albums</Header>\r\n      <PlaylistDisplay \r\n        addToCurrentPlaylist={addToCurrentPlaylist} \r\n        playlists={context.albums.slice(0, expand.results)} \r\n        istrackList\r\n        albums \r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Albumslist;\r\n","import React, { useState, useContext } from 'react';\r\nimport './Artists.css';\r\n\r\nimport PlaylistDisplay from '../PlaylistDisplay/PlaylistDisplay';\r\nimport Header from '../../Components/Header/Header';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nconst Artists = ({ addToCurrentPlaylist, history }) => {\r\n\r\n  const context = useContext(ContextStore);\r\n\r\n  const [expand, toggleExpand] = useState({\r\n    expanded: false,\r\n    state: 'More',\r\n    results: 3\r\n  });\r\n\r\n  const handleToggleExpand = () => {\r\n    if (history.location.pathname === '/search/artists') {\r\n      history.push('/search')\r\n    } else {\r\n      history.push('/search/artists')\r\n    }\r\n  }\r\n\r\n  const results = () => {\r\n    return history.location.pathname === '/search/albums' ? Infinity : 3;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Artists\" >\r\n      <Header name={expand.state} buttonAction={handleToggleExpand} artists>Artists</Header>\r\n      <PlaylistDisplay\r\n        addToCurrentPlaylist={addToCurrentPlaylist}\r\n        playlists={context.artists.slice(0, results())}\r\n        istrackList\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Artists;\r\n","import React, { useState, useContext } from 'react';\r\nimport './Playlists.css';\r\n\r\nimport PlaylistDisplay from '../PlaylistDisplay/PlaylistDisplay';\r\nimport Header from '../../Components/Header/Header';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nconst Playlists = ({ addToCurrentPlaylist, history  }) => {\r\n\r\n  const context = useContext(ContextStore);\r\n\r\n  const [expand, toggleExpand] = useState({\r\n    expanded: false,\r\n    state: 'More',\r\n    results: 3\r\n  });\r\n\r\n  const handleToggleExpand = () => {\r\n    toggleExpand(() => {\r\n      if (history.location.pathname === '/search/playlists') {\r\n        history.push('/search')\r\n        return { expanded: false, state: 'More', results: 3 }\r\n      } else {\r\n        history.push('/search/playlists')\r\n        return { expanded: true, state: 'Less', results: Infinity }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"Playlists\" >\r\n      <Header name={expand.state} buttonAction={handleToggleExpand}>Playlists</Header>\r\n      <PlaylistDisplay \r\n        addToCurrentPlaylist={addToCurrentPlaylist} \r\n        playlists={context.playlists.slice(0,expand.results)}\r\n        history={history}\r\n        istrackList\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Playlists;\r\n","import React, { PureComponent } from 'react';\r\nimport './Main.css';\r\n\r\nimport SearchResults from '../../Components/SearchResults/SearchResults';\r\nimport NewPlaylist from '../NewPlaylist/NewPlaylist';\r\nimport CurrentPlaylist from '../../Components/CurrentPlaylist/CurrentPlaylist';\r\nimport Library from '../Library/Library';\r\nimport UserPlaylists from '../UserPlaylists/UserPlaylists';\r\n//import Playlist from '../../Components/Playlist/Playlist';\r\nimport ResultsTracklist from '../ResultsTracklist/ResultsTracklist';\r\nimport Albumslist from '../Albumslist/Albumslist';\r\nimport Artists from '../Artists/Artists';\r\nimport Playlists from '../Playlists/Playlists';\r\nimport { ContextStore} from '../../Context/MainContext';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nclass Main extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.scrollHeight = 300;\r\n    this.offset = 50;\r\n  }\r\n\r\n  static contextType = ContextStore;\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.history.location.pathname === '/search') {\r\n      this.offset = 50;\r\n      this.scrollHeight = 300;\r\n    };\r\n  }\r\n\r\n  loadOnScroll = (e) => {\r\n    const { searchTerm, searchMore } =  this.context;\r\n    const search = this.props.location.pathname.split('/')[1];\r\n    const route = this.props.location.pathname.split('/')[2];\r\n\r\n    if (this.scrollHeight <= e.target.scrollTop && search === 'search' ) {\r\n      this.scrollHeight += 2075;\r\n      this.offset += 50;\r\n\r\n      SpotifyApi.nextResults(searchTerm, this.offset, route).then((results) => {\r\n        searchMore(results, route);\r\n      })\r\n     }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"Main\" onScroll={this.loadOnScroll} >\r\n        <Switch>\r\n          <Route path=\"/search\" render={(props) => (\r\n            <SearchResults>\r\n              <Playlists key={1} {...props}/>\r\n              <ResultsTracklist key={2} {...props}/>\r\n              <Albumslist key={3} {...props}/>\r\n              <Artists key={4}  {...props}/>\r\n            </SearchResults>\r\n          )}/>\r\n          <Route path=\"/currentPlaylist\" render={(props) => <CurrentPlaylist {...props} />} />\r\n          <Route path=\"/newPlaylist\" render={(props) => <NewPlaylist {...props} />} />\r\n          <Route path=\"/library\" render={(props) => <Library {...props} />} />\r\n          <Route path=\"/userPlaylists\" render={(props) => <UserPlaylists {...props} />} />\r\n          <Route path=\"/userPlaylists\" render={(props) => (\r\n            <ResultsTracklist key={2} {...props} fromPlaylist/>\r\n          )} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Main;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './ProgressionBar.css';\r\n\r\nconst ProgressionBar = ({ currentPostion, sliderAction, maxValue, handleMouseUp }) => {\r\n  return(\r\n    <div className=\"Bar-container\">\r\n      <input className=\"Bar\" \r\n        onMouseUp={handleMouseUp}\r\n        onChange={sliderAction} \r\n        step='1' \r\n        type=\"range\" \r\n        min=\"1\" \r\n        value={currentPostion} \r\n        max={maxValue}/>\r\n        <div className=\"progression\" style={{ width: `${(100 / maxValue) * currentPostion}%` }} />      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProgressionBar;\r\n","import React from 'react';\r\nimport './PauseButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPause } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst PauseButton = ({ onPlayClick }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"play-pause\" onClick={onPlayClick} >\r\n        <FontAwesomeIcon className=\"button\" icon={faPause} size=\"lg\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PauseButton;","import React from 'react';\r\nimport './ForwardButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faForward } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ForwardButton = ({ onForward }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"forward\" onClick={onForward} >\r\n        <FontAwesomeIcon className=\"button\" icon={faForward} size=\"sm\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ForwardButton;","import React from 'react';\r\nimport './BackwardButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBackward } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst BackwardButton = ({ onBackward }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"back\" onClick={onBackward} >\r\n        <FontAwesomeIcon className=\"button\" icon={faBackward} size=\"sm\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default BackwardButton;","import React from 'react';\r\nimport './PlaylistButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faListUl } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst PlaylistButton = ({ togglePlaylist }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"Playlist-Button\" >\r\n        <FontAwesomeIcon icon={faListUl} onClick={togglePlaylist} />  \r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PlaylistButton;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './TrackProgression.css';\r\n\r\nimport ProgressionBar from '../../Components/ProgressionBar/ProgressionBar';\r\nimport Time from '../../Components/Time/Time';\r\n\r\nconst TrackProgression = ({ playing, duration, onSeek, handleMouseUp, player }) => {\r\n\r\n  const [position, setPosition] = useState(0);\r\n\r\n  const getPlayerCurrentstate = useCallback(() => {\r\n    player.getCurrentState()\r\n    .then((state) => {\r\n      setPosition(state.position)\r\n    });\r\n  },[])  \r\n\r\n  // const setTimer = useCallback( () => {\r\n  //   playing ? getPlayerStateTimer = setInterval( getPlayerCurrentstate(), 1000) : clearInterval(getPlayerStateTimer);\r\n  // }, [playing]) \r\n\r\n  useEffect(() =>  getPlayerCurrentstate());\r\n  \r\n  return (\r\n    <div className=\"Track-Progression\" >\r\n      <Time ms={position} />\r\n      <div className=\"Track-Bar\">\r\n        <ProgressionBar currentPostion={position} sliderAction={onSeek} maxValue={duration} handleMouseUp={handleMouseUp} />\r\n      </div>\r\n      <Time ms={duration} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrackProgression;","import React, { PureComponent } from 'react';\r\nimport './Player.css';\r\n\r\nimport ProgressionBar from '../../Components/ProgressionBar/ProgressionBar';\r\nimport Text from '../../Components/Text/Text';\r\nimport PlayButton from '../../Components/Buttons/PlayButton/PlayButton';\r\nimport PauseButton from '../../Components/Buttons/PauseButton/PauseButton';\r\nimport ForwardButton from '../../Components/Buttons/ForwardButton/ForwardButton';\r\nimport BackwardButton from '../../Components/Buttons/BackwardButton/BackwardButton';\r\nimport PlaylistButton from '../../Components/Buttons/PlaylistButton/PlaylistButton';\r\nimport TrackProgression from '../../Components/TrackProgression/TrackProgression';\r\nimport CurrentPlaylist from '../../Components/CurrentPlaylist/CurrentPlaylist';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faVolumeUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Player extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token: \"\",\r\n      deviceId: \"\",\r\n      loggedIn: true,\r\n      playing: false,\r\n      error: \"\",\r\n      currentTrack: '',\r\n      trackName: '',\r\n      artistName: '',\r\n      albumName: '',\r\n      position: 0,\r\n      duration: 0,\r\n      volume: 0,\r\n      mute: false,\r\n      showPlaylist: 'hidden'\r\n    }\r\n\r\n    this.playerCheckInterval = null;\r\n    this.getPlayerStateTimer = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ token: SpotifyApi.getAccesToken() });\r\n    this.playerCheckInterval = setInterval(() => this.checkForPlayer(), 800);\r\n  }\r\n\r\n  checkForPlayer = () => {\r\n    const { token } = this.state;\r\n    if (window.Spotify !== null) {\r\n      clearInterval(this.playerCheckInterval);\r\n      this.player = new window.Spotify.Player({ name: \"SpotifyClone\", getOAuthToken: cb => { cb(token) } });\r\n      this.createEventHandlers();\r\n      this.player.connect();\r\n    }\r\n  }\r\n\r\n  createEventHandlers = () => {\r\n    this.player.on('initialization_error', e => console.error(e));\r\n    this.player.on('authentication_error', e => console.error(e));\r\n    this.player.on('account_error', e => console.error(e));\r\n    this.player.on('playback_error', e => console.error(e));\r\n    this.player.on('player_state_changed', state => this.onStateChanged(state));\r\n    this.player.on('ready', data => {\r\n      let { device_id } = data;\r\n      this.setState({ deviceId: device_id });\r\n      SpotifyApi.transferPlaybackHere(device_id)\r\n    });\r\n  }\r\n\r\n  onStateChanged = (state) => {\r\n\r\n    if (state !== null) {\r\n      const { current_track } = state.track_window;\r\n      const trackName = current_track.name;\r\n      const albumName = current_track.album.name;\r\n      const artistName = current_track.artists.map(artist => artist.name).join(\", \");\r\n      const playing = !state.paused;\r\n      const duration = current_track.duration_ms;\r\n      console.log(state)\r\n      this.setState({\r\n        currentTrack: current_track,\r\n        duration: duration,\r\n        trackName: trackName,\r\n        albumName: albumName,\r\n        artistName: artistName,\r\n        playing: playing\r\n      });\r\n      this.player.getVolume().then(volume => this.setState({ volume: volume * 100 }));\r\n    }\r\n  }\r\n\r\n  getPlayerCurrentstate = () => {\r\n    this.player.getCurrentState().then((state) => this.setState({ position: state.position}));\r\n  }\r\n\r\n  onPrevClick = () => {\r\n    this.player.previousTrack();\r\n  }\r\n\r\n  onPlayClick = () => {\r\n    this.player.togglePlay();\r\n  }\r\n\r\n  onNextClick = () => {\r\n    this.player.nextTrack();\r\n  }\r\n\r\n  onVolumeClick = (e) => {\r\n    let volume = e.target.value;\r\n    this.player.setVolume(volume/100).then(() => this.setState( { volume: volume } ));\r\n  }\r\n\r\n  onSeek = (e) => {\r\n    clearInterval(this.getPlayerStateTimer);\r\n    this.setState({ position: e.target.value });\r\n  }\r\n\r\n  handleMouseUp = (e) => {\r\n    this.player.seek(this.state.position).then(() => {\r\n      this.getPlayerStateTimer = setInterval(() => this.getPlayerCurrentstate(), 100);\r\n    });\r\n  }\r\n\r\n  toggleMute = (e) => {\r\n    if (!this.state.mute) {\r\n      this.player.setVolume(0);\r\n      this.setState({ mute: true })\r\n    } else {\r\n      this.player.setVolume(this.state.volume/100);\r\n      this.setState({ mute: false });\r\n    }\r\n  }\r\n\r\n  togglePlaylist = (e) => {\r\n    if (this.state.showPlaylist === 'hidden') {\r\n      this.setState({ showPlaylist: 'visible' });\r\n    } else {\r\n      this.setState({ showPlaylist: 'hidden' });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //SpotifyApi.fetchSpotify('https://api.spotify.com/v1/me/player/currently-playing');\r\n    const { playing, currentTrack, volume, duration, position, artistName, trackName, showPlaylist } = this.state;\r\n    return(\r\n      <div className=\"Player\">\r\n        <div className=\"Track-info\">\r\n          <Text track={currentTrack} \r\n            name={trackName} \r\n            artist={artistName}\r\n            textSize={'16px'}\r\n            overfl={'visible'}\r\n          />\r\n        </div>\r\n        <div className=\"Control\">\r\n          <div className=\"Player-buttons\">\r\n            <BackwardButton onBackward={this.onPrevClick} />\r\n            {!playing ? <PlayButton onPlayClick={this.onPlayClick} /> : <PauseButton onPlayClick={this.onPlayClick} />}\r\n            <ForwardButton onForward={this.onNextClick} />\r\n          </div>\r\n          { playing ?\r\n          <TrackProgression \r\n            player={this.player}\r\n            playing={playing}\r\n            duration={duration} \r\n            sliderAction={this.onSeek} \r\n            handleMouseUp={this.handleMouseUp} \r\n          /> : null}\r\n        </div>\r\n        <div className=\"Control-Leftside\">\r\n          <div className=\"Current-Playlist-Container\" style={{ visibility: showPlaylist }}>\r\n            <CurrentPlaylist playlist={this.props.currentPlaylist} />\r\n          </div>\r\n          <PlaylistButton togglePlaylist={this.togglePlaylist} />\r\n          <div className=\"volume\">\r\n            <FontAwesomeIcon icon={faVolumeUp} size=\"sm\" onClick={this.toggleMute} />\r\n            <div className=\"volume-bar\">\r\n              <ProgressionBar currentPostion={volume} sliderAction={this.onVolumeClick} maxValue={\"100\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import React, { PureComponent } from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport SearchBar from './Containers/SearchBar/SearchBar';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport NewPlaylist from './Containers/NewPlaylist/NewPlaylist';\r\nimport CurrentPlaylist from './Components/CurrentPlaylist/CurrentPlaylist';\r\nimport Main from './Containers/Main/Main';\r\nimport Player from './Containers/Player/Player';\r\nimport Library from './Containers/Library/Library';\r\nimport UserPlaylists from './Containers/UserPlaylists/UserPlaylists';\r\nimport SpotifyApi from './util/Spotify';\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass App extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.scrollHeight = 200;\r\n    this.offset = 50;\r\n  }\r\n\r\n  componentDidMount() {\r\n    SpotifyApi.getAccesToken();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <SearchBar \r\n          history={this.props.history} //temp  <----    workaround\r\n          location={this.props.location} //temp <----  \r\n        />\r\n        <Navbar />\r\n        <Main\r\n          history={this.props.history} //temp  <----    workaround\r\n          location={this.props.location} //temp <----  \r\n        >\r\n          <CurrentPlaylist />\r\n          <NewPlaylist />\r\n          <Library />\r\n          <UserPlaylists />\r\n        </Main>\r\n        <Player />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { MainContext } from './Context/MainContext';\n\n\n// if (process.env.NODE_ENV !== 'production') {\n//   const { whyDidYouUpdate } = require('why-did-you-update')\n//   whyDidYouUpdate(React)\n// }\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <MainContext>\n      <App />\n    </MainContext>\n  </BrowserRouter>,\n   document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}