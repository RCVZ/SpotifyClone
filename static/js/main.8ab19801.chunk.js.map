{"version":3,"sources":["util/Spotify.js","Context/MainContext.js","Containers/SearchBar/SearchBar.js","Components/Navigation/Navigation.js","Components/Text/Text.js","Components/Time/Time.js","Components/Buttons/PlayButton/PlayButton.js","Components/Buttons/AddButton/AddButton.js","Components/Buttons/DeleteButton/DeleteButton.js","Components/Buttons/OpenButton/OpenButton.js","Components/ActionOverlay/ActionOverlay.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/Buttons/Button/Button.js","Components/Grid/Grid.js","Containers/NewPlaylist/NewPlaylist.js","Components/CurrentPlaylist/CurrentPlaylist.js","Components/Title/Title.js","Components/Border/Border.js","Components/Header/Header.js","Containers/ResultsTracklist/ResultsTracklist.js","Components/Card/Card.js","Containers/PlaylistDisplay/PlaylistDisplay.js","Containers/Albumslist/Albumslist.js","Containers/Artists/Artists.js","Containers/Playlists/Playlists.js","Components/SearchResults/SearchResults.js","Containers/Library/Library.js","Containers/UserPlaylists/UserPlaylists.js","Containers/Main/Main.js","Components/ProgressionBar/ProgressionBar.js","Components/Buttons/PauseButton/PauseButton.js","Components/Buttons/ForwardButton/ForwardButton.js","Components/Buttons/BackwardButton/BackwardButton.js","Components/Buttons/PlaylistButton/PlaylistButton.js","Components/TrackProgression/TrackProgression.js","Containers/Player/Player.js","App.js","registerServiceWorker.js","index.js"],"names":["userAccesToken","SpotifyApi","getAccesToken","accessTokenPara","window","location","href","match","expiresInPara","expiresIn","Number","setTimeout","history","pushState","authorizeUrl","concat","getUserId","_getUserId","Object","asyncToGenerator","regenerator_default","a","mark","_callee","access","authorization","userId","response","jsonResponse","wrap","_context","prev","next","Authorization","fetch","headers","sent","ok","json","id","abrupt","t0","console","log","stop","this","apply","arguments","searchPlaylists","_searchPlaylists","_callee2","searchTerm","offset","limit","playlists","_args2","_context2","length","undefined","items","_x","searchArtists","_searchArtists","_callee3","artists","_args3","_context3","_x2","searchAlbums","_searchAlbums","_callee4","albums","_args4","_context4","_x3","searchTracks","_searchTracks","_callee5","url","tracks","_args5","_context5","_x4","fullSearch","_fullSearch","_callee6","resultsList","_context6","t1","t2","t3","_x5","nextResults","_nextResults","_callee7","type","_context7","_x6","_x7","_x8","sendPlayList","_sendPlayList","_callee8","playlistName","playlistUris","playlistId","_context8","method","body","JSON","stringify","name","uris","_x9","_x10","transferPlaybackHere","_transferPlaybackHere","_callee9","deviceId","_context9","Content-Type","device_ids","play","_x11","getPlaylist","_getPlaylist","_callee10","playlist","_args10","_context10","user","spotify","spotifyAlbum","spotifyArtist","playTrack","_playTrack","_callee11","position","_args11","_context11","context_uri","uri","browserSpotify","_browserSpotify","_callee12","rearrangedItems","_context12","categories","map","item","icons","fetchSpotify","_fetchSpotify","_callee13","_context13","_x12","getCategoriePlaylist","_getCategoriePlaylist","_callee14","categoryId","_context14","_x13","ContextStore","createContext","MainContext","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateState","property","newState","setState","defineProperty","searchSpotify","then","results","searchMore","newResults","route","state","toConsumableArray","addToNewPlaylist","track","newPlaylist","filter","element","addToCurrentPlaylist","currentPlaylist","deleteTrack","inherits","createClass","key","value","react_default","createElement","Provider","children","Component","SearchBar","handleSearchTerm","e","target","context","clearTimeout","delay","search","push","className","onChange","placeholder","Link","to","onClick","submitSearch","index_es","icon","faSearch","PureComponent","contextType","Navigation","NavLink","faAlignJustify","faPlusSquare","faTh","faListUl","Text","_ref","artist","textSize","overfl","shadow","style","fontSize","overflow","textShadow","Time","ms","minute","seconds","fullSeconds","Math","floor","slice","trackTime","PlayButton","onPlayClick","Fragment","faPlay","size","AddButton","onAdd","faPlus","DeleteButton","onDelete","faMinus","onOpen","faBoxOpen","ActionOverlayOpen","_ref2","OpenButton","ActionOverlay","trackAction","inPlaylist","playlistType","clickOnOverlay","Buttons_DeleteButton_DeleteButton","Buttons_AddButton_AddButton","Buttons_PlayButton_PlayButton","Track","handlePlay","_this$props$getUrisLi","getUrisList","_this$props$getUrisLi2","slicedToArray","urisList","tracklist","handleTrackAction","handleMouseEnter","mouseOver","handleMouseLeave","_this$props$track","album","duration_ms","onMouseEnter","onMouseLeave","images","src","alt","Components_Text_Text","Components_Time_Time","Components_ActionOverlay_ActionOverlay","TrackList","start","end","indexTest","newList","index","Components_Track_Track","Button","buttonAction","Grid","NewPlaylist","savePlayList","handleChange","_this$context","Components_Grid_Grid","Components_TrackList_TrackList","Infinity","Buttons_Button_Button","CurrentPlaylist","useContext","Title","Border","Header","Components_Title_Title","Components_Border_Border","ResultsTracklist","_useState","useState","_useState2","scrollTopPosition","updateScrollTopPosition","_useState3","_useState4","expanded","toggleExpand","_useState5","_useState6","visibleItems","updateVisibility","getPosition","top","left","right","memoTracksWithPosition","useCallback","list","cList","forEach","tracksWithPosition","Components_Header_Header","pathname","onScroll","scrollTop","height","Card","openTracks","includes","split","splice","join","ActionOverlay_ActionOverlayOpen","PlaylistDisplay","Components_Card_Card","Albumslist","expand","useEffect","getPlaylistTracks","Containers_PlaylistDisplay_PlaylistDisplay","Artists","Playlists","SearchResults","Switch","Route","exact","path","render","Containers_Playlists_Playlists","assign","Containers_ResultsTracklist_ResultsTracklist","Containers_Albumslist_Albumslist","Containers_Artists_Artists","marginTop","Library","traverse","istrackList","getCategoriePlaylists","_this2","_this$state","UserPlaylists","userPlaylists","Main","loadOnScroll","startsWith","scrollHeight","loadMore","Components_SearchResults_SearchResults","Components_CurrentPlaylist_CurrentPlaylist","Containers_NewPlaylist_NewPlaylist","Containers_Library_Library","Containers_UserPlaylists_UserPlaylists","ProgressionBar","currentPostion","sliderAction","maxValue","handleMouseUp","onMouseUp","step","min","max","width","PauseButton","faPause","ForwardButton","onForward","faForward","BackwardButton","onBackward","faBackward","PlaylistButton","togglePlaylist","TrackProgression","playing","duration","player","basePosition","setPosition","timer","setTimer","getPlayerCurrentstate","getCurrentState","setInterval","clearInterval","Components_ProgressionBar_ProgressionBar","seek","Player","checkForPlayer","token","Spotify","playerCheckInterval","getOAuthToken","cb","createEventHandlers","connect","on","error","onStateChanged","data","device_id","current_track","track_window","trackName","albumName","artistName","paused","currentTrack","getVolume","volume","onPrevClick","previousTrack","togglePlay","onNextClick","nextTrack","onVolumeClick","setVolume","toggleMute","mute","showPlaylist","loggedIn","getPlayerStateTimer","Buttons_BackwardButton_BackwardButton","Buttons_PauseButton_PauseButton","Buttons_ForwardButton_ForwardButton","Components_TrackProgression_TrackProgression","Buttons_PlaylistButton_PlaylistButton","faVolumeUp","App","Containers_SearchBar_SearchBar","Components_Navigation_Navigation","Containers_Main_Main","Containers_Player_Player","withRouter","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","BrowserRouter","MainContext_MainContext","src_App_0","document","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8ab19801.chunk.js","sourcesContent":["const clientId = 'e81c1af21c5a439ab6ebc0a235cb6ad7';\r\nlet userAccesToken;\r\n\r\nconst SpotifyApi = {\r\n\r\n  getAccesToken() {\r\n    if(typeof userAccesToken !== 'undefined') {\r\n      return userAccesToken;\r\n    }\r\n\r\n    const accessTokenPara = window.location.href.match(/access_token=([^&]*)/);\r\n    const expiresInPara = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\n    if (accessTokenPara && expiresInPara) {\r\n      userAccesToken = accessTokenPara[1];\r\n      const expiresIn = Number(expiresInPara[1]);\r\n      window.setTimeout(() => userAccesToken = '', expiresIn * 1000);\r\n      window.history.pushState('Access Token', null, '/');\r\n      return userAccesToken;\r\n    } else {\r\n      const authorizeUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&redirect_uri=https://rcvz.github.io/SpotifyClone/&scope=playlist-modify-public%20playlist-modify-private%20streaming%20user-read-birthdate%20user-read-email%20user-read-private%20user-read-currently-playing%20user-read-playback-state&response_type=token`;\r\n      window.location = authorizeUrl;\r\n    }\r\n  },\r\n\r\n  async getUserId () {\r\n    const access = SpotifyApi.getAccesToken();\r\n    const authorization = {Authorization: `Bearer ${access}`};\r\n    let userId = '';\r\n\r\n    try {\r\n      const response = await fetch('https://api.spotify.com/v1/me', {\r\n        headers: authorization\r\n      });\r\n\r\n      if(response.ok) {\r\n        const jsonResponse = await response.json();\r\n        userId = jsonResponse.id;\r\n        return userId;\r\n      }\r\n    }\r\n    catch(error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async searchPlaylists(searchTerm, offset = 0, limit = 50) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n    const authorization = { Authorization: `Bearer ${access}` };\r\n\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${searchTerm}&type=playlist&limit=${limit}&offset=${offset}`, {\r\n        headers: authorization\r\n      });\r\n      if (response.ok) {\r\n        const playlists = await response.json();\r\n        return playlists.playlists.items;\r\n      } else {\r\n        return []\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async searchArtists(searchTerm, offset = 0, limit = 50) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n    const authorization = { Authorization: `Bearer ${access}` };\r\n\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${searchTerm}&type=artist&limit=${limit}&offset=${offset}`, {\r\n        headers: authorization\r\n      });\r\n      if (response.ok) {\r\n        const artists = await response.json();\r\n        return artists.artists.items;\r\n      } else {\r\n        return []\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  },\r\n\r\n  async searchAlbums(searchTerm, offset = 0, limit = 50) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n    const authorization = { Authorization: `Bearer ${access}` };\r\n\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${searchTerm}&type=album&limit=${limit}&offset=${offset}`, {\r\n        headers: authorization\r\n      });\r\n      if (response.ok) {\r\n        const albums = await response.json();\r\n        return albums.albums.items;\r\n      } else {\r\n        return []\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async searchTracks(searchTerm, offset= 0, limit= 50) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n    const authorization = { Authorization: `Bearer ${access}` };\r\n    let url = `https://api.spotify.com/v1/search?q=${searchTerm}&type=track&limit=${limit}&offset=${offset}`;\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        headers: authorization\r\n      });\r\n      if (response.ok) {\r\n        const tracks = await response.json();\r\n        return tracks.tracks.items;\r\n      } else {\r\n        return []\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async fullSearch(searchTerm) {\r\n    let resultsList = {\r\n      playlists: await SpotifyApi.searchPlaylists(searchTerm),\r\n      artists: await SpotifyApi.searchArtists(searchTerm),\r\n      albums: await SpotifyApi.searchAlbums(searchTerm),\r\n      tracks: await SpotifyApi.searchTracks(searchTerm)\r\n    };\r\n    return resultsList\r\n  },\r\n\r\n  async nextResults(searchTerm, offset, type) {\r\n    const limit = 50;\r\n    if (type === 'playlists') {\r\n      return await SpotifyApi.searchPlaylists(searchTerm, offset, limit);\r\n\r\n    } else if (type === 'artist') {\r\n      return await SpotifyApi.searchArtists(searchTerm, offset, limit);\r\n\r\n    } else if (type === 'albums') {\r\n      return await SpotifyApi.searchAlbums(searchTerm, offset, limit);\r\n\r\n    } else if (type === 'tracks') {\r\n      return await SpotifyApi.searchTracks(searchTerm, offset, limit);\r\n    }\r\n  },\r\n\r\n  async sendPlayList(playlistName, playlistUris) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n    const userId = await SpotifyApi.getUserId();\r\n    const authorization = {Authorization: `Bearer ${access}`};\r\n\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n        method: 'POST',\r\n        headers: authorization,\r\n        body: JSON.stringify({name: playlistName})\r\n      });\r\n\r\n      if(response.ok) {\r\n        const jsonResponse = await response.json();\r\n        const playlistId = jsonResponse.id;\r\n\r\n        try {\r\n          const response = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\r\n            headers: authorization,\r\n            method: 'POST',\r\n            body: JSON.stringify({uris:playlistUris})\r\n          });\r\n          if(response.ok){\r\n            return\r\n          }\r\n\r\n        } catch(error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n    catch(error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async transferPlaybackHere(deviceId) { // should be changed\r\n    const access = await SpotifyApi.getAccesToken();\r\n\r\n    const authorization = {\r\n      Authorization: `Bearer ${access}`,\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n\r\n    fetch(\"https://api.spotify.com/v1/me/player\", {\r\n      method: \"PUT\",\r\n      headers: authorization,\r\n      body: JSON.stringify({\r\n        \"device_ids\": [ deviceId ],\r\n        \"play\": true,\r\n      })\r\n    });\r\n  },\r\n\r\n  async getPlaylist(playlistId='', playlist='user' ) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n\r\n    const authorization = {\r\n      Authorization: `Bearer ${access}`,\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n\r\n    const url = {\r\n      user: `https://api.spotify.com/v1/me/playlists`,\r\n      spotify: `https://api.spotify.com/v1/playlists/${playlistId}/tracks` ,\r\n      spotifyAlbum: `https://api.spotify.com/v1/albums/${playlistId}/tracks`,\r\n      spotifyArtist: `https://api.spotify.com/v1/artists/${playlistId}/top-tracks?country=NL`\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url[playlist], {\r\n        headers: authorization\r\n      });\r\n\r\n      if(response.ok) {\r\n        const jsonResponse = await response.json();\r\n        if (jsonResponse.items === undefined){\r\n          return jsonResponse.tracks;\r\n        }\r\n        return jsonResponse.items;\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n  async playTrack(position = 1, uris=[''], type = 'track') {\r\n\r\n    const access = SpotifyApi.getAccesToken();\r\n    const authorization = {Authorization: `Bearer ${access}`};\r\n\r\n    let body;\r\n\r\n    if (type === 'playlist' || type === 'album' || type === 'artist') {\r\n      body = {\r\n        \"context_uri\": uris,\r\n        \"offset\": { \"position\": position }\r\n      }\r\n    } else {\r\n      body = {\r\n        \"uris\": uris,\r\n        \"offset\": { \"uri\": position }\r\n      }\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('https://api.spotify.com/v1/me/player/play', {\r\n        method: \"PUT\",\r\n        headers: authorization,\r\n        body: JSON.stringify(body)\r\n      });\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        console.log(jsonResponse);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n  async browserSpotify() {\r\n    const access = await SpotifyApi.getAccesToken();\r\n\r\n    const authorization = {\r\n      Authorization: `Bearer ${access}`,\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://api.spotify.com/v1/browse/categories?&limit=50', {\r\n        headers: authorization\r\n      });\r\n\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        let items = jsonResponse.categories.items;\r\n        let rearrangedItems = items.map((item) => {\r\n          item['images'] = item.icons\r\n          return item;\r\n        });\r\n        return rearrangedItems;\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n    async fetchSpotify(url) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n\r\n    const authorization = {\r\n      Authorization: `Bearer ${access}`,\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        headers: authorization\r\n      });\r\n\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        console.log(jsonResponse);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n  async getCategoriePlaylist(categoryId) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n\r\n    const authorization = {\r\n      Authorization: `Bearer ${access}`,\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/browse/categories/${categoryId}/playlists?&limit=50`, {\r\n        headers: authorization\r\n      });\r\n\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        return jsonResponse.playlists.items;\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport default SpotifyApi;\r\n","import React, { Component, createContext } from 'react';\r\nimport SpotifyApi from '../util/Spotify';\r\n\r\nexport const ContextStore = createContext()\r\n\r\nexport class MainContext extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchTerm: '',\r\n      playlists: [],\r\n      artists: [],\r\n      albums: [],\r\n      tracks: [],\r\n      newPlaylist: [],\r\n      currentPlaylist: [],\r\n      addToNewPlaylist: this.addToNewPlaylist,\r\n      addToCurrentPlaylist: this.addToCurrentPlaylist,\r\n      deleteTrack: this.deleteTrack,\r\n      updateState: this.updateState,\r\n      searchSpotify: this.searchSpotify,\r\n      searchMore: this.searchMore\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    SpotifyApi.getAccesToken();\r\n  }\r\n\r\n  updateState = (property, newState) => {\r\n    this.setState({ [property]: newState })\r\n  }\r\n\r\n  searchSpotify = (searchTerm) => {\r\n    SpotifyApi.fullSearch(searchTerm).then((results) => {\r\n      const { playlists, artists, albums, tracks } = results;\r\n      this.tracks = tracks;\r\n      this.setState({\r\n        searchTerm: searchTerm,\r\n        playlists: playlists,\r\n        artists: artists,\r\n        albums: albums,\r\n        tracks: tracks\r\n      })\r\n    })\r\n  }\r\n\r\n  searchMore = (newResults, route) => {  // temp\r\n    this.setState(state => ({\r\n      [route]: [...state[route], ...newResults]\r\n    }));\r\n  }\r\n\r\n\r\n  addToNewPlaylist = (track, type = 'track', trackIndex = 0) => {\r\n    this.setState((state) => {\r\n      const tracks = state.newPlaylist.filter(element => element.id !== track.id); \r\n      const newItem = type === 'track' ? [...tracks, track] : [...tracks, ...track];\r\n      return { newPlaylist: newItem }\r\n    });\r\n  }\r\n\r\n  addToCurrentPlaylist = (tracks) => {\r\n    this.setState({ currentPlaylist: tracks });\r\n  }\r\n\r\n  deleteTrack = (track) => {\r\n    const tracks = this.state.newPlaylist.filter(element => element.id !== track.id);\r\n    this.setState({ newPlaylist: tracks });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <ContextStore.Provider value={this.state} >\r\n        {this.props.children}      \r\n      </ContextStore.Provider>\r\n    );\r\n  }\r\n}","import React, { PureComponent } from 'react';\r\nimport './SearchBar.css';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass SearchBar extends PureComponent {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.delay = null;\r\n  }\r\n  \r\n  static contextType = ContextStore;\r\n\r\n  handleSearchTerm = (e) => {\r\n    let searchTerm = e.target.value;\r\n    this.context.updateState('searchTerm', searchTerm)\r\n    clearTimeout(this.delay);\r\n    this.delay = setTimeout(this.search(searchTerm), 16.7); \r\n  }\r\n\r\n  search = (searchTerm) => {\r\n    this.context.searchSpotify(searchTerm);\r\n    if (searchTerm.length <= 0) {\r\n      this.props.history.push(\"/search/no-results\");      \r\n    } else {\r\n      this.props.history.push(`/search?q=${searchTerm}`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className='SearchBar'>\r\n        <input onChange={this.handleSearchTerm}  placeholder=\"Enter A Song, Album, or Artist\"/>\r\n        <Link to=\"/search\">\r\n          <button type=\"submit\" onClick={this.submitSearch} name=\"SEARCH\">\r\n            <FontAwesomeIcon className=\"Search_Button\" icon={faSearch} />\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { PureComponent } from 'react';\r\nimport './Navigation.css';\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faAlignJustify, faListUl, faPlusSquare, faTh } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Navigation extends PureComponent {\r\n\r\n  render() {\r\n    return(\r\n      <div className='Navigation-wrapper'>\r\n        <div className='Navigation'>\r\n          <NavLink className=\"Menu-Button\" to=\"/search/no-results\">\r\n            <FontAwesomeIcon icon={faSearch} />  \r\n            <span>Search</span>\r\n          </NavLink>\r\n          <NavLink className=\"Menu-Button\" to=\"/currentPlaylist\">\r\n            <FontAwesomeIcon icon={faAlignJustify} /> \r\n            <span>Current </span>\r\n            <span> Playlist </span>\r\n          </NavLink>\r\n          <NavLink className=\"Menu-Button\" to=\"/newPlaylist\">\r\n            <FontAwesomeIcon icon={faPlusSquare} /> \r\n            <span>New </span>\r\n            <span> Playlist </span>\r\n          </NavLink>\r\n          <NavLink className=\"Menu-Button\" to=\"/library\">\r\n            <FontAwesomeIcon icon={faTh} /> \r\n            <span>Library</span>\r\n          </NavLink>\r\n          <NavLink className=\"Menu-Button\" to=\"/userPlaylists\">\r\n            <FontAwesomeIcon icon={faListUl} /> \r\n            <span>Playlists</span>\r\n          </NavLink>\r\n        </div>\r\n      </div>  \r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport './Text.css';\r\n\r\nconst Text = ({ name, artist, textSize, overfl, shadow }) => {\r\n  return(\r\n    <div className=\"Text\">\r\n      <p style={{ fontSize: textSize, overflow: overfl, textShadow: shadow }}>{name}</p>\r\n      <p style={{ fontSize: textSize, overflow: overfl, textShadow: shadow }}>{artist}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Text;\r\n","import React from 'react';\r\nimport './Time.css';\r\n\r\nconst Time = ({ ms }) => {\r\n  const trackTime = (ms) => {\r\n    let minute, seconds, fullSeconds;\r\n    seconds = Math.floor(ms / 1000);\r\n    minute = Math.floor(seconds / 60);\r\n    seconds = seconds % 60;\r\n    fullSeconds = `0${seconds}`.slice(-2);\r\n      return `${minute}:${fullSeconds}`;\r\n    }\r\n\r\n    return (\r\n        <div className=\"Time\">\r\n            {trackTime(ms)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Time;\r\n\r\n\r\n","import React from 'react';\r\nimport './PlayButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst PlayButton = ({ onPlayClick }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"play-pause\" onClick={onPlayClick} >\r\n        <FontAwesomeIcon className=\"button\" icon={faPlay} size=\"lg\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PlayButton;","import React from 'react';\r\nimport './AddButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst AddButton = ({ onAdd }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"AddButton\" onClick={onAdd} >\r\n        <FontAwesomeIcon className=\"button\" icon={faPlus} size=\"lg\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AddButton;","import React from 'react';\r\nimport './DeleteButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMinus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst DeleteButton = ({ onDelete }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"DeleteButton\" onClick={onDelete} >\r\n        <FontAwesomeIcon className=\"button\" icon={faMinus} size=\"lg\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default DeleteButton;","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBoxOpen } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst AddButton = ({ onOpen }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"AddButton\" onClick={onOpen} >\r\n        <FontAwesomeIcon className=\"button\" icon={faBoxOpen} size=\"lg\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AddButton;","import React from 'react';\r\nimport './ActionOverlay.css';\r\n\r\nimport PlayButton from '../Buttons/PlayButton/PlayButton';\r\nimport AddButton from '../Buttons/AddButton/AddButton';\r\nimport DeleteButton from '../Buttons/DeleteButton/DeleteButton';\r\nimport OpenButton from '../Buttons/OpenButton/OpenButton';\r\n\r\nconst ActionOverlay = ({ trackAction, onPlayClick, inPlaylist, playlistType, clickOnOverlay }) => {\r\n\r\n  let className;\r\n  if (playlistType === \"artist\" ) {\r\n    className = \"Action-Overlay artist\"\r\n  } else {\r\n    className = \"Action-Overlay\"\r\n  }\r\n\r\n  return (\r\n    <div className={className} onClick={clickOnOverlay}>\r\n      {inPlaylist ? <DeleteButton onDelete={trackAction} /> : <AddButton onAdd={trackAction} />}\r\n      <PlayButton onPlayClick={onPlayClick}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const ActionOverlayOpen = ({ onOpen }) => {\r\n  return (\r\n    <div className=\"Action-Overlay\">\r\n      <OpenButton onOpen={onOpen} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ActionOverlay\r\n","import React, { PureComponent } from 'react';\r\nimport SpotifyApi from '../../util/Spotify';\r\nimport './Track.css'\r\n\r\nimport Text from '../Text/Text';\r\nimport Time from '../Time/Time';\r\nimport ActionOverlay from '../ActionOverlay/ActionOverlay';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nclass Track extends PureComponent {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      mouseOver: false\r\n    }\r\n  }\r\n\r\n  static contextType = ContextStore;\r\n\r\n  handlePlay = (e) => {\r\n    const [urisList, tracklist] = this.props.getUrisList();\r\n    SpotifyApi.playTrack(this.props.track.uri, urisList);\r\n    this.context.addToCurrentPlaylist(tracklist)\r\n  }\r\n\r\n  handleTrackAction = (e) => {\r\n    this.props.trackAction(this.props.track)\r\n  }\r\n\r\n  handleMouseEnter = () => {\r\n    this.setState({ mouseOver: true})\r\n  }\r\n\r\n  handleMouseLeave = () => {\r\n    this.setState({ mouseOver: false })\r\n  }\r\n\r\n  render() {\r\n    const { artists, name, album, duration_ms, position } = this.props.track;\r\n    return (\r\n      <div className=\"Track\" style={position} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\r\n        <div className=\"Track-information\">\r\n          <div className=\"Album-img\" >\r\n            {album.images[2] ?\r\n              <img className=\"shadow\" src={album.images[2].url} alt=\"album\" /> :\r\n              null\r\n            }\r\n          </div>\r\n          <div className=\"Track-name\">\r\n            <Text\r\n              name={name}\r\n              artist={artists[0].name}\r\n              shadow={'0 15px 40px 1px rgba(0,0,0,0.30)'}\r\n            />\r\n          </div>\r\n          <Time className=\"shadow\" ms={duration_ms} />\r\n        </div>\r\n        {this.state.mouseOver \r\n          ? <ActionOverlay trackAction={this.handleTrackAction} onPlayClick={this.handlePlay} inPlaylist={this.props.inPlaylist} />\r\n           : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Track;","import React from 'react';\r\nimport './TrackList.css'\r\n\r\nimport Track from '../Track/Track';\r\n\r\n\r\nconst TrackList = ({ trackAction, inPlaylist, tracklist, start, end }) => {\r\n\r\n  let indexTest = 0;\r\n\r\n  const getUrisList = () => {\r\n    const newList = [];\r\n    tracklist.map((track) => newList.push(track.uri));\r\n    return [newList, tracklist];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* eslint-disable-next-line array-callback-return */}\r\n      {tracklist.map((track, index) => { \r\n        if (index >= start && index <= end) {\r\n          indexTest++\r\n          return (\r\n            <Track\r\n              index={index}\r\n              track={track}\r\n              key={indexTest}\r\n              trackAction={trackAction}\r\n              inPlaylist={inPlaylist}\r\n              getUrisList={getUrisList}\r\n            />\r\n          )\r\n        }\r\n      })\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default TrackList;\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\n\r\nconst Button = ({ type, buttonAction, name}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"Button\" type={type} onClick={buttonAction} >{name}</button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport './Grid.css';\r\n\r\nconst Grid = ({children}) => {\r\n  return (\r\n    <div className=\"Grid\">\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;","import React, { PureComponent } from 'react';\r\nimport './NewPlaylist.css';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\n\r\nimport TrackList from '../../Components/TrackList/TrackList';\r\nimport Button from '../../Components/Buttons/Button/Button';\r\nimport Grid from '../../Components/Grid/Grid';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nclass NewPlaylist extends PureComponent {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      playlistName: ''\r\n    }\r\n  }\r\n\r\n  static contextType = ContextStore; \r\n\r\n  savePlayList = () => {\r\n    const { newPlaylist } = this.context;\r\n    const { playlistName } = this.state;\r\n    if (newPlaylist.length > 0 && playlistName.length > 0) {\r\n      const playlistUris = newPlaylist.map(track => track.uri);\r\n      SpotifyApi.sendPlayList(playlistName, playlistUris);\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ playlistName: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { newPlaylist, deleteTrack } = this.context;\r\n    return(\r\n      <div className=\"Playlist\">\r\n        <input\r\n          onChange={this.handleChange}\r\n          placeholder=\"Playlist\"/>\r\n        <Grid>\r\n          <TrackList\r\n            tracklist={newPlaylist}\r\n            trackAction={deleteTrack}\r\n            start={0}\r\n            end={Infinity}\r\n            inPlaylist\r\n          />          \r\n        </Grid>\r\n        <Button type=\"submit\" buttonAction={this.savePlayList} name=\"SAVE TO SPOTIFY\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewPlaylist;\r\n","import React, { useContext} from 'react';\r\nimport './CurrentPlaylist.css';\r\n\r\nimport TrackList from '../TrackList/TrackList';\r\nimport Grid from '../../Components/Grid/Grid';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nconst CurrentPlaylist = () => {\r\n\r\n  const context = useContext(ContextStore)\r\n  \r\n  return (\r\n    <Grid>\r\n      <TrackList\r\n        tracklist={context.currentPlaylist}\r\n        start={0}\r\n        end={Infinity}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default CurrentPlaylist;","import React from 'react';\r\nimport './Title.css';\r\n\r\nconst Title = ({ children }) => {\r\n  return (\r\n    <div className=\"Title\" >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport './Border.css';\r\n\r\nconst Border = () => {\r\n  return(\r\n    <div className=\"Border\"/>\r\n  )\r\n}\r\n\r\nexport default Border;","import React from 'react';\r\nimport './Header.css';\r\nimport Title from '../Title/Title';\r\nimport Button from '../Buttons/Button/Button';\r\nimport Border from '../Border/Border';\r\n\r\nconst Header = ({ children, buttonAction, name }) => {\r\n  return (\r\n    <div className=\"Header\" >\r\n      <Title>{children}</Title>\r\n      <Button type=\"button\" buttonAction={buttonAction} name={name} />\r\n      <Border />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React, { useState, useContext, useCallback } from 'react';\r\nimport './ResultsTracklist.css';\r\n\r\nimport TrackList from '../../Components/TrackList/TrackList';\r\nimport Header from '../../Components/Header/Header';\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nconst ResultsTracklist = ({ history }) => {\r\n  const context = useContext(ContextStore);\r\n\r\n  const [scrollTopPosition, updateScrollTopPosition] = useState(\r\n         100\r\n    );\r\n  const [expanded, toggleExpand] = useState(\r\n         false\r\n    );\r\n  const [visibleItems, updateVisibility] = useState({\r\n         start: 0,\r\n         end: 5\r\n  });\r\n\r\n  const handleToggleExpand = () => {\r\n    if (history.location.pathname === '/search/tracks') {\r\n      history.push('/search');\r\n      toggleExpand(false);\r\n      updateVisibility({ start: 0, end: 5 });\r\n      updateScrollTopPosition(300);\r\n    } else {\r\n      history.push('/search/tracks');\r\n      toggleExpand(true);\r\n      updateVisibility({ start: 0,  end: 15 });\r\n    }\r\n  };\r\n\r\n  const tracksWithPosition = (list) => {\r\n    let cList = [...list];    \r\n    cList.forEach((element, index) => {\r\n      element['position'] = getPosition(index);\r\n    });\r\n    return cList\r\n  }\r\n\r\n  const getPosition = (index) => {\r\n    let position;\r\n    if (index % 2 === 0) {\r\n      position = index * 50;\r\n      return { top: position, left: 0 }\r\n    } else {\r\n      position = (index - 1) * 50;\r\n      return { top: position, right: 0 }\r\n    }\r\n  };\r\n\r\n  const scrollPosition = (e) => {    \r\n    if (!expanded) return\r\n\r\n    if (e.target.scrollTop >= scrollTopPosition) {\r\n      updateVisibility({ start: visibleItems.start + 2, end: visibleItems.end + 2 });\r\n      updateScrollTopPosition(scrollTopPosition + 100)\r\n      //console.log(scrollTopPosition);\r\n    }\r\n\r\n    else if ((e.target.scrollTop + 100) <= scrollTopPosition) {\r\n      updateVisibility({ start: visibleItems.start - 2, end: visibleItems.end - 2 });\r\n      updateScrollTopPosition(scrollTopPosition - 100)\r\n    }\r\n  }\r\n\r\n  const memoTracksWithPosition = useCallback(() => {\r\n    return tracksWithPosition(context.tracks)\r\n  }, [context.tracks])\r\n\r\n  return (\r\n    <div className=\"ResultsTracklist\">\r\n      <Header name={expanded ? 'Less' : 'More' } buttonAction={handleToggleExpand}>Tracks</Header>\r\n      <div className=\"viewport\" onScroll={scrollPosition} style={{ height: expanded ? '675px' : '350px' }} >\r\n        <div className=\"list\" style={{ height: expanded ? (context.tracks.length * 50 ) + 100: '350px'  }}>\r\n          <TrackList\r\n            trackAction={context.addToNewPlaylist}\r\n            tracklist={memoTracksWithPosition()}\r\n            start={visibleItems.start}\r\n            end={visibleItems.end}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultsTracklist;\r\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\n\r\nimport Text from '../Text/Text';\r\nimport ActionOverlay, { ActionOverlayOpen } from '../ActionOverlay/ActionOverlay';\r\n\r\nconst Card = ({ playlist, openTracks, addToNewPlaylist, addToCurrentPlaylist }) => {\r\n\r\n  const onPlayClick = () => {\r\n    let uri;\r\n\r\n    if (playlist.uri.includes('user')) {\r\n      playlist.uri.split(':').splice(1, 2).join(':');\r\n      uri = playlist.uri;\r\n    } else {\r\n      uri = playlist.uri.split(':').slice(2).join(':');\r\n    }\r\n\r\n    SpotifyApi.playTrack('1', uri, playlist.type);\r\n    addToCurrentPlaylist(playlist.id, playlist)\r\n  }\r\n\r\n  const clickOnOverlay = (e) => {\r\n    if (e.target.className === 'Action-Overlay' ) {\r\n       openTracks(playlist.id, playlist);\r\n    }\r\n  }\r\n\r\n  const onAddClick = () => {\r\n    addToNewPlaylist(playlist.id, playlist);\r\n  }\r\n\r\n  return (\r\n    <div className={`Card ${playlist.type}`}  >\r\n      <div className={`Card-Img ${playlist.type}`} >\r\n        {playlist.images[0] ? <img src={playlist.images[0].url} alt=\"img\" /> : \"\"}\r\n      </div>\r\n      <Text name={playlist.name} />\r\n      {playlist.type !== undefined ?\r\n      <ActionOverlay\r\n        trackAction={onAddClick}\r\n        playlistType={playlist.type}\r\n        onPlayClick={onPlayClick}\r\n        clickOnOverlay={clickOnOverlay}\r\n        /> : <ActionOverlayOpen onOpen={() => openTracks(playlist.id, playlist)} /> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport './PlaylistDisplay.css';\r\n\r\nimport Card from '../../Components/Card/Card';\r\n\r\nconst PlaylistDisplay = ({ playlists, openTracks, addToNewPlaylist, addToCurrentPlaylist }) => {\r\n  return (\r\n    <div className=\"PlaylistDisplay\">\r\n      {playlists.map(playlist => {\r\n        return (\r\n          <Card\r\n            addToCurrentPlaylist={addToCurrentPlaylist}\r\n            addToNewPlaylist={addToNewPlaylist}\r\n            playlist={playlist}\r\n            id={playlist.id}\r\n            key={playlist.id}\r\n            openTracks={openTracks}\r\n          />)\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaylistDisplay;\r\n","import React, { useState, useContext, useEffect  } from 'react';\r\nimport './Albumslist.css';\r\n\r\nimport PlaylistDisplay from '../PlaylistDisplay/PlaylistDisplay';\r\nimport Header from '../../Components/Header/Header';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nconst Albumslist = ({ history })  => {\r\n\r\n  const context = useContext(ContextStore);\r\n\r\n  const [expand, toggleExpand] = useState(() => ({\r\n    expanded: false,\r\n    state: 'More',\r\n    results: 3\r\n  }));\r\n\r\n\r\n  const handleToggleExpand = () => {\r\n    history.location.pathname === '/search/albums' ? history.push('/search') : history.push('/search/albums');\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      history.location.pathname === '/search' ?\r\n        toggleExpand({ expanded: false, state: 'More', results: 3 })\r\n        :\r\n        toggleExpand({ expanded: true, state: 'Less', results: Infinity });\r\n    }, [history.location.pathname]\r\n  )\r\n\r\n  const getPlaylistTracks = (key, playlist) => {\r\n    let images = playlist.images\r\n    let newPlaylist = [];\r\n    return (\r\n      SpotifyApi.getPlaylist(key, 'spotifyAlbum')\r\n      .then((playlist) => {\r\n      playlist.map((item) => {\r\n        item['album'] = { images };\r\n        return newPlaylist.push(item);\r\n      });\r\n      return newPlaylist;\r\n    }));\r\n  }\r\n\r\n  const addToNewPlaylist = (key, playlist) => {\r\n    getPlaylistTracks(key, playlist).then((newPlaylist) => {\r\n      context.addToNewPlaylist(newPlaylist, 'tracklist')\r\n    });\r\n  }\r\n\r\n  const addToCurrentPlaylist = (key, playlist) => {\r\n    getPlaylistTracks(key, playlist).then((newPlaylist) => {\r\n      context.addToCurrentPlaylist(newPlaylist, 'tracklist')\r\n    });\r\n  }\r\n\r\n  const openTracks = (key, playlist) => {\r\n    getPlaylistTracks(key, playlist).then((newPlaylist) => {\r\n      context.updateState('tracks', newPlaylist);\r\n      history.push('/search/tracks')\r\n    });\r\n  }\r\n\r\n  return(\r\n    <div className=\"Albumslist\" >\r\n      <Header name={expand.state} buttonAction={handleToggleExpand}>Albums</Header>\r\n      <PlaylistDisplay\r\n        playlists={context.albums.slice(0, expand.results)} \r\n        addToCurrentPlaylist={addToCurrentPlaylist} \r\n        addToNewPlaylist={addToNewPlaylist}\r\n        openTracks={openTracks}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Albumslist;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport './Artists.css';\r\n\r\nimport PlaylistDisplay from '../PlaylistDisplay/PlaylistDisplay';\r\nimport Header from '../../Components/Header/Header';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nconst Artists = ({ history }) => {\r\n\r\n  const context = useContext(ContextStore);\r\n\r\n  const [expand, toggleExpand] = useState(() => ({\r\n    expanded: false,\r\n    state: 'More',\r\n    results: 3\r\n  }));\r\n\r\n  const handleToggleExpand = () => {\r\n    history.location.pathname === '/search/artists' ? history.push('/search') : history.push('/search/artists');\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      history.location.pathname === '/search' ?\r\n        toggleExpand({ expanded: false, state: 'More', results: 3 })\r\n        :\r\n        toggleExpand({ expanded: true, state: 'Less', results: Infinity });\r\n    }, [history.location.pathname]\r\n  )\r\n\r\n  const getPlaylistTracks = (key, playlist) => {\r\n    return (\r\n      SpotifyApi.getPlaylist(key, 'spotifyArtist')\r\n        .then((newPlaylist) => {\r\n          return newPlaylist\r\n        }));\r\n  };\r\n\r\n  const addToNewPlaylist = (key, playlist) => {\r\n    getPlaylistTracks(key, playlist).then((newPlaylist) => {\r\n      context.addToNewPlaylist(newPlaylist, 'tracklist')\r\n    });\r\n  }\r\n\r\n  const addToCurrentPlaylist = (key, playlist) => {\r\n    getPlaylistTracks(key, playlist).then((newPlaylist) => {\r\n      context.addToCurrentPlaylist(newPlaylist, 'tracklist')\r\n    });\r\n  }\r\n\r\n  const openTracks = (key, playlist) => {\r\n    getPlaylistTracks(key, playlist).then((newPlaylist) => {\r\n      context.updateState('tracks', newPlaylist);\r\n      history.push('/search/tracks')\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"Artists\" >\r\n      <Header name={expand.state} buttonAction={handleToggleExpand} artists>Artists</Header>\r\n      <PlaylistDisplay\r\n        playlists={context.artists.slice(0, expand.results)}\r\n        addToCurrentPlaylist={addToCurrentPlaylist}\r\n        addToNewPlaylist={addToNewPlaylist}\r\n        openTracks={openTracks}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Artists;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport './Playlists.css';\r\n\r\nimport PlaylistDisplay from '../PlaylistDisplay/PlaylistDisplay';\r\nimport Header from '../../Components/Header/Header';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\n\r\nconst Playlists = ({ history  }) => {\r\n\r\n  const context = useContext(ContextStore);\r\n\r\n  const [expand, toggleExpand] = useState(() => ({\r\n    expanded: false,\r\n    state: 'More',\r\n    results: 6\r\n  }));\r\n\r\n  const handleToggleExpand = () => {\r\n    history.location.pathname === '/search/playlists' ? history.push('/search') : history.push('/search/playlists');\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      history.location.pathname === '/search' ?\r\n        toggleExpand({ expanded: false, state: 'More', results: 6 })\r\n        :\r\n        toggleExpand({ expanded: true, state: 'Less', results: Infinity });\r\n    }, [history.location.pathname]\r\n  )\r\n\r\n  const getPlaylistTracks = (key, playlist) => {\r\n    const newPlaylist = [];\r\n    return (\r\n      SpotifyApi.getPlaylist(key, 'spotify')\r\n      .then((playlist) => {\r\n        playlist.map((playlist) => {\r\n          return newPlaylist.push(playlist.track)\r\n        })\r\n        return newPlaylist\r\n      }));\r\n  };\r\n\r\n  const addToNewPlaylist = (key, playlist) => {\r\n    getPlaylistTracks(key, playlist).then((newPlaylist) => {\r\n      context.addToNewPlaylist(newPlaylist, 'tracklist')\r\n    });\r\n  }\r\n\r\n  const addToCurrentPlaylist = (key, playlist) => {\r\n    getPlaylistTracks(key, playlist).then((newPlaylist) => {\r\n      context.addToCurrentPlaylist(newPlaylist, 'tracklist')\r\n    });\r\n  }\r\n\r\n  const openTracks = (key, playlist) => {\r\n    getPlaylistTracks(key, playlist).then((newPlaylist) => {\r\n      context.updateState('tracks', newPlaylist);\r\n      history.push('/search/tracks')\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"Playlists\" >\r\n      <Header name={expand.state} buttonAction={handleToggleExpand}>Playlists</Header>\r\n      <PlaylistDisplay \r\n        playlists={context.playlists.slice(0, expand.results)}\r\n        addToCurrentPlaylist={addToCurrentPlaylist}\r\n        addToNewPlaylist={addToNewPlaylist}\r\n        openTracks={openTracks}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Playlists;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './SearchResults.css';\r\n\r\nimport Grid from '../Grid/Grid';\r\n\r\nimport ResultsTracklist from '../../Containers/ResultsTracklist/ResultsTracklist';\r\nimport Albumslist from '../../Containers/Albumslist/Albumslist';\r\nimport Artists from '../../Containers/Artists/Artists';\r\nimport Playlists from '../../Containers/Playlists/Playlists';\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\n\r\nconst SearchResults = () => {\r\n  return (\r\n    <Grid>\r\n      <Switch>\r\n        <Route exact path=\"/search\" render={(props) => (\r\n          <>\r\n          <Playlists key={1} {...props} />\r\n          <ResultsTracklist key={2} {...props} />\r\n          <Albumslist key={3} {...props} />\r\n          <Artists key={4}  {...props} />\r\n          </>)} \r\n        />\r\n        <Route path=\"/search/no-results\" render={() => <h1 style={{fontSize: '30px', marginTop: '30px'}}>No results</h1>} />\r\n        <Route path=\"/search/playlists\" render={(props) => <Playlists key={1} {...props} /> } />\r\n        <Route path=\"/search/tracks\" render={(props) => <ResultsTracklist key={2} {...props} /> } />\r\n        <Route path=\"/search/albums\" render={(props) => <Albumslist key={3} {...props} /> } />\r\n        <Route path=\"/search/artists\" render={(props) => <Artists key={4}  {...props} /> } />\r\n      </Switch>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nexport default SearchResults;\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n","import React, { PureComponent } from 'react';\r\nimport './Library.css';\r\n\r\nimport PlaylistDisplay from '../PlaylistDisplay/PlaylistDisplay';\r\nimport Grid from '../../Components/Grid/Grid';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nimport SpotifyApi from './../../util/Spotify';\r\n\r\nclass Library extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playlists: [],\r\n      istrackList: false,\r\n      results: 6\r\n    }\r\n  }\r\n\r\n  static contextType = ContextStore;\r\n\r\n  componentWillMount() {\r\n    SpotifyApi.browserSpotify().then((playlists) => {\r\n      this.setState({ playlists: playlists });\r\n    })\r\n  }\r\n\r\n  traverse = (playlists) => {\r\n    if (this.state.istrackList === true) {\r\n      this.props.addToCurrentPlaylist(playlists)\r\n    } else {\r\n      this.setState({ playlists: playlists, istrackList: true });\r\n    }\r\n  }\r\n\r\n  getPlaylistTracks = (key, playlist) => {\r\n    const newPlaylist = [];\r\n    return SpotifyApi.getPlaylist(key, 'spotify').then((playlists) => {\r\n      playlists.map((playlist) => {\r\n        return newPlaylist.push(playlist.track);\r\n      })\r\n      return newPlaylist;\r\n    });\r\n  }\r\n\r\n  getCategoriePlaylists = (playlist) => {\r\n    SpotifyApi.getCategoriePlaylist(playlist.id).then((playlists) => {\r\n      this.setState({ playlists: playlists, istrackList: true });\r\n    });\r\n  }\r\n\r\n  openTracks = (key, playlist) => {\r\n    if (playlist.type === undefined) {\r\n      return this.getCategoriePlaylists(playlist)\r\n    }\r\n    this.getPlaylistTracks(key, playlist).then((newPlaylist) => {\r\n      this.context.updateState('tracks', newPlaylist);\r\n      this.props.history.push('/search/tracks')\r\n    });\r\n  } \r\n\r\n  addToNewPlaylist = (key, playlist) => {\r\n    this.getPlaylistTracks(key, playlist).then((newPlaylist) => {\r\n      this.context.addToNewPlaylist(newPlaylist, 'tracklist')\r\n    });\r\n  }\r\n\r\n  addToCurrentPlaylist = (key, playlist) => {\r\n    this.getPlaylistTracks(key, playlist).then((newPlaylist) => {\r\n      this.context.addToCurrentPlaylist(newPlaylist, 'tracklist')\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { playlists, istrackList } = this.state;\r\n    return (\r\n      <Grid>\r\n        <PlaylistDisplay\r\n          playlists={playlists}\r\n          history={this.props.history}\r\n          istrackList={istrackList}\r\n          addToCurrentPlaylist={this.addToCurrentPlaylist}\r\n          addToNewPlaylist={this.addToNewPlaylist}\r\n          openTracks={this.openTracks}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Library;\r\n","import React, { PureComponent } from 'react';\r\nimport './UserPlaylists.css';\r\n\r\nimport PlaylistDisplay from '../../Containers/PlaylistDisplay/PlaylistDisplay';\r\nimport Grid from '../../Components/Grid/Grid';\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nimport SpotifyApi from './../../util/Spotify';\r\n\r\nclass UserPlaylists extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userPlaylists: []\r\n    }\r\n  }\r\n  \r\n  static contextType = ContextStore;\r\n\r\n  componentWillMount() {\r\n    SpotifyApi.getPlaylist().then((playlists) => {\r\n      this.setState({ userPlaylists: playlists });\r\n    })\r\n  }\r\n\r\n  getPlaylistTracks = (key, playlist) => {\r\n    const newPlaylist = [];\r\n    return (\r\n      SpotifyApi.getPlaylist(key, 'spotify')\r\n        .then((playlist) => {\r\n          playlist.map((playlist) => {\r\n            return newPlaylist.push(playlist.track)\r\n          })\r\n          return newPlaylist\r\n        }));\r\n  };\r\n\r\n  addToNewPlaylist = (key, playlist) => {\r\n    this.getPlaylistTracks(key, playlist).then((newPlaylist) => {\r\n      this.context.addToNewPlaylist(newPlaylist, 'tracklist')\r\n    });\r\n  }\r\n\r\n  addToCurrentPlaylist = (key, playlist) => {\r\n    this.getPlaylistTracks(key, playlist).then((newPlaylist) => {\r\n      this.context.addToCurrentPlaylist(newPlaylist, 'tracklist')\r\n    });\r\n  }\r\n\r\n  openTracks = (key, playlist) => {\r\n    this.getPlaylistTracks(key, playlist).then((newPlaylist) => {\r\n      this.context.updateState('tracks', newPlaylist);\r\n      this.props.history.push('/search/tracks')\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const { userPlaylists } = this.state; \r\n    return (\r\n      <Grid>\r\n        <PlaylistDisplay \r\n          playlists={userPlaylists} \r\n          addToCurrentPlaylist={this.addToCurrentPlaylist}\r\n          addToNewPlaylist={this.addToNewPlaylist}\r\n          openTracks={this.openTracks}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPlaylists;","import React, { PureComponent } from 'react';\r\nimport './Main.css';\r\n\r\nimport SearchResults from '../../Components/SearchResults/SearchResults';\r\nimport NewPlaylist from '../NewPlaylist/NewPlaylist';\r\nimport CurrentPlaylist from '../../Components/CurrentPlaylist/CurrentPlaylist';\r\nimport Library from '../Library/Library';\r\nimport UserPlaylists from '../UserPlaylists/UserPlaylists';\r\n// import Playlist from '../../Components/Playlist/Playlist';\r\n// import ResultsTracklist from '../ResultsTracklist/ResultsTracklist';\r\n// import Albumslist from '../Albumslist/Albumslist';\r\n// import Artists from '../Artists/Artists';\r\n// import Playlists from '../Playlists/Playlists';\r\nimport { ContextStore} from '../../Context/MainContext';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nclass Main extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.scrollHeight = 600;\r\n    this.offset = 50;\r\n  }\r\n\r\n  static contextType = ContextStore;\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.history.location.pathname === '/search') {\r\n      this.offset = 50;\r\n      this.scrollHeight = 600;\r\n    };\r\n  }\r\n\r\n  loadOnScroll = (e) => {\r\n    if (!this.props.history.location.pathname.startsWith('/search/')) {\r\n      return // temp fix\r\n    };\r\n    \r\n    const search = this.props.location.pathname.split('/')[1];\r\n    if (this.scrollHeight <= e.target.scrollTop && search === 'search' ) {\r\n      this.scrollHeight += 1200;\r\n      this.offset += 50; \r\n      this.loadMore()\r\n    }\r\n  }\r\n\r\n  loadMore = () => {\r\n    const { searchTerm, searchMore } = this.context;\r\n    const route = this.props.location.pathname.split('/')[2];\r\n    SpotifyApi.nextResults(searchTerm, this.offset, route).then((results) => {\r\n      searchMore(results, route);\r\n    })    \r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"Main\" onScroll={this.loadOnScroll}  >\r\n        <Switch>\r\n          <Route path=\"/search/\" render={(props) => (\r\n            <SearchResults {...props} /> )}/>\r\n          <Route path=\"/currentPlaylist\" render={(props) => (\r\n            <CurrentPlaylist {...props} /> )} />\r\n          <Route path=\"/newPlaylist\" render={(props) => (\r\n            <NewPlaylist {...props} /> )} />\r\n          <Route path=\"/library\" render={(props) => (\r\n            <Library {...props} /> )} />\r\n          <Route path=\"/userPlaylists\" render={(props) => (\r\n            <UserPlaylists {...props} /> )} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Main;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './ProgressionBar.css';\r\n\r\nconst ProgressionBar = ({ currentPostion, sliderAction, maxValue, handleMouseUp }) => {\r\n  return(\r\n    <div className=\"Bar-container\">\r\n      <input className=\"Bar\" \r\n        onMouseUp={handleMouseUp}\r\n        onChange={sliderAction} \r\n        step='1' \r\n        type=\"range\" \r\n        min=\"1\" \r\n        value={currentPostion} \r\n        max={maxValue}/>\r\n        <div className=\"progression\" style={{ width: `${(100 / maxValue) * currentPostion}%` }} />      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProgressionBar;\r\n","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPause } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst PauseButton = ({ onPlayClick }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"play-pause\" onClick={onPlayClick} >\r\n        <FontAwesomeIcon className=\"button\" icon={faPause} size=\"lg\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PauseButton;","import React from 'react';\r\nimport './ForwardButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faForward } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ForwardButton = ({ onForward }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"forward\" onClick={onForward} >\r\n        <FontAwesomeIcon className=\"button\" icon={faForward} size=\"sm\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ForwardButton;","import React from 'react';\r\nimport './BackwardButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBackward } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst BackwardButton = ({ onBackward }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"back\" onClick={onBackward} >\r\n        <FontAwesomeIcon className=\"button\" icon={faBackward} size=\"sm\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default BackwardButton;","import React from 'react';\r\nimport './PlaylistButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faListUl } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst PlaylistButton = ({ togglePlaylist }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"Playlist-Button\" >\r\n        <FontAwesomeIcon icon={faListUl} onClick={togglePlaylist} />  \r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PlaylistButton;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport './TrackProgression.css';\r\n\r\nimport ProgressionBar from '../../Components/ProgressionBar/ProgressionBar';\r\nimport Time from '../../Components/Time/Time';\r\n\r\nconst TrackProgression = ({ playing, duration, player, basePosition }) => {\r\n\r\n  const [position, setPosition] = useState(basePosition);\r\n  const [timer, setTimer] = useState(null);\r\n\r\n  const getPlayerCurrentstate = useCallback(() => {\r\n    if (!playing) {\r\n      return\r\n    }\r\n\r\n    player.getCurrentState()\r\n    .then((state) => {\r\n      setPosition(state.position)\r\n    });\r\n    \r\n  }, [playing]);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (playing) {\r\n        setTimer(setInterval(() => getPlayerCurrentstate(), 500));\r\n      } else {\r\n        setTimer(clearInterval(timer));\r\n      }           \r\n      return () => {\r\n        setTimer(clearInterval(timer));\r\n      };\r\n    },\r\n    [playing],\r\n  );\r\n\r\n  const onSeek = (e) => {\r\n    setTimer(clearInterval(timer));\r\n    setPosition(e.target.value);\r\n  }\r\n\r\n  const handleMouseUp = (e) => {\r\n    player.seek(position)\r\n    .then(() => {\r\n      setTimer(setInterval(() => getPlayerCurrentstate(), 500));\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"Track-Progression\" >\r\n      <Time ms={position} />\r\n      <div className=\"Track-Bar\">\r\n        <ProgressionBar currentPostion={position} sliderAction={onSeek} maxValue={duration} handleMouseUp={handleMouseUp} />\r\n      </div>\r\n      <Time ms={duration} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrackProgression;\r\n","import React, { PureComponent } from 'react';\r\nimport './Player.css';\r\n\r\nimport ProgressionBar from '../../Components/ProgressionBar/ProgressionBar';\r\nimport Text from '../../Components/Text/Text';\r\nimport PlayButton from '../../Components/Buttons/PlayButton/PlayButton';\r\nimport PauseButton from '../../Components/Buttons/PauseButton/PauseButton';\r\nimport ForwardButton from '../../Components/Buttons/ForwardButton/ForwardButton';\r\nimport BackwardButton from '../../Components/Buttons/BackwardButton/BackwardButton';\r\nimport PlaylistButton from '../../Components/Buttons/PlaylistButton/PlaylistButton';\r\nimport TrackProgression from '../../Components/TrackProgression/TrackProgression';\r\nimport CurrentPlaylist from '../../Components/CurrentPlaylist/CurrentPlaylist';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faVolumeUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Player extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token: \"\",\r\n      deviceId: \"\",\r\n      loggedIn: true,\r\n      playing: false,\r\n      error: \"\",\r\n      currentTrack: '',\r\n      trackName: '',\r\n      artistName: '',\r\n      albumName: '',\r\n      position: 0,\r\n      duration: 0,\r\n      volume: 0,\r\n      mute: false,\r\n      showPlaylist: false\r\n    }\r\n\r\n    this.playerCheckInterval = null;\r\n    this.getPlayerStateTimer = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ token: SpotifyApi.getAccesToken() });\r\n    this.playerCheckInterval = setInterval(() => this.checkForPlayer(), 800);\r\n  }\r\n\r\n  checkForPlayer = () => {\r\n    const { token } = this.state;\r\n    if (window.Spotify !== null) {\r\n      clearInterval(this.playerCheckInterval);\r\n      this.player = new window.Spotify.Player({ name: \"SpotifyClone\", getOAuthToken: cb => { cb(token) } });\r\n      this.createEventHandlers();\r\n      this.player.connect();\r\n    }\r\n  }\r\n\r\n  createEventHandlers = () => {\r\n    this.player.on('initialization_error', e => console.error(e));\r\n    this.player.on('authentication_error', e => console.error(e));\r\n    this.player.on('account_error', e => console.error(e));\r\n    this.player.on('playback_error', e => console.error(e));\r\n    this.player.on('player_state_changed', state => this.onStateChanged(state));\r\n    this.player.on('ready', data => {\r\n      let { device_id } = data;\r\n      this.setState({ deviceId: device_id });\r\n      SpotifyApi.transferPlaybackHere(device_id)\r\n    });\r\n  }\r\n\r\n  onStateChanged = (state) => {\r\n\r\n    if (state !== null) {\r\n      const { current_track } = state.track_window;\r\n      const trackName = current_track.name;\r\n      const albumName = current_track.album.name;\r\n      const artistName = current_track.artists.map(artist => artist.name).join(\", \");\r\n      const playing = !state.paused;\r\n      const duration = current_track.duration_ms;\r\n      this.setState({\r\n        currentTrack: current_track,\r\n        duration: duration,\r\n        trackName: trackName,\r\n        albumName: albumName,\r\n        artistName: artistName,\r\n        playing: playing\r\n      });\r\n      this.player.getVolume().then(volume => this.setState({ volume: volume * 100 }));\r\n    }\r\n  }\r\n\r\n  getPlayerCurrentstate = () => {\r\n    this.player.getCurrentState().then((state) => this.setState({ position: state.position}));\r\n  }\r\n\r\n  onPrevClick = () => {\r\n    this.player.previousTrack();\r\n  }\r\n\r\n  onPlayClick = () => {\r\n    this.player.togglePlay();\r\n  }\r\n\r\n  onNextClick = () => {\r\n    this.player.nextTrack();\r\n  }\r\n\r\n  onVolumeClick = (e) => {\r\n    let volume = e.target.value;\r\n    this.player.setVolume(volume/100).then(() => this.setState( { volume: volume } ));\r\n  }\r\n\r\n  toggleMute = (e) => {\r\n    if (!this.state.mute) {\r\n      this.player.setVolume(0);\r\n      this.setState({ mute: true })\r\n    } else {\r\n      this.player.setVolume(this.state.volume/100);\r\n      this.setState({ mute: false });\r\n    }\r\n  }\r\n\r\n  togglePlaylist = (e) => {\r\n    this.setState((state) => {\r\n      return { showPlaylist: !state.showPlaylist } \r\n    });\r\n  }\r\n\r\n  render() { \r\n    const { playing, currentTrack, volume, duration, position, artistName, trackName, showPlaylist } = this.state;\r\n    return(\r\n      <div className=\"Player\">\r\n        <div className=\"Track-info\">\r\n          <Text track={currentTrack} \r\n            name={trackName} \r\n            artist={artistName}\r\n            textSize={'1rem'}\r\n            overfl={'visible'}\r\n          />\r\n        </div>\r\n        <div className=\"Control\">\r\n          <div className=\"Player-buttons\">\r\n            <BackwardButton onBackward={this.onPrevClick} />\r\n            {!playing ? <PlayButton onPlayClick={this.onPlayClick} /> : <PauseButton onPlayClick={this.onPlayClick} />}\r\n            <ForwardButton onForward={this.onNextClick} />\r\n          </div>\r\n          <TrackProgression\r\n            basePosition={position}\r\n            player={this.player}\r\n            playing={playing}\r\n            duration={duration}\r\n          /> \r\n        </div>\r\n        <div className=\"Control-Leftside\">\r\n          {showPlaylist ?\r\n            <div className=\"Current-Playlist-Container\" >\r\n              <CurrentPlaylist playlist={this.props.currentPlaylist} />\r\n            </div> : null}\r\n          <PlaylistButton togglePlaylist={this.togglePlaylist} />\r\n          <div className=\"volume\">\r\n            <FontAwesomeIcon icon={faVolumeUp} size=\"sm\" onClick={this.toggleMute} />\r\n            <div className=\"volume-bar\">\r\n              <ProgressionBar currentPostion={volume} sliderAction={this.onVolumeClick} maxValue={\"100\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import React, { PureComponent } from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport SearchBar from './Containers/SearchBar/SearchBar';\r\nimport Navigation from './Components/Navigation/Navigation';\r\nimport NewPlaylist from './Containers/NewPlaylist/NewPlaylist';\r\nimport CurrentPlaylist from './Components/CurrentPlaylist/CurrentPlaylist';\r\nimport Main from './Containers/Main/Main';\r\nimport Player from './Containers/Player/Player';\r\nimport Library from './Containers/Library/Library';\r\nimport UserPlaylists from './Containers/UserPlaylists/UserPlaylists';\r\nimport SpotifyApi from './util/Spotify';\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass App extends PureComponent {\r\n  componentDidMount() {\r\n    SpotifyApi.getAccesToken();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <SearchBar \r\n          history={this.props.history} //temp  <----    workaround\r\n          location={this.props.location} //temp <----  \r\n        />\r\n        <Navigation />\r\n        <Main\r\n          history={this.props.history} //temp  <----    workaround\r\n          location={this.props.location} //temp <----  \r\n        >\r\n          <CurrentPlaylist />\r\n          <NewPlaylist />\r\n          <Library />\r\n          <UserPlaylists />\r\n        </Main>\r\n        <Player />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { MainContext } from './Context/MainContext';\r\n\r\n\r\n// if (process.env.NODE_ENV !== 'production') {\r\n//   const { whyDidYouUpdate } = require('why-did-you-update')\r\n//   whyDidYouUpdate(React)\r\n// }\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <MainContext>\r\n      <App />\r\n    </MainContext>\r\n  </BrowserRouter>,\r\n   document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}