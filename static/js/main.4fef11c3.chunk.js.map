{"version":3,"sources":["util/Spotify.js","Context/MainContext.js","Containers/SearchBar/SearchBar.js","Components/Navbar/Navbar.js","Components/Text/Text.js","Components/Time/Time.js","Components/Buttons/PlayButton/PlayButton.js","Components/Buttons/AddButton/AddButton.js","Components/Buttons/DeleteButton/DeleteButton.js","Components/ActionOverlay/ActionOverlay.js","Components/Track/Track.js","Components/Grid/Grid.js","Components/TrackList/TrackList.js","Components/Buttons/Button/Button.js","Containers/NewPlaylist/NewPlaylist.js","Components/CurrentPlaylist/CurrentPlaylist.js","Components/SearchResults/SearchResults.js","Components/Title/Title.js","Components/Border/Border.js","Components/Header/Header.js","Containers/ResultsTracklist/ResultsTracklist.js","Components/Card/Card.js","Containers/PlaylistDisplay/PlaylistDisplay.js","Containers/Albumslist/Albumslist.js","Containers/Artists/Artists.js","Containers/Playlists/Playlists.js","Containers/Main/Main.js","Components/ProgressionBar/ProgressionBar.js","Components/Buttons/PauseButton/PauseButton.js","Components/Buttons/ForwardButton/ForwardButton.js","Components/Buttons/BackwardButton/BackwardButton.js","Components/Buttons/PlaylistButton/PlaylistButton.js","Components/TrackProgression/TrackProgression.js","Containers/Player/Player.js","Containers/Library/Library.js","Containers/UserPlaylists/UserPlaylists.js","App.js","registerServiceWorker.js","index.js"],"names":["userAccesToken","SpotifyApi","getAccesToken","accessTokenPara","window","location","href","match","expiresInPara","expiresIn","Number","setTimeout","history","pushState","authorizeUrl","concat","getUserId","_getUserId","Object","asyncToGenerator","regenerator_default","a","mark","_callee","access","authorization","userId","response","jsonResponse","wrap","_context","prev","next","Authorization","fetch","headers","sent","ok","json","id","abrupt","t0","console","log","stop","this","apply","arguments","searchPlaylists","_searchPlaylists","_callee2","searchTerm","offset","limit","playlists","_args2","_context2","length","undefined","items","_x","searchArtists","_searchArtists","_callee3","artists","_args3","_context3","_x2","searchAlbums","_searchAlbums","_callee4","albums","_args4","_context4","_x3","searchTracks","_searchTracks","_callee5","url","tracks","_args5","_context5","_x4","fullSearch","_fullSearch","_callee6","resultsList","_context6","t1","t2","t3","_x5","nextResults","_nextResults","_callee7","type","_context7","_x6","_x7","_x8","sendPlayList","_sendPlayList","_callee8","playlistName","playlistUris","playlistId","_context8","method","body","JSON","stringify","name","uris","_x9","_x10","transferPlaybackHere","_transferPlaybackHere","_callee9","deviceId","_context9","Content-Type","device_ids","play","_x11","getPlaylist","_getPlaylist","_callee10","playlist","_args10","_context10","user","spotify","spotifyAlbum","playTrack","_playTrack","_callee11","postion","_args11","_context11","context_uri","uri","_x12","browserSpotify","_browserSpotify","_callee12","rearrangedItems","_context12","categories","map","item","icons","fetchSpotify","_fetchSpotify","_callee13","_context13","_x13","getCategoriePlaylist","_getCategoriePlaylist","_callee14","categoryId","_context14","_x14","ContextStore","createContext","MainContext","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateState","property","newState","setState","defineProperty","searchSpotify","then","results","searchMore","newResults","route","state","toConsumableArray","addToNewPlaylist","track","newPlaylist","filter","element","addToCurrentPlaylist","currentPlaylist","deleteTrack","scrollHeight","inherits","createClass","key","value","react_default","createElement","Provider","children","Component","SearchBar","handleSearchTerm","e","target","context","clearTimeout","delay","search","pathname","push","className","onChange","placeholder","Link","to","index_es","icon","faSearch","onClick","submitSearch","PureComponent","contextType","Navbar","NavLink","faAlignJustify","faPlusSquare","faTh","faListUl","Text","_ref","artist","textSize","overfl","style","fontSize","overflow","Time","ms","minute","seconds","fullSeconds","Math","floor","slice","trackTime","PlayButton","onPlayClick","Fragment","faPlay","size","AddButton","onAdd","faPlus","DeleteButton","onDelete","faMinus","ActionOverlay","trackAction","inPlaylist","Buttons_DeleteButton_DeleteButton","Buttons_AddButton_AddButton","Buttons_PlayButton_PlayButton","Track","handlePlay","urisList","getUrisList","handleTrackAction","_this$props$track","album","duration_ms","images","src","alt","Components_Text_Text","Components_Time_Time","Components_ActionOverlay_ActionOverlay","Grid","TrackList","tracklist","newList","Components_Grid_Grid","Components_Track_Track","Button","buttonAction","NewPlaylist","savePlayList","handleChange","_this$context","Components_TrackList_TrackList","Buttons_Button_Button","CurrentPlaylist","SearchResults","Switch","Route","exact","path","render","Title","Border","Header","Components_Title_Title","Components_Border_Border","ResultsTracklist","addToPlaylist","useContext","_useState","useState","expanded","_useState2","slicedToArray","expand","toggleExpand","Components_Header_Header","Infinity","Card","handleOnclick","split","join","PlaylistDisplay","traverse","libary","secondPram","Components_Card_Card","Albumslist","Containers_PlaylistDisplay_PlaylistDisplay","Artists","Playlists","Main","loadOnScroll","scrollTop","_this2","onScroll","Components_SearchResults_SearchResults","Containers_Playlists_Playlists","assign","Containers_ResultsTracklist_ResultsTracklist","Containers_Albumslist_Albumslist","Containers_Artists_Artists","ProgressionBar","currentPostion","sliderAction","maxValue","handleMouseUp","onMouseUp","step","min","max","width","PauseButton","faPause","ForwardButton","onForward","faForward","BackwardButton","onBackward","faBackward","PlaylistButton","togglePlaylist","TrackProgression","Player","checkForPlayer","token","Spotify","clearInterval","playerCheckInterval","player","getOAuthToken","cb","createEventHandlers","connect","getPlayerStateTimer","setInterval","getPlayerCurrentstate","on","error","onStateChanged","data","device_id","current_track","track_window","trackName","albumName","artistName","playing","paused","duration","currentTrack","getVolume","volume","getCurrentState","position","onPrevClick","previousTrack","togglePlay","onNextClick","nextTrack","onVolumeClick","setVolume","onSeek","seek","toggleMute","mute","showPlaylist","loggedIn","_this$state","Buttons_BackwardButton_BackwardButton","Buttons_PauseButton_PauseButton","Buttons_ForwardButton_ForwardButton","Components_TrackProgression_TrackProgression","Components_ProgressionBar_ProgressionBar","visibility","Components_CurrentPlaylist_CurrentPlaylist","Buttons_PlaylistButton_PlaylistButton","faVolumeUp","Library","istrackList","UserPlaylists","userPlaylists","App","Containers_SearchBar_SearchBar","Components_Navbar_Navbar","Containers_Main_Main","Containers_NewPlaylist_NewPlaylist","Containers_Library_Library","Containers_UserPlaylists_UserPlaylists","Containers_Player_Player","withRouter","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","BrowserRouter","MainContext_MainContext","src_App_0","document","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"wzBACIA,oIAEEC,EAAa,CAEjBC,cAFiB,WAGf,GAA6B,qBAAnBF,EACR,OAAOA,EAGT,IAAMG,EAAkBC,OAAOC,SAASC,KAAKC,MAAM,wBAC7CC,EAAgBJ,OAAOC,SAASC,KAAKC,MAAM,sBAEjD,GAAIJ,GAAmBK,EAAe,CACpCR,EAAiBG,EAAgB,GACjC,IAAMM,EAAYC,OAAOF,EAAc,IAGvC,OAFAJ,OAAOO,WAAW,kBAAMX,EAAiB,IAAgB,IAAZS,GAC7CL,OAAOQ,QAAQC,UAAU,eAAgB,KAAM,KACxCb,EAEP,IAAMc,EAAY,oDAAAC,OApBP,mCAoBO,yMAClBX,OAAOC,SAAWS,GAIhBE,UAtBW,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAuBTR,EAASvB,EAAWC,gBACpBuB,EAAgB,CAACQ,cAAa,UAAAlB,OAAYS,IAC5CE,EAAS,GAzBEI,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EA4BUE,MAAM,gCAAiC,CAC5DC,QAASV,IA7BE,YA4BPE,EA5BOG,EAAAM,MAgCDC,GAhCC,CAAAP,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAiCgBL,EAASW,OAjCzB,eAiCLV,EAjCKE,EAAAM,KAkCXV,EAASE,EAAaW,GAlCXT,EAAAU,OAAA,SAmCJd,GAnCI,QAAAI,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAuCbY,QAAQC,IAARb,EAAAW,IAvCa,yBAAAX,EAAAc,SAAArB,EAAAsB,KAAA,sCAAA5B,EAAA6B,MAAAD,KAAAE,YAAA,GA2CXC,gBA3CW,eAAAC,EAAA/B,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAA4B,EA2CKC,GA3CL,IAAAC,EAAAC,EAAA7B,EAAAC,EAAAE,EAAA2B,EAAAC,EAAAR,UAAA,OAAA3B,EAAAC,EAAAQ,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cA2CiBoB,EA3CjBG,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GA2C0B,EAAGF,EA3C7BE,EAAAE,OAAA,QAAAC,IAAAH,EAAA,GAAAA,EAAA,GA2CqC,GA3CrCC,EAAAxB,KAAA,EA4CM/B,EAAWC,gBA5CjB,cA4CTsB,EA5CSgC,EAAApB,KA6CTX,EAAgB,CAAEQ,cAAa,UAAAlB,OAAYS,IA7ClCgC,EAAAzB,KAAA,EAAAyB,EAAAxB,KAAA,EAgDUE,MAAK,uCAAAnB,OAAwCoC,EAAxC,yBAAApC,OAA0EsC,EAA1E,YAAAtC,OAA0FqC,GAAU,CAC9HjB,QAASV,IAjDE,YAgDPE,EAhDO6B,EAAApB,MAmDAC,GAnDA,CAAAmB,EAAAxB,KAAA,gBAAAwB,EAAAxB,KAAA,GAoDaL,EAASW,OApDtB,eAoDLgB,EApDKE,EAAApB,KAAAoB,EAAAhB,OAAA,SAqDJc,EAAUA,UAAUK,OArDhB,QAAAH,EAAAxB,KAAA,iBAAAwB,EAAAzB,KAAA,GAAAyB,EAAAf,GAAAe,EAAA,SAyDbd,QAAQC,IAARa,EAAAf,IAzDa,yBAAAe,EAAAZ,SAAAM,EAAAL,KAAA,6BAAAe,GAAA,OAAAX,EAAAH,MAAAD,KAAAE,YAAA,GA6DXc,cA7DW,eAAAC,EAAA5C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAyC,EA6DGZ,GA7DH,IAAAC,EAAAC,EAAA7B,EAAAC,EAAAE,EAAAqC,EAAAC,EAAAlB,UAAA,OAAA3B,EAAAC,EAAAQ,KAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cA6DeoB,EA7Dfa,EAAAR,OAAA,QAAAC,IAAAO,EAAA,GAAAA,EAAA,GA6DwB,EAAGZ,EA7D3BY,EAAAR,OAAA,QAAAC,IAAAO,EAAA,GAAAA,EAAA,GA6DmC,GA7DnCC,EAAAlC,KAAA,EA8DM/B,EAAWC,gBA9DjB,cA8DTsB,EA9DS0C,EAAA9B,KA+DTX,EAAgB,CAAEQ,cAAa,UAAAlB,OAAYS,IA/DlC0C,EAAAnC,KAAA,EAAAmC,EAAAlC,KAAA,EAkEUE,MAAK,uCAAAnB,OAAwCoC,EAAxC,uBAAApC,OAAwEsC,EAAxE,YAAAtC,OAAwFqC,GAAU,CAC5HjB,QAASV,IAnEE,YAkEPE,EAlEOuC,EAAA9B,MAqEAC,GArEA,CAAA6B,EAAAlC,KAAA,gBAAAkC,EAAAlC,KAAA,GAsEWL,EAASW,OAtEpB,eAsEL0B,EAtEKE,EAAA9B,KAAA8B,EAAA1B,OAAA,SAuEJwB,EAAQA,QAAQL,OAvEZ,QAAAO,EAAAlC,KAAA,iBAAAkC,EAAAnC,KAAA,GAAAmC,EAAAzB,GAAAyB,EAAA,SA2EbxB,QAAQC,IAARuB,EAAAzB,IA3Ea,yBAAAyB,EAAAtB,SAAAmB,EAAAlB,KAAA,6BAAAsB,GAAA,OAAAL,EAAAhB,MAAAD,KAAAE,YAAA,GAgFXqB,aAhFW,eAAAC,EAAAnD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAgD,EAgFEnB,GAhFF,IAAAC,EAAAC,EAAA7B,EAAAC,EAAAE,EAAA4C,EAAAC,EAAAzB,UAAA,OAAA3B,EAAAC,EAAAQ,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAgFcoB,EAhFdoB,EAAAf,OAAA,QAAAC,IAAAc,EAAA,GAAAA,EAAA,GAgFuB,EAAGnB,EAhF1BmB,EAAAf,OAAA,QAAAC,IAAAc,EAAA,GAAAA,EAAA,GAgFkC,GAhFlCC,EAAAzC,KAAA,EAiFM/B,EAAWC,gBAjFjB,cAiFTsB,EAjFSiD,EAAArC,KAkFTX,EAAgB,CAAEQ,cAAa,UAAAlB,OAAYS,IAlFlCiD,EAAA1C,KAAA,EAAA0C,EAAAzC,KAAA,EAqFUE,MAAK,uCAAAnB,OAAwCoC,EAAxC,sBAAApC,OAAuEsC,EAAvE,YAAAtC,OAAuFqC,GAAU,CAC3HjB,QAASV,IAtFE,YAqFPE,EArFO8C,EAAArC,MAwFAC,GAxFA,CAAAoC,EAAAzC,KAAA,gBAAAyC,EAAAzC,KAAA,GAyFUL,EAASW,OAzFnB,eAyFLiC,EAzFKE,EAAArC,KAAAqC,EAAAjC,OAAA,SA0FJ+B,EAAOA,OAAOZ,OA1FV,QAAAc,EAAAzC,KAAA,iBAAAyC,EAAA1C,KAAA,GAAA0C,EAAAhC,GAAAgC,EAAA,SA8Fb/B,QAAQC,IAAR8B,EAAAhC,IA9Fa,yBAAAgC,EAAA7B,SAAA0B,EAAAzB,KAAA,6BAAA6B,GAAA,OAAAL,EAAAvB,MAAAD,KAAAE,YAAA,GAkGX4B,aAlGW,eAAAC,EAAA1D,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAuD,EAkGE1B,GAlGF,IAAAC,EAAAC,EAAA7B,EAAAC,EAAAqD,EAAAnD,EAAAoD,EAAAC,EAAAjC,UAAA,OAAA3B,EAAAC,EAAAQ,KAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAkGcoB,EAlGd4B,EAAAvB,OAAA,QAAAC,IAAAsB,EAAA,GAAAA,EAAA,GAkGsB,EAAG3B,EAlGzB2B,EAAAvB,OAAA,QAAAC,IAAAsB,EAAA,GAAAA,EAAA,GAkGgC,GAlGhCC,EAAAjD,KAAA,EAmGM/B,EAAWC,gBAnGjB,cAmGTsB,EAnGSyD,EAAA7C,KAoGTX,EAAgB,CAAEQ,cAAa,UAAAlB,OAAYS,IAC7CsD,EArGW,uCAAA/D,OAqGkCoC,EArGlC,sBAAApC,OAqGiEsC,EArGjE,YAAAtC,OAqGiFqC,GArGjF6B,EAAAlD,KAAA,EAAAkD,EAAAjD,KAAA,GAwGUE,MAAM4C,EAAK,CAChC3C,QAASV,IAzGE,aAwGPE,EAxGOsD,EAAA7C,MA2GAC,GA3GA,CAAA4C,EAAAjD,KAAA,gBAAAiD,EAAAjD,KAAA,GA4GUL,EAASW,OA5GnB,eA4GLyC,EA5GKE,EAAA7C,KAAA6C,EAAAzC,OAAA,SA6GJuC,EAAOA,OAAOpB,OA7GV,QAAAsB,EAAAjD,KAAA,iBAAAiD,EAAAlD,KAAA,GAAAkD,EAAAxC,GAAAwC,EAAA,SAiHbvC,QAAQC,IAARsC,EAAAxC,IAjHa,yBAAAwC,EAAArC,SAAAiC,EAAAhC,KAAA,6BAAAqC,GAAA,OAAAN,EAAA9B,MAAAD,KAAAE,YAAA,GAqHXoC,WArHW,eAAAC,EAAAlE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAA+D,EAqHAlC,GArHA,IAAAmC,EAAA,OAAAlE,EAAAC,EAAAQ,KAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,cAAAuD,EAAAvD,KAAA,EAuHI/B,EAAW+C,gBAAgBG,GAvH/B,cAAAoC,EAAA9C,GAAA8C,EAAAnD,KAAAmD,EAAAvD,KAAA,EAwHE/B,EAAW4D,cAAcV,GAxH3B,cAAAoC,EAAAC,GAAAD,EAAAnD,KAAAmD,EAAAvD,KAAA,EAyHC/B,EAAWmE,aAAajB,GAzHzB,cAAAoC,EAAAE,GAAAF,EAAAnD,KAAAmD,EAAAvD,KAAA,GA0HC/B,EAAW0E,aAAaxB,GA1HzB,eAAAoC,EAAAG,GAAAH,EAAAnD,KAsHXkD,EAtHW,CAuHbhC,UAvHaiC,EAAA9C,GAwHbuB,QAxHauB,EAAAC,GAyHbjB,OAzHagB,EAAAE,GA0HbV,OA1HaQ,EAAAG,IAAAH,EAAA/C,OAAA,SA4HR8C,GA5HQ,yBAAAC,EAAA3C,SAAAyC,EAAAxC,SAAA,gBAAA8C,GAAA,OAAAP,EAAAtC,MAAAD,KAAAE,YAAA,GA+HX6C,YA/HW,eAAAC,EAAA3E,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAwE,EA+HC3C,EAAYC,EAAQ2C,GA/HrB,IAAA1C,EAAA,OAAAjC,EAAAC,EAAAQ,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,UAgITqB,EAAQ,GACD,cAAT0C,EAjIW,CAAAC,EAAAhE,KAAA,eAAAgE,EAAAhE,KAAA,EAkIA/B,EAAW+C,gBAAgBG,EAAYC,EAAQC,GAlI/C,cAAA2C,EAAAxD,OAAA,SAAAwD,EAAA5D,MAAA,UAoIK,WAAT2D,EApII,CAAAC,EAAAhE,KAAA,gBAAAgE,EAAAhE,KAAA,GAqIA/B,EAAW4D,cAAcV,EAAYC,EAAQC,GArI7C,eAAA2C,EAAAxD,OAAA,SAAAwD,EAAA5D,MAAA,WAuIK,WAAT2D,EAvII,CAAAC,EAAAhE,KAAA,gBAAAgE,EAAAhE,KAAA,GAwIA/B,EAAWmE,aAAajB,EAAYC,EAAQC,GAxI5C,eAAA2C,EAAAxD,OAAA,SAAAwD,EAAA5D,MAAA,WA0IK,WAAT2D,EA1II,CAAAC,EAAAhE,KAAA,gBAAAgE,EAAAhE,KAAA,GA2IA/B,EAAW0E,aAAaxB,EAAYC,EAAQC,GA3I5C,eAAA2C,EAAAxD,OAAA,SAAAwD,EAAA5D,MAAA,yBAAA4D,EAAApD,SAAAkD,EAAAjD,SAAA,gBAAAoD,EAAAC,EAAAC,GAAA,OAAAN,EAAA/C,MAAAD,KAAAE,YAAA,GA+IXqD,aA/IW,eAAAC,EAAAnF,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAgF,EA+IEC,EAAcC,GA/IhB,IAAAhF,EAAAE,EAAAD,EAAAE,EAAAC,EAAA6E,EAAA,OAAArF,EAAAC,EAAAQ,KAAA,SAAA6E,GAAA,cAAAA,EAAA3E,KAAA2E,EAAA1E,MAAA,cAAA0E,EAAA1E,KAAA,EAgJM/B,EAAWC,gBAhJjB,cAgJTsB,EAhJSkF,EAAAtE,KAAAsE,EAAA1E,KAAA,EAiJM/B,EAAWe,YAjJjB,cAiJTU,EAjJSgF,EAAAtE,KAkJTX,EAAgB,CAACQ,cAAa,UAAAlB,OAAYS,IAlJjCkF,EAAA3E,KAAA,EAAA2E,EAAA1E,KAAA,GAqJUE,MAAK,oCAAAnB,OAAqCW,EAArC,cAAyD,CACnFiF,OAAQ,OACRxE,QAASV,EACTmF,KAAMC,KAAKC,UAAU,CAACC,KAAMR,MAxJjB,aAqJP5E,EArJO+E,EAAAtE,MA2JDC,GA3JC,CAAAqE,EAAA1E,KAAA,gBAAA0E,EAAA1E,KAAA,GA4JgBL,EAASW,OA5JzB,eA4JLV,EA5JK8E,EAAAtE,KA6JLqE,EAAa7E,EAAaW,GA7JrBmE,EAAA3E,KAAA,GAAA2E,EAAA1E,KAAA,GAgKcE,MAAK,wCAAAnB,OAAyC0F,EAAzC,WAA8D,CACxFtE,QAASV,EACTkF,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACE,KAAKR,MAnKpB,YAAAE,EAAAtE,KAqKGC,GArKH,CAAAqE,EAAA1E,KAAA,gBAAA0E,EAAAlE,OAAA,kBAAAkE,EAAA1E,KAAA,iBAAA0E,EAAA3E,KAAA,GAAA2E,EAAAjE,GAAAiE,EAAA,UA0KThE,QAAQC,IAAR+D,EAAAjE,IA1KS,QAAAiE,EAAA1E,KAAA,iBAAA0E,EAAA3E,KAAA,GAAA2E,EAAAlB,GAAAkB,EAAA,SA+KbhE,QAAQC,IAAR+D,EAAAlB,IA/Ka,yBAAAkB,EAAA9D,SAAA0D,EAAAzD,KAAA,qCAAAoE,EAAAC,GAAA,OAAAb,EAAAvD,MAAAD,KAAAE,YAAA,GAmLXoE,qBAnLW,eAAAC,EAAAlG,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAA+F,EAmLUC,GAnLV,IAAA9F,EAAAC,EAAA,OAAAL,EAAAC,EAAAQ,KAAA,SAAA0F,GAAA,cAAAA,EAAAxF,KAAAwF,EAAAvF,MAAA,cAAAuF,EAAAvF,KAAA,EAoLM/B,EAAWC,gBApLjB,OAoLTsB,EApLS+F,EAAAnF,KAsLTX,EAAgB,CACpBQ,cAAa,UAAAlB,OAAYS,GACzBgG,eAAgB,oBAGlBtF,MAAM,uCAAwC,CAC5CyE,OAAQ,MACRxE,QAASV,EACTmF,KAAMC,KAAKC,UAAU,CACnBW,WAAc,CAAEH,GAChBI,MAAQ,MAhMG,wBAAAH,EAAA3E,SAAAyE,EAAAxE,SAAA,gBAAA8E,GAAA,OAAAP,EAAAtE,MAAAD,KAAAE,YAAA,GAqMX6E,YArMW,eAAAC,EAAA3G,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAwG,IAAA,IAAArB,EAAAsB,EAAAvG,EAAAsD,EAAArD,EAAAE,EAAAC,EAAAoG,EAAAjF,UAAA,OAAA3B,EAAAC,EAAAQ,KAAA,SAAAoG,GAAA,cAAAA,EAAAlG,KAAAkG,EAAAjG,MAAA,cAqMCyE,EArMDuB,EAAAvE,OAAA,QAAAC,IAAAsE,EAAA,GAAAA,EAAA,GAqMY,GAAID,EArMhBC,EAAAvE,OAAA,QAAAC,IAAAsE,EAAA,GAAAA,EAAA,GAqMyB,OArMzBC,EAAAjG,KAAA,EAsMM/B,EAAWC,gBAtMjB,cAsMTsB,EAtMSyG,EAAA7F,KAwMT0C,EAAM,CACVoD,KAAI,0CACJC,QAAO,wCAAApH,OAA0C0F,EAA1C,WACP2B,aAAY,qCAAArH,OAAuC0F,EAAvC,YAGRhF,EAAgB,CACpBQ,cAAa,UAAAlB,OAAYS,GAC1BgG,eAAgB,oBAhNFS,EAAAlG,KAAA,EAAAkG,EAAAjG,KAAA,GAoNUE,MAAM4C,EAAIiD,GAAW,CAC1C5F,QAASV,IArNE,aAoNPE,EApNOsG,EAAA7F,MAwNDC,GAxNC,CAAA4F,EAAAjG,KAAA,gBAAAiG,EAAAjG,KAAA,GAyNgBL,EAASW,OAzNzB,eAyNLV,EAzNKqG,EAAA7F,KAAA6F,EAAAzF,OAAA,SA0NJZ,EAAa+B,OA1NT,QAAAsE,EAAAjG,KAAA,iBAAAiG,EAAAlG,KAAA,GAAAkG,EAAAxF,GAAAwF,EAAA,SA6NbvF,QAAQC,IAARsF,EAAAxF,IA7Na,yBAAAwF,EAAArF,SAAAkF,EAAAjF,KAAA,sCAAAgF,EAAA/E,MAAAD,KAAAE,YAAA,GAiOXsF,UAjOW,eAAAC,EAAApH,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAiH,EAiODC,GAjOC,IAAAxB,EAAAjB,EAAAvE,EAAAC,EAAAmF,EAAAjF,EAAAC,EAAA6G,EAAA1F,UAAA,OAAA3B,EAAAC,EAAAQ,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,cAiOQgF,EAjORyB,EAAAhF,OAAA,QAAAC,IAAA+E,EAAA,GAAAA,EAAA,GAiOa,CAAC,IAAK1C,EAjOnB0C,EAAAhF,OAAA,QAAAC,IAAA+E,EAAA,GAAAA,EAAA,GAiO0B,QAEnCjH,EAASvB,EAAWC,gBACpBuB,EAAgB,CAACQ,cAAa,UAAAlB,OAAYS,IAK9CoF,EADW,aAATb,GAAgC,UAATA,GAA6B,WAATA,EACtC,CACL4C,YAAe3B,EACf5D,OAAU,CAAEoF,QAAWA,IAGlB,CACLxB,KAAQA,EACR5D,OAAU,CAAEwF,IAAOJ,IAhPRE,EAAA3G,KAAA,EAAA2G,EAAA1G,KAAA,EAqPUE,MAAM,4CAA6C,CACxEyE,OAAQ,MACRxE,QAASV,EACTmF,KAAMC,KAAKC,UAAU,CAACF,WAxPX,YAqPPjF,EArPO+G,EAAAtG,MA0PAC,GA1PA,CAAAqG,EAAA1G,KAAA,gBAAA0G,EAAA1G,KAAA,GA2PgBL,EAASW,OA3PzB,QA2PLV,EA3PK8G,EAAAtG,KA4PXM,QAAQC,IAAIf,GA5PD,QAAA8G,EAAA1G,KAAA,iBAAA0G,EAAA3G,KAAA,GAAA2G,EAAAjG,GAAAiG,EAAA,SA+PbhG,QAAQC,IAAR+F,EAAAjG,IA/Pa,yBAAAiG,EAAA9F,SAAA2F,EAAA1F,KAAA,6BAAAgG,GAAA,OAAAP,EAAAxF,MAAAD,KAAAE,YAAA,GAmQX+F,eAnQW,eAAAC,EAAA7H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAA0H,IAAA,IAAAxH,EAAAC,EAAAE,EAAAC,EAAA+B,EAAAsF,EAAA,OAAA7H,EAAAC,EAAAQ,KAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,cAAAkH,EAAAlH,KAAA,EAoQM/B,EAAWC,gBApQjB,cAoQTsB,EApQS0H,EAAA9G,KAsQTX,EAAgB,CACpBQ,cAAa,UAAAlB,OAAYS,GACzBgG,eAAgB,oBAxQH0B,EAAAnH,KAAA,EAAAmH,EAAAlH,KAAA,EA4QUE,MAAM,yDAA0D,CACrFC,QAASV,IA7QE,YA4QPE,EA5QOuH,EAAA9G,MAgRAC,GAhRA,CAAA6G,EAAAlH,KAAA,gBAAAkH,EAAAlH,KAAA,GAiRgBL,EAASW,OAjRzB,eAiRLV,EAjRKsH,EAAA9G,KAkRPuB,EAAQ/B,EAAauH,WAAWxF,MAChCsF,EAAkBtF,EAAMyF,IAAI,SAACC,GAE/B,OADAA,EAAI,OAAaA,EAAKC,MACfD,IArREH,EAAA1G,OAAA,SAuRJyG,GAvRI,QAAAC,EAAAlH,KAAA,iBAAAkH,EAAAnH,KAAA,GAAAmH,EAAAzG,GAAAyG,EAAA,SA0RbxG,QAAQC,IAARuG,EAAAzG,IA1Ra,yBAAAyG,EAAAtG,SAAAoG,EAAAnG,KAAA,sCAAAkG,EAAAjG,MAAAD,KAAAE,YAAA,GA8RTwG,aA9RS,eAAAC,EAAAtI,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAmI,EA8RI3E,GA9RJ,IAAAtD,EAAAC,EAAAE,EAAAC,EAAA,OAAAR,EAAAC,EAAAQ,KAAA,SAAA6H,GAAA,cAAAA,EAAA3H,KAAA2H,EAAA1H,MAAA,cAAA0H,EAAA1H,KAAA,EA+RM/B,EAAWC,gBA/RjB,cA+RTsB,EA/RSkI,EAAAtH,KAiSTX,EAAgB,CACpBQ,cAAa,UAAAlB,OAAYS,GACzBgG,eAAgB,oBAnSHkC,EAAA3H,KAAA,EAAA2H,EAAA1H,KAAA,EAuSUE,MAAM4C,EAAK,CAChC3C,QAASV,IAxSE,YAuSPE,EAvSO+H,EAAAtH,MA2SAC,GA3SA,CAAAqH,EAAA1H,KAAA,gBAAA0H,EAAA1H,KAAA,GA4SgBL,EAASW,OA5SzB,QA4SLV,EA5SK8H,EAAAtH,KA6SXM,QAAQC,IAAIf,GA7SD,QAAA8H,EAAA1H,KAAA,iBAAA0H,EAAA3H,KAAA,GAAA2H,EAAAjH,GAAAiH,EAAA,SAgTbhH,QAAQC,IAAR+G,EAAAjH,IAhTa,yBAAAiH,EAAA9G,SAAA6G,EAAA5G,KAAA,6BAAA8G,GAAA,OAAAH,EAAA1G,MAAAD,KAAAE,YAAA,GAoTX6G,qBApTW,eAAAC,EAAA3I,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAA,SAAAwI,EAoTUC,GApTV,IAAAvI,EAAAC,EAAAE,EAAAC,EAAA,OAAAR,EAAAC,EAAAQ,KAAA,SAAAmI,GAAA,cAAAA,EAAAjI,KAAAiI,EAAAhI,MAAA,cAAAgI,EAAAhI,KAAA,EAqTI/B,EAAWC,gBArTf,cAqTXsB,EArTWwI,EAAA5H,KAuTXX,EAAgB,CACpBQ,cAAa,UAAAlB,OAAYS,GACzBgG,eAAgB,oBAzTDwC,EAAAjI,KAAA,EAAAiI,EAAAhI,KAAA,EA+TQE,MAAK,gDAAAnB,OAAiDgJ,EAAjD,cAAyE,CACnG5H,QAASV,IAhUI,YA+TTE,EA/TSqI,EAAA5H,MAmUFC,GAnUE,CAAA2H,EAAAhI,KAAA,gBAAAgI,EAAAhI,KAAA,GAoUcL,EAASW,OApUvB,eAoUPV,EApUOoI,EAAA5H,KAqUbM,QAAQC,IAAIf,GArUCoI,EAAAxH,OAAA,SAsUNZ,EAAa0B,UAAUK,OAtUjB,QAAAqG,EAAAhI,KAAA,iBAAAgI,EAAAjI,KAAA,GAAAiI,EAAAvH,GAAAuH,EAAA,SAyUftH,QAAQC,IAARqH,EAAAvH,IAzUe,yBAAAuH,EAAApH,SAAAkH,EAAAjH,KAAA,6BAAAoH,GAAA,OAAAJ,EAAA/G,MAAAD,KAAAE,YAAA,IAgVJ9C,IChVFiK,EAAeC,0BAEfC,EAAb,SAAAC,GACE,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAArJ,OAAAsJ,EAAA,EAAAtJ,CAAA2B,KAAAuH,IACjBG,EAAArJ,OAAAuJ,EAAA,EAAAvJ,CAAA2B,KAAA3B,OAAAwJ,EAAA,EAAAxJ,CAAAkJ,GAAAO,KAAA9H,KAAMyH,KA0BRM,YAAc,SAACC,EAAUC,GACvBP,EAAKQ,SAAL7J,OAAA8J,EAAA,EAAA9J,CAAA,GAAiB2J,EAAWC,KA5BXP,EA+BnBU,cAAgB,SAAC9H,GACflD,EAAWkF,WAAWhC,GAAY+H,KAAK,SAACC,GAAY,IAC1C7H,EAAuC6H,EAAvC7H,UAAWU,EAA4BmH,EAA5BnH,QAASO,EAAmB4G,EAAnB5G,OAAQQ,EAAWoG,EAAXpG,OACpCwF,EAAKxF,OAASA,EACdwF,EAAKQ,SAAS,CACZ5H,WAAYA,EACZG,UAAWA,EACXU,QAASA,EACTO,OAAQA,EACRQ,OAAQA,OAxCKwF,EA8CnBa,WAAa,SAACC,EAAYC,GACxBf,EAAKQ,SAAS,SAAAQ,GAAK,OAAArK,OAAA8J,EAAA,EAAA9J,CAAA,GAChBoK,EADgB,GAAAvK,OAAAG,OAAAsK,EAAA,EAAAtK,CACJqK,EAAMD,IADFpK,OAAAsK,EAAA,EAAAtK,CACamK,QAhDfd,EAqDnBkB,iBAAmB,SAACC,GAA0C,IAAnC3F,EAAmChD,UAAAU,OAAA,QAAAC,IAAAX,UAAA,GAAAA,UAAA,GAA5B,QAA4BA,UAAAU,OAAA,QAAAC,IAAAX,UAAA,IAAAA,UAAA,GAC5DwH,EAAKQ,SAAS,SAACQ,GACb,IAAMxG,EAASwG,EAAMI,YAAYC,OAAO,SAAAC,GAAO,OAAIA,EAAQtJ,KAAOmJ,EAAMnJ,KAExE,MAAO,CAAEoJ,YADO,GAAA5K,OAAAG,OAAAsK,EAAA,EAAAtK,CAAuB6D,GAAd,UAATgB,EAAA,CAA+B2F,GAA/BxK,OAAAsK,EAAA,EAAAtK,CAAuDwK,QAxDxDnB,EA6DnBuB,qBAAuB,SAAC/G,GACtBwF,EAAKQ,SAAS,CAAEgB,gBAAiBhH,KA9DhBwF,EAiEnByB,YAAc,SAACN,GACb,IAAM3G,EAASwF,EAAKgB,MAAMI,YAAYC,OAAO,SAAAC,GAAO,OAAIA,EAAQtJ,KAAOmJ,EAAMnJ,KAC7EgI,EAAKQ,SAAS,CAAEY,YAAa5G,KAhE7BwF,EAAKgB,MAAQ,CACXpI,WAAY,GACZG,UAAW,GACXU,QAAS,GACTO,OAAQ,GACRQ,OAAQ,GACR4G,YAAa,GACbI,gBAAiB,GACjBN,iBAAkBlB,EAAKkB,iBACvBK,qBAAsBvB,EAAKuB,qBAC3BE,YAAazB,EAAKyB,YAClBpB,YAAaL,EAAKK,YAClBK,cAAeV,EAAKU,cACpBG,WAAYb,EAAKa,YAGnBb,EAAK0B,aAAe,IACpB1B,EAAKnH,OAAS,GApBGmH,EADrB,OAAArJ,OAAAgL,EAAA,EAAAhL,CAAAkJ,EAAAC,GAAAnJ,OAAAiL,EAAA,EAAAjL,CAAAkJ,EAAA,EAAAgC,IAAA,oBAAAC,MAAA,WAyBIpM,EAAWC,kBAzBf,CAAAkM,IAAA,SAAAC,MAAA,WAyEI,OACEC,EAAAjL,EAAAkL,cAACrC,EAAasC,SAAd,CAAuBH,MAAOxJ,KAAK0I,OAChC1I,KAAKyH,MAAMmC,cA3EpBrC,EAAA,CAAiCsC,2BCK3BC,cACJ,SAAAA,EAAYrC,GAAM,IAAAC,EAAA,OAAArJ,OAAAsJ,EAAA,EAAAtJ,CAAA2B,KAAA8J,IAChBpC,EAAArJ,OAAAuJ,EAAA,EAAAvJ,CAAA2B,KAAA3B,OAAAwJ,EAAA,EAAAxJ,CAAAyL,GAAAhC,KAAA9H,KAAMyH,KAORsC,iBAAmB,SAACC,GAClB,IAAI1J,EAAa0J,EAAEC,OAAOT,MAC1B9B,EAAKwC,QAAQnC,YAAY,aAAczH,GACvC6J,aAAazC,EAAK0C,OAClB1C,EAAK0C,MAAQtM,WAAW4J,EAAK2C,OAAO/J,GAAa,OAZjCoH,EAelB2C,OAAS,SAAC/J,GACRoH,EAAKwC,QAAQ9B,cAAc9H,GACU,MAAjCoH,EAAKD,MAAMjK,SAAS8M,UACtB5C,EAAKD,MAAM1J,QAAQwM,KAAK,YAf1B7C,EAAK0C,MAAQ,KAHG1C,wEAuBhB,OACE+B,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,aACbf,EAAAjL,EAAAkL,cAAA,SAAOe,SAAUzK,KAAK+J,iBAAmBW,YAAY,mCACrDjB,EAAAjL,EAAAkL,cAACiB,EAAA,EAAD,CAAMC,GAAG,WACPnB,EAAAjL,EAAAkL,cAACmB,EAAA,EAAD,CAAiBL,UAAU,gBAAgBM,KAAMC,MACjDtB,EAAAjL,EAAAkL,cAAA,UAAQxG,KAAK,SAAS8H,QAAShL,KAAKiL,aAAc/G,KAAK,oBA7BzCgH,iBAAlBpB,EAOGqB,YAAc9D,EA6BRyC,yBCtBAsB,mLAdX,OACE3B,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,kBACbf,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,UACbf,EAAAjL,EAAAkL,cAAC2B,EAAA,EAAD,CAASb,UAAU,aAAaI,GAAG,WAAUnB,EAAAjL,EAAAkL,cAACmB,EAAA,EAAD,CAAiBC,KAAMC,MAApE,YACAtB,EAAAjL,EAAAkL,cAAC2B,EAAA,EAAD,CAASb,UAAU,aAAaI,GAAG,oBAAmBnB,EAAAjL,EAAAkL,cAACmB,EAAA,EAAD,CAAiBC,KAAMQ,MAA7E,qBACA7B,EAAAjL,EAAAkL,cAAC2B,EAAA,EAAD,CAASb,UAAU,aAAaI,GAAG,gBAAenB,EAAAjL,EAAAkL,cAACmB,EAAA,EAAD,CAAiBC,KAAMS,MAAzE,iBACA9B,EAAAjL,EAAAkL,cAAC2B,EAAA,EAAD,CAASb,UAAU,aAAaI,GAAG,YAAWnB,EAAAjL,EAAAkL,cAACmB,EAAA,EAAD,CAAiBC,KAAMU,MAArE,YACA/B,EAAAjL,EAAAkL,cAAC2B,EAAA,EAAD,CAASb,UAAU,aAAaI,GAAG,kBAAiBnB,EAAAjL,EAAAkL,cAACmB,EAAA,EAAD,CAAiBC,KAAMW,MAA3E,uBATWP,iBCINQ,2BATF,SAAAC,GAAwC,IAArCzH,EAAqCyH,EAArCzH,KAAM0H,EAA+BD,EAA/BC,OAAQC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,OACtC,OACErC,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,QACbf,EAAAjL,EAAAkL,cAAA,KAAGqC,MAAO,CAAEC,SAAUH,EAAUI,SAAUH,IAAY5H,GACtDuF,EAAAjL,EAAAkL,cAAA,KAAGqC,MAAO,CAAEC,SAAUH,EAAUI,SAAUH,IAAYF,MCa7CM,SAjBF,SAAAP,GAAY,IAATQ,EAASR,EAATQ,GAUZ,OACI1C,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,QAVH,SAAC2B,GACjB,IAAIC,EAAQC,EAASC,EAKnB,OAJFD,EAAUE,KAAKC,MAAML,EAAK,KAC1BC,EAASG,KAAKC,MAAMH,EAAU,IAE9BC,EAAc,IAAApO,OADdmO,GAAoB,IACQI,OAAO,GACjC,GAAAvO,OAAUkO,EAAV,KAAAlO,OAAoBoO,GAKbI,CAAUP,MCCRQ,eAVI,SAAAhB,GAAqB,IAAlBiB,EAAkBjB,EAAlBiB,YACpB,OACEnD,EAAAjL,EAAAkL,cAACD,EAAAjL,EAAMqO,SAAP,KACEpD,EAAAjL,EAAAkL,cAAA,UAAQc,UAAU,aAAaQ,QAAS4B,GACtCnD,EAAAjL,EAAAkL,cAACmB,EAAA,EAAD,CAAiBL,UAAU,SAASM,KAAMgC,IAAQC,KAAK,WCMhDC,SAVG,SAAArB,GAAe,IAAZsB,EAAYtB,EAAZsB,MACnB,OACExD,EAAAjL,EAAAkL,cAACD,EAAAjL,EAAMqO,SAAP,KACEpD,EAAAjL,EAAAkL,cAAA,UAAQc,UAAU,YAAYQ,QAASiC,GACrCxD,EAAAjL,EAAAkL,cAACmB,EAAA,EAAD,CAAiBL,UAAU,SAASM,KAAMoC,IAAQH,KAAK,WCMhDI,SAVM,SAAAxB,GAAkB,IAAfyB,EAAezB,EAAfyB,SACtB,OACE3D,EAAAjL,EAAAkL,cAACD,EAAAjL,EAAMqO,SAAP,KACEpD,EAAAjL,EAAAkL,cAAA,UAAQc,UAAU,eAAeQ,QAASoC,GACxC3D,EAAAjL,EAAAkL,cAACmB,EAAA,EAAD,CAAiBL,UAAU,SAASM,KAAMuC,IAASN,KAAK,WCMjDO,EATO,SAAA3B,GAAwD,IAArD4B,EAAqD5B,EAArD4B,YAAaX,EAAwCjB,EAAxCiB,YAAaY,EAA2B7B,EAA3B6B,WAAYtI,EAAeyG,EAAfzG,SAC7D,OACEuE,EAAAjL,EAAAkL,cAAA,OAAKc,UAAS,kBAAAtM,OAAiC,WAAbgH,EAAwB,SAAW,OAClEsI,EAAa/D,EAAAjL,EAAAkL,cAAC+D,EAAD,CAAcL,SAAUG,IAAkB9D,EAAAjL,EAAAkL,cAACgE,EAAD,CAAWT,MAAOM,IAC1E9D,EAAAjL,EAAAkL,cAACiE,EAAD,CAAYf,YAAaA,MC8BhBgB,6MA/BbC,WAAa,SAAC7D,GACZ,IAAM8D,EAAWpG,EAAKD,MAAMsG,cAC5B3Q,EAAWoI,UAAUkC,EAAKD,MAAMoB,MAAM9C,IAAK+H,MAG7CE,kBAAoB,SAAChE,GACnBtC,EAAKD,MAAM8F,YAAY7F,EAAKD,MAAMoB,gFAG3B,IAAAoF,EACsCjO,KAAKyH,MAAMoB,MAAjD1H,EADA8M,EACA9M,QAAS+C,EADT+J,EACS/J,KAAMgK,EADfD,EACeC,MAAOC,EADtBF,EACsBE,YAC7B,OACE1E,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,SACbf,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,qBACbf,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,aACZ0D,EAAME,OAAO,GACZ3E,EAAAjL,EAAAkL,cAAA,OAAK2E,IAAKH,EAAME,OAAO,GAAGnM,IAAKqM,IAAI,UACnC,MAGJ7E,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,cACbf,EAAAjL,EAAAkL,cAAC6E,EAAD,CAAMrK,KAAMA,EAAM0H,OAAQzK,EAAQ,GAAG+C,QAEvCuF,EAAAjL,EAAAkL,cAAC8E,EAAD,CAAMrC,GAAIgC,KAEZ1E,EAAAjL,EAAAkL,cAAC+E,EAAD,CAAelB,YAAavN,KAAKgO,kBAAmBpB,YAAa5M,KAAK6N,WAAYL,WAAYxN,KAAKyH,MAAM+F,qBA3B7FtC,iBCGLwD,SARF,SAAA/C,GAAgB,IAAd/B,EAAc+B,EAAd/B,SACb,OACEH,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,QACZZ,KC2BQ+E,EA3BG,SAAAhD,GAA4C,IAAzC4B,EAAyC5B,EAAzC4B,YAAaC,EAA4B7B,EAA5B6B,WAAYoB,EAAgBjD,EAAhBiD,UAEvCb,EAAc,WACjB,IAAMc,EAAU,GAEhB,OADAD,EAAUrI,IAAI,SAACsC,GAAD,OAAWgG,EAAQtE,KAAK1B,EAAM9C,OACrC8I,GAGT,OACEpF,EAAAjL,EAAAkL,cAACoF,EAAD,KACGF,EAAUrI,IAAI,SAACsC,GACd,OACEY,EAAAjL,EAAAkL,cAACqF,EAAD,CACElG,MAAOA,EACPU,IAAKV,EAAMnJ,GACX6N,YAAaA,EACbC,WAAYA,EACZO,YAAaA,QCXViB,SARA,SAAArD,GAAiC,IAA9BzI,EAA8ByI,EAA9BzI,KAAM+L,EAAwBtD,EAAxBsD,aAAc/K,EAAUyH,EAAVzH,KACpC,OACEuF,EAAAjL,EAAAkL,cAACD,EAAAjL,EAAMqO,SAAP,KACEpD,EAAAjL,EAAAkL,cAAA,UAAQc,UAAU,SAAStH,KAAMA,EAAM8H,QAASiE,GAAgB/K,MCGhEgL,cACJ,SAAAA,EAAYzH,GAAM,IAAAC,EAAA,OAAArJ,OAAAsJ,EAAA,EAAAtJ,CAAA2B,KAAAkP,IAChBxH,EAAArJ,OAAAuJ,EAAA,EAAAvJ,CAAA2B,KAAA3B,OAAAwJ,EAAA,EAAAxJ,CAAA6Q,GAAApH,KAAA9H,KAAMyH,KASR0H,aAAe,WAAM,IACXrG,EAAgBpB,EAAKwC,QAArBpB,YACApF,EAAiBgE,EAAKgB,MAAtBhF,aACR,GAAIoF,EAAYlI,OAAS,GAAK8C,EAAa9C,OAAS,EAAG,CACrD,IAAM+C,EAAemF,EAAYvC,IAAI,SAAAsC,GAAK,OAAIA,EAAM9C,MACpD3I,EAAWmG,aAAaG,EAAcC,KAfxB+D,EAmBlB0H,aAAe,SAACpF,GACdtC,EAAKQ,SAAS,CAAExE,aAAcsG,EAAEC,OAAOT,SAjBvC9B,EAAKgB,MAAQ,CACXhF,aAAc,IAJAgE,wEAuBT,IAAA2H,EAC8BrP,KAAKkK,QAAlCpB,EADDuG,EACCvG,YAAaK,EADdkG,EACclG,YACrB,OACEM,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,YACbf,EAAAjL,EAAAkL,cAAA,SACEe,SAAUzK,KAAKoP,aACf1E,YAAY,aACdjB,EAAAjL,EAAAkL,cAAC4F,EAAD,CACEV,UAAW9F,EACXyE,YAAapE,EACbqE,YAAU,IAEZ/D,EAAAjL,EAAAkL,cAAC6F,EAAD,CAAQrM,KAAK,SAAS+L,aAAcjP,KAAKmP,aAAcjL,KAAK,4BApC1CgH,iBAApBgE,EASG/D,YAAc9D,EAiCR6H,QCvCAM,0LANX,OACI/F,EAAAjL,EAAAkL,cAAC4F,EAAD,CAAWV,UAAW,YAHA1D,iDCiBfuE,EAfO,SAAA9D,GAAkB,IAAf/B,EAAe+B,EAAf/B,SACvB,OACEH,EAAAjL,EAAAkL,cAACoF,EAAD,KACErF,EAAAjL,EAAAkL,cAACgG,EAAA,EAAD,KACEjG,EAAAjL,EAAAkL,cAACiG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,OAAQ,kBAAMlG,KAC1CH,EAAAjL,EAAAkL,cAACiG,EAAA,EAAD,CAAOE,KAAK,oBAAoBC,OAAQ,kBAAMlG,EAAS,MACvDH,EAAAjL,EAAAkL,cAACiG,EAAA,EAAD,CAAOE,KAAK,iBAAiBC,OAAQ,kBAAMlG,EAAS,MACpDH,EAAAjL,EAAAkL,cAACiG,EAAA,EAAD,CAAOE,KAAK,iBAAiBC,OAAQ,kBAAMlG,EAAS,MACpDH,EAAAjL,EAAAkL,cAACiG,EAAA,EAAD,CAAOE,KAAK,kBAAkBC,OAAQ,kBAAMlG,EAAS,iBCJ9CmG,qBARD,SAAApE,GAAkB,IAAf/B,EAAe+B,EAAf/B,SACf,OACEH,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,SACZZ,KCGQoG,SANA,WACb,OACEvG,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,aCWJyF,EAVA,SAAAtE,GAAsC,IAAnC/B,EAAmC+B,EAAnC/B,SAAUqF,EAAyBtD,EAAzBsD,aAAc/K,EAAWyH,EAAXzH,KACxC,OACEuF,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,UACbf,EAAAjL,EAAAkL,cAACwG,EAAD,KAAQtG,GACRH,EAAAjL,EAAAkL,cAAC6F,EAAD,CAAQrM,KAAK,SAAS+L,aAAcA,EAAc/K,KAAMA,IACxDuF,EAAAjL,EAAAkL,cAACyG,EAAD,QC4BSC,EA9BU,SAAAzE,GAA2CA,EAAxCiD,UAAwCjD,EAA7B0E,cAA6B,IAAdtS,EAAc4N,EAAd5N,QAE9CmM,EAAUoG,qBAAWjJ,GAFuCkJ,EAInCC,mBAAS,CACtCC,UAAU,EACV/H,MAAO,OACPJ,QAAS,IAPuDoI,EAAArS,OAAAsS,EAAA,EAAAtS,CAAAkS,EAAA,GAI3DK,EAJ2DF,EAAA,GAInDG,EAJmDH,EAAA,GAsBlE,OACEjH,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,oBACbf,EAAAjL,EAAAkL,cAACoH,EAAD,CAAQ5M,KAAM0M,EAAOlI,MAAOuG,aAdL,WACzB4B,EAAa,WACX,MAAkC,mBAA9B9S,EAAQP,SAAS8M,UACnBvM,EAAQwM,KAAK,WACN,CAAEkG,UAAU,EAAO/H,MAAO,OAAQJ,QAAS,KAElDvK,EAAQwM,KAAK,kBACN,CAAEkG,UAAU,EAAM/H,MAAO,OAAQJ,QAASyI,UAOnD,UACAtH,EAAAjL,EAAAkL,cAAC4F,EAAD,CAAW/B,YAAarD,EAAQtB,iBAAkBgG,UAAW1E,EAAQhI,OAAOuK,MAAM,EAAGmE,EAAOtI,aCJnF0I,qBAtBF,SAAArF,GAAqC,IAAlCzG,EAAkCyG,EAAlCzG,SAAU+L,EAAwBtF,EAAxBsF,cAAevR,EAASiM,EAATjM,GAOvC,OACE+J,EAAAjL,EAAAkL,cAAA,OAAKc,UAAS,QAAAtM,OAA4B,WAAlBgH,EAAShC,MAAoB,WACnDuG,EAAAjL,EAAAkL,cAAA,OAAKc,UAAS,YAAAtM,OAAgC,WAAlBgH,EAAShC,MAAoB,WACtDgC,EAASkJ,OAAO,GAAK3E,EAAAjL,EAAAkL,cAAA,OAAK2E,IAAKnJ,EAASkJ,OAAO,GAAGnM,IAAKqM,IAAI,QAAW,MAEzE7E,EAAAjL,EAAAkL,cAAC6E,EAAD,CAAMrK,KAAMgB,EAAShB,OACrBuF,EAAAjL,EAAAkL,cAAC+E,EAAD,CACElB,YAAa,kBAAM0D,EAAcvR,EAAIwF,IACrCA,SAA6B,WAAlBA,EAAShC,KAAoB,SAAW,KACnD0J,YAdc,WAClB,IAAM7G,EAAMb,EAASa,IAAImL,MAAM,KAAKzE,MAAM,GAAG0E,KAAK,KAClD/T,EAAWoI,UAAU,GAAIO,SCgDdqL,EApDS,SAAAzF,GAA6C,IAA1ClL,EAA0CkL,EAA1ClL,UAAW4Q,EAA+B1F,EAA/B0F,SAAU3P,EAAqBiK,EAArBjK,OAAQ4P,EAAa3F,EAAb2F,OAEhDpH,EAAUoG,qBAAWjJ,GAErB4J,EAAgB,SAAC1H,EAAKrE,GAC1B,IAAIkJ,EAASlJ,EAASkJ,OAClBtF,EAAc,GACdyI,EAAa,UAEb7P,GACF6P,EAAa,eACbnU,EAAW2H,YAAYwE,EAAKgI,GAAYlJ,KAAK,SAACnD,GAC5CA,EAASqB,IAAI,SAACC,GAEZ,OADAA,EAAI,MAAY,CAAE4H,UACXtF,EAAYyB,KAAK/D,KAE1B0D,EAAQtB,iBAAiBE,EAAa,gBAIjCwI,QAA4BzQ,IAAlBqE,EAAShC,KAC1B9F,EAAW2J,qBAAqB7B,EAASxF,IAAI2I,KAAK,SAACnD,GACjD,OAAOmM,EAASnM,KAKlB9H,EAAW2H,YAAYwE,EAAKgI,GAAYlJ,KAAK,SAAC5H,GAC5CA,EAAU8F,IAAI,SAACrB,GACb,OAAO4D,EAAYyB,KAAKrF,EAAS2D,SAEnCqB,EAAQtB,iBAAiBE,EAAa,gBAM5C,OACEW,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,mBACZ/J,EAAU8F,IAAI,SAAArB,GACb,OACEuE,EAAAjL,EAAAkL,cAAC8H,EAAD,CACEtM,SAAUA,EACVxF,GAAIwF,EAASxF,GACb6J,IAAKrE,EAASxF,GACduR,cAAeA,QChBZQ,EA7BI,SAAA9F,GAAwC,IAArC1C,EAAqC0C,EAArC1C,qBAAsBlL,EAAe4N,EAAf5N,QAEpCmM,EAAUoG,qBAAWjJ,GAF8BkJ,EAI1BC,mBAAS,CACtCC,UAAU,EACV/H,MAAO,OACPJ,QAAS,IAP8CoI,EAAArS,OAAAsS,EAAA,EAAAtS,CAAAkS,EAAA,GAIlDK,EAJkDF,EAAA,GAI1CG,EAJ0CH,EAAA,GAqBzD,OACEjH,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,cACbf,EAAAjL,EAAAkL,cAACoH,EAAD,CAAQ5M,KAAM0M,EAAOlI,MAAOuG,aAbL,WACzB4B,EAAa,WACX,MAAkC,mBAA9B9S,EAAQP,SAAS8M,UACnBvM,EAAQwM,KAAK,WACN,CAAEkG,UAAU,EAAO/H,MAAO,OAAQJ,QAAS,KAElDvK,EAAQwM,KAAK,kBACN,CAAEkG,UAAU,EAAM/H,MAAO,OAAQJ,QAASyI,UAMnD,UACAtH,EAAAjL,EAAAkL,cAACgI,EAAD,CAAiBzI,qBAAsBA,EAAsBxI,UAAWyJ,EAAQxI,OAAO+K,MAAM,EAAGmE,EAAOtI,SAAU5G,QAAM,MCM9GiQ,SA9BC,SAAAhG,GAAuC,IAApC1C,EAAoC0C,EAApC1C,qBAAsBlL,EAAc4N,EAAd5N,QAEjCmM,EAAUoG,qBAAWjJ,GAF0BkJ,EAItBC,mBAAS,CACtCC,UAAU,EACV/H,MAAO,OACPJ,QAAS,IAP0CoI,EAAArS,OAAAsS,EAAA,EAAAtS,CAAAkS,EAAA,GAI9CK,EAJ8CF,EAAA,GAAAA,EAAA,GAsBrD,OACEjH,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,WACbf,EAAAjL,EAAAkL,cAACoH,EAAD,CAAQ5M,KAAM0M,EAAOlI,MAAOuG,aAdL,WACS,oBAA9BlR,EAAQP,SAAS8M,SACnBvM,EAAQwM,KAAK,WAEbxM,EAAQwM,KAAK,oBAUiDpJ,SAAO,GAArE,WACAsI,EAAAjL,EAAAkL,cAACgI,EAAD,CAAiBzI,qBAAsBA,EAAsBxI,UAAWyJ,EAAQ/I,QAAQsL,MAAM,EAN3D,mBAA9B1O,EAAQP,SAAS8M,SAAgCyG,IAAW,QCWxDa,UA9BG,SAAAjG,GAAwC,IAArC1C,EAAqC0C,EAArC1C,qBAAsBlL,EAAe4N,EAAf5N,QAEnCmM,EAAUoG,qBAAWjJ,GAF6BkJ,EAIzBC,mBAAS,CACtCC,UAAU,EACV/H,MAAO,OACPJ,QAAS,IAP6CoI,EAAArS,OAAAsS,EAAA,EAAAtS,CAAAkS,EAAA,GAIjDK,EAJiDF,EAAA,GAIzCG,EAJyCH,EAAA,GAsBxD,OACEjH,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,aACbf,EAAAjL,EAAAkL,cAACoH,EAAD,CAAQ5M,KAAM0M,EAAOlI,MAAOuG,aAdL,WACzB4B,EAAa,WACX,MAAkC,sBAA9B9S,EAAQP,SAAS8M,UACnBvM,EAAQwM,KAAK,WACN,CAAEkG,UAAU,EAAO/H,MAAO,OAAQJ,QAAS,KAElDvK,EAAQwM,KAAK,qBACN,CAAEkG,UAAU,EAAM/H,MAAO,OAAQJ,QAASyI,UAOnD,aACAtH,EAAAjL,EAAAkL,cAACgI,EAAD,CAAiBzI,qBAAsBA,EAAsBxI,UAAWyJ,EAAQzJ,UAAUgM,MAAM,EAAEmE,EAAOtI,cCfzGuJ,eACJ,SAAAA,EAAYpK,GAAO,IAAAC,EAAA,OAAArJ,OAAAsJ,EAAA,EAAAtJ,CAAA2B,KAAA6R,IACjBnK,EAAArJ,OAAAuJ,EAAA,EAAAvJ,CAAA2B,KAAA3B,OAAAwJ,EAAA,EAAAxJ,CAAAwT,GAAA/J,KAAA9H,KAAMyH,KAeRqK,aAAe,SAAC9H,GAAM,IAAAqF,EACgB3H,EAAKwC,QAAjC5J,EADY+O,EACZ/O,WAAYiI,EADA8G,EACA9G,WACd8B,EAAS3C,EAAKD,MAAMjK,SAAS8M,SAAS4G,MAAM,KAAK,GACjDzI,EAAQf,EAAKD,MAAMjK,SAAS8M,SAAS4G,MAAM,KAAK,GAElDxJ,EAAK0B,cAAgBY,EAAEC,OAAO8H,WAAwB,WAAX1H,IAC7C3C,EAAK0B,cAAgB,KACrB1B,EAAKnH,QAAU,GAEfnD,EAAW2F,YAAYzC,EAAYoH,EAAKnH,OAAQkI,GAAOJ,KAAK,SAACC,GAC3DC,EAAWD,EAASG,OAvBxBf,EAAK0B,aAAe,IACpB1B,EAAKnH,OAAS,GAJGmH,oFAU4B,YAAzC1H,KAAKyH,MAAM1J,QAAQP,SAAS8M,WAC9BtK,KAAKO,OAAS,GACdP,KAAKoJ,aAAe,sCAmBf,IAAA4I,EAAAhS,KACP,OACEyJ,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,OAAOyH,SAAUjS,KAAK8R,cACnCrI,EAAAjL,EAAAkL,cAACgG,EAAA,EAAD,KACEjG,EAAAjL,EAAAkL,cAACiG,EAAA,EAAD,CAAOE,KAAK,UAAUC,OAAQ,SAACrI,GAAD,OAC5BgC,EAAAjL,EAAAkL,cAACwI,EAAD,KACEzI,EAAAjL,EAAAkL,cAACyI,GAAD9T,OAAA+T,OAAA,CAAW7I,IAAK,GAAO9B,IACvBgC,EAAAjL,EAAAkL,cAAC2I,EAADhU,OAAA+T,OAAA,CAAkB7I,IAAK,GAAO9B,IAC9BgC,EAAAjL,EAAAkL,cAAC4I,EAADjU,OAAA+T,OAAA,CAAY7I,IAAK,GAAO9B,IACxBgC,EAAAjL,EAAAkL,cAAC6I,EAADlU,OAAA+T,OAAA,CAAS7I,IAAK,GAAQ9B,QAG1BgC,EAAAjL,EAAAkL,cAACiG,EAAA,EAAD,CAAOE,KAAK,mBAAmBC,OAAQ,kBAAMkC,EAAKvK,MAAMmC,SAAS,MACjEH,EAAAjL,EAAAkL,cAACiG,EAAA,EAAD,CAAOE,KAAK,eAAeC,OAAQ,kBAAMkC,EAAKvK,MAAMmC,SAAS,MAC7DH,EAAAjL,EAAAkL,cAACiG,EAAA,EAAD,CAAOE,KAAK,WAAWC,OAAQ,kBAAMkC,EAAKvK,MAAMmC,SAAS,MACzDH,EAAAjL,EAAAkL,cAACiG,EAAA,EAAD,CAAOE,KAAK,iBAAiBC,OAAQ,kBAAMkC,EAAKvK,MAAMmC,SAAS,eA/CtDsB,iBAAb2G,GAQG1G,YAAc9D,EA+CRwK,UCtDAW,gBAhBQ,SAAA7G,GAA+D,IAA5D8G,EAA4D9G,EAA5D8G,eAAgBC,EAA4C/G,EAA5C+G,aAAcC,EAA8BhH,EAA9BgH,SAAUC,EAAoBjH,EAApBiH,cAChE,OACEnJ,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,iBACbf,EAAAjL,EAAAkL,cAAA,SAAOc,UAAU,MACfqI,UAAWD,EACXnI,SAAU,SAACT,GAAD,OAAO0I,EAAa1I,IAC9B8I,KAAK,IACL5P,KAAK,QACL6P,IAAI,IACJvJ,MAAOiJ,EACPO,IAAKL,IACLlJ,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,cAAcuB,MAAO,CAAEkH,MAAK,GAAA/U,OAAM,IAAMyU,EAAYF,EAAxB,WCEpCS,UAVK,SAAAvH,GAAqB,IAAlBiB,EAAkBjB,EAAlBiB,YACrB,OACEnD,EAAAjL,EAAAkL,cAACD,EAAAjL,EAAMqO,SAAP,KACEpD,EAAAjL,EAAAkL,cAAA,UAAQc,UAAU,aAAaQ,QAAS4B,GACtCnD,EAAAjL,EAAAkL,cAACmB,EAAA,EAAD,CAAiBL,UAAU,SAASM,KAAMqI,IAASpG,KAAK,WCMjDqG,UAVO,SAAAzH,GAAmB,IAAhB0H,EAAgB1H,EAAhB0H,UACvB,OACE5J,EAAAjL,EAAAkL,cAACD,EAAAjL,EAAMqO,SAAP,KACEpD,EAAAjL,EAAAkL,cAAA,UAAQc,UAAU,UAAUQ,QAASqI,GACnC5J,EAAAjL,EAAAkL,cAACmB,EAAA,EAAD,CAAiBL,UAAU,SAASM,KAAMwI,IAAWvG,KAAK,WCMnDwG,UAVQ,SAAA5H,GAAoB,IAAjB6H,EAAiB7H,EAAjB6H,WACxB,OACE/J,EAAAjL,EAAAkL,cAACD,EAAAjL,EAAMqO,SAAP,KACEpD,EAAAjL,EAAAkL,cAAA,UAAQc,UAAU,OAAOQ,QAASwI,GAChC/J,EAAAjL,EAAAkL,cAACmB,EAAA,EAAD,CAAiBL,UAAU,SAASM,KAAM2I,IAAY1G,KAAK,WCMpD2G,WAVQ,SAAA/H,GAAwB,IAArBgI,EAAqBhI,EAArBgI,eACxB,OACElK,EAAAjL,EAAAkL,cAACD,EAAAjL,EAAMqO,SAAP,KACEpD,EAAAjL,EAAAkL,cAAA,UAAQc,UAAU,mBAChBf,EAAAjL,EAAAkL,cAACmB,EAAA,EAAD,CAAiBC,KAAMW,IAAUT,QAAS2I,QCCnCC,WARU,SAAAjI,GAAkB,IAAf/B,EAAe+B,EAAf/B,SAC1B,OACEH,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,qBACZZ,KCiLQiK,eAnKb,SAAAA,EAAYpM,GAAO,IAAAC,EAAA,OAAArJ,OAAAsJ,EAAA,EAAAtJ,CAAA2B,KAAA6T,IACjBnM,EAAArJ,OAAAuJ,EAAA,EAAAvJ,CAAA2B,KAAA3B,OAAAwJ,EAAA,EAAAxJ,CAAAwV,GAAA/L,KAAA9H,KAAMyH,KA4BRqM,eAAiB,WAAM,IACbC,EAAUrM,EAAKgB,MAAfqL,MACe,OAAnBxW,OAAOyW,UACTC,cAAcvM,EAAKwM,qBACnBxM,EAAKyM,OAAS,IAAI5W,OAAOyW,QAAQH,OAAO,CAAE3P,KAAM,eAAgBkQ,cAAe,SAAAC,GAAQA,EAAGN,MAC1FrM,EAAK4M,sBACL5M,EAAKyM,OAAOI,UACZzW,WAAY,kBAAM4J,EAAK8M,oBAAsBC,YAAY,kBAAM/M,EAAKgN,yBAAyB,MAAM,OApCpFhN,EAwCnB4M,oBAAsB,WACpB5M,EAAKyM,OAAOQ,GAAG,uBAAwB,SAAA3K,GAAC,OAAInK,QAAQ+U,MAAM5K,KAC1DtC,EAAKyM,OAAOQ,GAAG,uBAAwB,SAAA3K,GAAC,OAAInK,QAAQ+U,MAAM5K,KAC1DtC,EAAKyM,OAAOQ,GAAG,gBAAiB,SAAA3K,GAAC,OAAInK,QAAQ+U,MAAM5K,KACnDtC,EAAKyM,OAAOQ,GAAG,iBAAkB,SAAA3K,GAAC,OAAInK,QAAQ+U,MAAM5K,KACpDtC,EAAKyM,OAAOQ,GAAG,uBAAwB,SAAAjM,GAAK,OAAIhB,EAAKmN,eAAenM,KACpEhB,EAAKyM,OAAOQ,GAAG,QAAS,SAAAG,GAAQ,IACxBC,EAAcD,EAAdC,UACNrN,EAAKQ,SAAS,CAAEzD,SAAUsQ,IAC1B3X,EAAWkH,qBAAqByQ,MAjDjBrN,EAqDnBmN,eAAiB,SAACnM,GAEhB,GAAc,OAAVA,EAAgB,KACVsM,EAAkBtM,EAAMuM,aAAxBD,cACFE,EAAYF,EAAc9Q,KAC1BiR,EAAYH,EAAc9G,MAAMhK,KAChCkR,EAAaJ,EAAc7T,QAAQoF,IAAI,SAAAqF,GAAM,OAAIA,EAAO1H,OAAMiN,KAAK,MACnEkE,GAAW3M,EAAM4M,OACjBC,EAAWP,EAAc7G,YAC/BzG,EAAKQ,SAAS,CACZsN,aAAcR,EACdO,SAAUA,EACVL,UAAWA,EACXC,UAAWA,EACXC,WAAYA,EACZC,QAASA,IAGX3N,EAAKyM,OAAOsB,YAAYpN,KAAK,SAAAqN,GAAM,OAAIhO,EAAKQ,SAAS,CAAEwN,OAAiB,IAATA,QAvEhDhO,EA2EnBgN,sBAAwB,WACtBhN,EAAKyM,OAAOwB,kBAAkBtN,KAAK,SAACK,GAAD,OAAWhB,EAAKQ,SAAS,CAAE0N,SAAUlN,EAAMkN,cA5E7DlO,EA+EnBmO,YAAc,WACZnO,EAAKyM,OAAO2B,iBAhFKpO,EAmFnBkF,YAAc,WACZlF,EAAKyM,OAAO4B,cApFKrO,EAuFnBsO,YAAc,WACZtO,EAAKyM,OAAO8B,aAxFKvO,EA2FnBwO,cAAgB,SAAClM,GACf,IAAI0L,EAAS1L,EAAEC,OAAOT,MACtB9B,EAAKyM,OAAOgC,UAAUT,EAAO,KAAKrN,KAAK,kBAAMX,EAAKQ,SAAU,CAAEwN,OAAQA,OA7FrDhO,EAgGnB0O,OAAS,SAACpM,GACRiK,cAAcvM,EAAK8M,qBACnB9M,EAAKQ,SAAS,CAAE0N,SAAU5L,EAAEC,OAAOT,SAlGlB9B,EAqGnBkL,cAAgB,SAAC5I,GACftC,EAAKyM,OAAOkC,KAAK3O,EAAKgB,MAAMkN,UAAUvN,KAAK,WACzCX,EAAK8M,oBAAsBC,YAAY,kBAAM/M,EAAKgN,yBAAyB,QAvG5DhN,EA2GnB4O,WAAa,SAACtM,GACPtC,EAAKgB,MAAM6N,MAId7O,EAAKyM,OAAOgC,UAAUzO,EAAKgB,MAAMgN,OAAO,KACxChO,EAAKQ,SAAS,CAAEqO,MAAM,MAJtB7O,EAAKyM,OAAOgC,UAAU,GACtBzO,EAAKQ,SAAS,CAAEqO,MAAM,MA9GP7O,EAqHnBiM,eAAiB,SAAC3J,GACgB,WAA5BtC,EAAKgB,MAAM8N,aACb9O,EAAKQ,SAAS,CAAEsO,aAAc,YAE9B9O,EAAKQ,SAAS,CAAEsO,aAAc,YAtHhC9O,EAAKgB,MAAQ,CACXqL,MAAO,GACPtP,SAAU,GACVgS,UAAU,EACVpB,SAAS,EACTT,MAAO,GACPY,aAAc,GACdN,UAAW,GACXE,WAAY,GACZD,UAAW,GACXS,SAAU,EACVL,SAAU,EACVG,OAAQ,EACRa,MAAM,EACNC,aAAc,UAGhB9O,EAAKwM,oBAAsB,KAC3BxM,EAAK8M,oBAAsB,KArBV9M,mFAwBC,IAAAsK,EAAAhS,KAClBA,KAAKkI,SAAS,CAAE6L,MAAO3W,EAAWC,kBAClC2C,KAAKkU,oBAAsBO,YAAY,kBAAMzC,EAAK8B,kBAAkB,sCAmG7D,IAAA4C,EAC4F1W,KAAK0I,MAAhG2M,EADDqB,EACCrB,QAASG,EADVkB,EACUlB,aAAcE,EADxBgB,EACwBhB,OAAQH,EADhCmB,EACgCnB,SAAUK,EAD1Cc,EAC0Cd,SAAUR,EADpDsB,EACoDtB,WAAYF,EADhEwB,EACgExB,UAAWsB,EAD3EE,EAC2EF,aAClF,OACE/M,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,UACbf,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,cACZxK,KAAK0I,MAAM2M,QAAU5L,EAAAjL,EAAAkL,cAACqF,EAAD,CAAOlG,MAAO2M,IAAmB/L,EAAAjL,EAAAkL,cAAA,SAAI0L,EAAJ,KAAkBF,IAE3EzL,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,WACbf,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,kBACbf,EAAAjL,EAAAkL,cAACiN,GAAD,CAAgBnD,WAAYxT,KAAK6V,cAC/BR,EAA0D5L,EAAAjL,EAAAkL,cAACkN,GAAD,CAAahK,YAAa5M,KAAK4M,cAA/EnD,EAAAjL,EAAAkL,cAACiE,EAAD,CAAYf,YAAa5M,KAAK4M,cAC1CnD,EAAAjL,EAAAkL,cAACmN,GAAD,CAAexD,UAAWrT,KAAKgW,eAEjCvM,EAAAjL,EAAAkL,cAACoN,GAAD,KACErN,EAAAjL,EAAAkL,cAAC8E,EAAD,CAAMrC,GAAIyJ,IACVnM,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,aACbf,EAAAjL,EAAAkL,cAACqN,GAAD,CAAgBtE,eAAgBmD,EAAUlD,aAAc1S,KAAKoW,OAAQzD,SAAU4C,EAAU3C,cAAe5S,KAAK4S,iBAE/GnJ,EAAAjL,EAAAkL,cAAC8E,EAAD,CAAMrC,GAAIoJ,MAGd9L,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,oBACbf,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,6BAA6BuB,MAAO,CAAEiL,WAAYR,IAC/D/M,EAAAjL,EAAAkL,cAACuN,EAAD,CAAiB/R,SAAUlF,KAAKyH,MAAMyB,mBAExCO,EAAAjL,EAAAkL,cAACwN,GAAD,CAAgBvD,eAAgB3T,KAAK2T,iBACrClK,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,UACbf,EAAAjL,EAAAkL,cAACmB,EAAA,EAAD,CAAiBC,KAAMqM,IAAYpK,KAAK,KAAK/B,QAAShL,KAAKsW,aAC3D7M,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,cACbf,EAAAjL,EAAAkL,cAACqN,GAAD,CAAgBtE,eAAgBiD,EAAQhD,aAAc1S,KAAKkW,cAAevD,SAAU,mBA3J7EzH,iBC4BNkM,uBAtCb,SAAAA,EAAY3P,GAAO,IAAAC,EAAA,OAAArJ,OAAAsJ,EAAA,EAAAtJ,CAAA2B,KAAAoX,IACjB1P,EAAArJ,OAAAuJ,EAAA,EAAAvJ,CAAA2B,KAAA3B,OAAAwJ,EAAA,EAAAxJ,CAAA+Y,GAAAtP,KAAA9H,KAAMyH,KAcR4J,SAAW,SAAC5Q,IACqB,IAA3BiH,EAAKgB,MAAM2O,YACb3P,EAAKD,MAAMwB,qBAAqBxI,GAEhCiH,EAAKQ,SAAS,CAAEzH,UAAWA,EAAW4W,aAAa,KAjBrD3P,EAAKgB,MAAQ,CACXjI,UAAW,GACX4W,aAAa,EACb/O,QAAS,GALMZ,oFASE,IAAAsK,EAAAhS,KACnB5C,EAAW6I,iBAAiBoC,KAAK,SAAC5H,GAChCuR,EAAK9J,SAAS,CAAEzH,UAAWA,uCAatB,IACCA,EAAcT,KAAK0I,MAAnBjI,UACR,OACEgJ,EAAAjL,EAAAkL,cAACoF,EAAD,KACErF,EAAAjL,EAAAkL,cAACgI,EAAD,CACEjR,UAAWA,EACX4Q,SAAUrR,KAAKqR,SACfC,QAAM,YAhCMpG,kBC4BPoM,uBA3Bb,SAAAA,EAAY7P,GAAO,IAAAC,EAAA,OAAArJ,OAAAsJ,EAAA,EAAAtJ,CAAA2B,KAAAsX,IACjB5P,EAAArJ,OAAAuJ,EAAA,EAAAvJ,CAAA2B,KAAA3B,OAAAwJ,EAAA,EAAAxJ,CAAAiZ,GAAAxP,KAAA9H,KAAMyH,KACDiB,MAAQ,CACX6O,cAAe,IAHA7P,oFAOE,IAAAsK,EAAAhS,KACnB5C,EAAW2H,cAAcsD,KAAK,SAAC5H,GAC7BuR,EAAK9J,SAAS,CAAEqP,cAAe9W,uCAI1B,IACC8W,EAAkBvX,KAAK0I,MAAvB6O,cACAtO,EAAyBjJ,KAAKyH,MAA9BwB,qBACR,OACEQ,EAAAjL,EAAAkL,cAACoF,EAAD,KACErF,EAAAjL,EAAAkL,cAACgI,EAAD,CACEjR,UAAW8W,EACXtO,qBAAsBA,YArBJiC,4BCQtBsM,eACJ,SAAAA,EAAY/P,GAAO,IAAAC,EAAA,OAAArJ,OAAAsJ,EAAA,EAAAtJ,CAAA2B,KAAAwX,IACjB9P,EAAArJ,OAAAuJ,EAAA,EAAAvJ,CAAA2B,KAAA3B,OAAAwJ,EAAA,EAAAxJ,CAAAmZ,GAAA1P,KAAA9H,KAAMyH,KAED2B,aAAe,IACpB1B,EAAKnH,OAAS,GAJGmH,mFAQjBtK,EAAWC,iDAIX,OACEoM,EAAAjL,EAAAkL,cAAA,OAAKc,UAAU,OACbf,EAAAjL,EAAAkL,cAAC+N,EAAD,CACE1Z,QAASiC,KAAKyH,MAAM1J,QACpBP,SAAUwC,KAAKyH,MAAMjK,WAEvBiM,EAAAjL,EAAAkL,cAACgO,EAAD,MACAjO,EAAAjL,EAAAkL,cAACiO,GAAD,CACE5Z,QAASiC,KAAKyH,MAAM1J,QACpBP,SAAUwC,KAAKyH,MAAMjK,UAErBiM,EAAAjL,EAAAkL,cAACuN,EAAD,MACAxN,EAAAjL,EAAAkL,cAACkO,EAAD,MACAnO,EAAAjL,EAAAkL,cAACmO,GAAD,MACApO,EAAAjL,EAAAkL,cAACoO,GAAD,OAEFrO,EAAAjL,EAAAkL,cAACqO,GAAD,cA7BU7M,iBAmCH8M,gBAAWR,ICzCpBS,GAAcC,QACW,cAA7B3a,OAAOC,SAAS2a,UAEe,UAA7B5a,OAAOC,SAAS2a,UAEhB5a,OAAOC,SAAS2a,SAASza,MACvB,2DAsCN,SAAS0a,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACThQ,KAAK,SAAAoQ,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjQ,QACf4P,UAAUC,cAAcO,WAK1BjZ,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBiZ,MAAM,SAAAnE,GACL/U,QAAQ+U,MAAM,4CAA6CA,mBC/DjEoE,IAASlJ,OACPrG,EAAAjL,EAAAkL,cAACuP,GAAA,EAAD,KACExP,EAAAjL,EAAAkL,cAACwP,EAAD,KACEzP,EAAAjL,EAAAkL,cAACyP,GAAD,QAGHC,SAASC,eAAe,SDFZ,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,gBAAwBhc,OAAOC,UAC3Cgc,SAAWjc,OAAOC,SAASgc,OAIvC,OAGFjc,OAAOkc,iBAAiB,OAAQ,WAC9B,IAAMpB,EAAK,GAAAna,OAAMqb,gBAAN,sBAEPtB,IAiDV,SAAiCI,GAE/BhZ,MAAMgZ,GACHhQ,KAAK,SAAAvJ,GAGkB,MAApBA,EAAS4a,SACuD,IAAhE5a,EAASQ,QAAQqa,IAAI,gBAAgBC,QAAQ,cAG7CtB,UAAUC,cAAcsB,MAAMxR,KAAK,SAAAoQ,GACjCA,EAAaqB,aAAazR,KAAK,WAC7B9K,OAAOC,SAASuc,aAKpB3B,GAAgBC,KAGnBU,MAAM,WACLlZ,QAAQC,IACN,mEArEAka,CAAwB3B,GAIxBC,UAAUC,cAAcsB,MAAMxR,KAAK,WACjCxI,QAAQC,IACN,+GAMJsY,GAAgBC,MCzBxB4B","file":"static/js/main.4fef11c3.chunk.js","sourcesContent":["const clientId = '7234ae8b9cac4739b9af4f2806d43c7c';\r\nlet userAccesToken;\r\n\r\nconst SpotifyApi = {\r\n\r\n  getAccesToken() {\r\n    if(typeof userAccesToken !== 'undefined') {\r\n      return userAccesToken;\r\n    }\r\n\r\n    const accessTokenPara = window.location.href.match(/access_token=([^&]*)/);\r\n    const expiresInPara = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\n    if (accessTokenPara && expiresInPara) {\r\n      userAccesToken = accessTokenPara[1];\r\n      const expiresIn = Number(expiresInPara[1]);\r\n      window.setTimeout(() => userAccesToken = '', expiresIn * 1000);\r\n      window.history.pushState('Access Token', null, '/');\r\n      return userAccesToken;\r\n    } else {\r\n      const authorizeUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&redirect_uri=https://rcvz.github.io/SpotifyClone/&scope=playlist-modify-public%20playlist-modify-private%20streaming%20user-read-birthdate%20user-read-email%20user-read-private&response_type=token`;\r\n      window.location = authorizeUrl;\r\n    }\r\n  },\r\n\r\n  async getUserId () {\r\n    const access = SpotifyApi.getAccesToken();\r\n    const authorization = {Authorization: `Bearer ${access}`};\r\n    let userId = '';\r\n\r\n    try {\r\n      const response = await fetch('https://api.spotify.com/v1/me', {\r\n        headers: authorization\r\n      });\r\n\r\n      if(response.ok) {\r\n        const jsonResponse = await response.json();\r\n        userId = jsonResponse.id;\r\n        return userId;\r\n      }\r\n    }\r\n    catch(error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async searchPlaylists(searchTerm, offset = 0, limit = 50) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n    const authorization = { Authorization: `Bearer ${access}` };\r\n\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${searchTerm}&type=playlist&limit=${limit}&offset=${offset}`, {\r\n        headers: authorization\r\n      });\r\n      if (response.ok) {\r\n        const playlists = await response.json();\r\n        return playlists.playlists.items;\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async searchArtists(searchTerm, offset = 0, limit = 50) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n    const authorization = { Authorization: `Bearer ${access}` };\r\n\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${searchTerm}&type=artist&limit=${limit}&offset=${offset}`, {\r\n        headers: authorization\r\n      });\r\n      if (response.ok) {\r\n        const artists = await response.json();\r\n        return artists.artists.items;\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  },\r\n\r\n  async searchAlbums(searchTerm, offset = 0, limit = 50) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n    const authorization = { Authorization: `Bearer ${access}` };\r\n\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${searchTerm}&type=album&limit=${limit}&offset=${offset}`, {\r\n        headers: authorization\r\n      });\r\n      if (response.ok) {\r\n        const albums = await response.json();\r\n        return albums.albums.items;\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async searchTracks(searchTerm, offset= 0, limit= 50) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n    const authorization = { Authorization: `Bearer ${access}` };\r\n    let url = `https://api.spotify.com/v1/search?q=${searchTerm}&type=track&limit=${limit}&offset=${offset}`;\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        headers: authorization\r\n      });\r\n      if (response.ok) {\r\n        const tracks = await response.json();\r\n        return tracks.tracks.items;\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async fullSearch(searchTerm) {\r\n    let resultsList = {\r\n      playlists: await SpotifyApi.searchPlaylists(searchTerm),\r\n      artists: await SpotifyApi.searchArtists(searchTerm),\r\n      albums: await SpotifyApi.searchAlbums(searchTerm),\r\n      tracks: await SpotifyApi.searchTracks(searchTerm)\r\n    };\r\n    return resultsList\r\n  },\r\n\r\n  async nextResults(searchTerm, offset, type) {\r\n    const limit = 50;\r\n    if (type === 'playlists') {\r\n      return await SpotifyApi.searchPlaylists(searchTerm, offset, limit);\r\n\r\n    } else if (type === 'artist') {\r\n      return await SpotifyApi.searchArtists(searchTerm, offset, limit);\r\n\r\n    } else if (type === 'albums') {\r\n      return await SpotifyApi.searchAlbums(searchTerm, offset, limit);\r\n\r\n    } else if (type === 'tracks') {\r\n      return await SpotifyApi.searchTracks(searchTerm, offset, limit);\r\n    }\r\n  },\r\n\r\n  async sendPlayList(playlistName, playlistUris) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n    const userId = await SpotifyApi.getUserId();\r\n    const authorization = {Authorization: `Bearer ${access}`};\r\n\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n        method: 'POST',\r\n        headers: authorization,\r\n        body: JSON.stringify({name: playlistName})\r\n      });\r\n\r\n      if(response.ok) {\r\n        const jsonResponse = await response.json();\r\n        const playlistId = jsonResponse.id;\r\n\r\n        try {\r\n          const response = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\r\n            headers: authorization,\r\n            method: 'POST',\r\n            body: JSON.stringify({uris:playlistUris})\r\n          });\r\n          if(response.ok){\r\n            return\r\n          }\r\n\r\n        } catch(error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n    catch(error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async transferPlaybackHere(deviceId) { // should be changed\r\n    const access = await SpotifyApi.getAccesToken();\r\n\r\n    const authorization = {\r\n      Authorization: `Bearer ${access}`,\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n\r\n    fetch(\"https://api.spotify.com/v1/me/player\", {\r\n      method: \"PUT\",\r\n      headers: authorization,\r\n      body: JSON.stringify({\r\n        \"device_ids\": [ deviceId ],\r\n        \"play\": true,\r\n      })\r\n    });\r\n  },\r\n\r\n  async getPlaylist(playlistId='', playlist='user' ) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n\r\n    const url = {\r\n      user: `https://api.spotify.com/v1/me/playlists`,\r\n      spotify: `https://api.spotify.com/v1/playlists/${playlistId}/tracks` ,\r\n      spotifyAlbum: `https://api.spotify.com/v1/albums/${playlistId}/tracks`\r\n    }\r\n\r\n    const authorization = {\r\n      Authorization: `Bearer ${access}`,\r\n     \"Content-Type\": \"application/json\"\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url[playlist], {\r\n        headers: authorization\r\n      });\r\n\r\n      if(response.ok) {\r\n        const jsonResponse = await response.json();\r\n        return jsonResponse.items;\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n  async playTrack(postion, uris=[''], type = 'track') {\r\n\r\n    const access = SpotifyApi.getAccesToken();\r\n    const authorization = {Authorization: `Bearer ${access}`};\r\n\r\n    let body;\r\n\r\n    if (type === 'playlist' || type === 'album' || type === 'artist') {\r\n      body = {\r\n        \"context_uri\": uris,\r\n        \"offset\": { \"postion\": postion }\r\n      }\r\n    } else {\r\n      body = {\r\n        \"uris\": uris,\r\n        \"offset\": { \"uri\": postion }\r\n      }\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('https://api.spotify.com/v1/me/player/play', {\r\n        method: \"PUT\",\r\n        headers: authorization,\r\n        body: JSON.stringify({body})\r\n      });\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        console.log(jsonResponse);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n  async browserSpotify() {\r\n    const access = await SpotifyApi.getAccesToken();\r\n\r\n    const authorization = {\r\n      Authorization: `Bearer ${access}`,\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://api.spotify.com/v1/browse/categories?&limit=50', {\r\n        headers: authorization\r\n      });\r\n\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        let items = jsonResponse.categories.items;\r\n        let rearrangedItems = items.map((item) => {\r\n          item['images'] = item.icons\r\n          return item;\r\n        });\r\n        return rearrangedItems;\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n    async fetchSpotify(url) {\r\n    const access = await SpotifyApi.getAccesToken();\r\n\r\n    const authorization = {\r\n      Authorization: `Bearer ${access}`,\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        headers: authorization\r\n      });\r\n\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        console.log(jsonResponse);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n  async getCategoriePlaylist(categoryId) {\r\n  const access = await SpotifyApi.getAccesToken();\r\n\r\n  const authorization = {\r\n    Authorization: `Bearer ${access}`,\r\n    \"Content-Type\": \"application/json\"\r\n  };\r\n\r\n\r\n\r\n  try {\r\n    const response = await fetch(`https://api.spotify.com/v1/browse/categories/${categoryId}/playlists`, {\r\n      headers: authorization\r\n    });\r\n\r\n    if (response.ok) {\r\n      const jsonResponse = await response.json();\r\n      console.log(jsonResponse)\r\n      return jsonResponse.playlists.items;\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n};\r\n\r\n\r\nexport default SpotifyApi;\r\n","import React, { Component, createContext } from 'react';\r\nimport SpotifyApi from '../util/Spotify';\r\n\r\nexport const ContextStore = createContext()\r\n\r\nexport class MainContext extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchTerm: '',\r\n      playlists: [],\r\n      artists: [],\r\n      albums: [],\r\n      tracks: [],\r\n      newPlaylist: [],\r\n      currentPlaylist: [],\r\n      addToNewPlaylist: this.addToNewPlaylist,\r\n      addToCurrentPlaylist: this.addToCurrentPlaylist,\r\n      deleteTrack: this.deleteTrack,\r\n      updateState: this.updateState,\r\n      searchSpotify: this.searchSpotify,\r\n      searchMore: this.searchMore\r\n    }\r\n\r\n    this.scrollHeight = 200;\r\n    this.offset = 50;\r\n  }\r\n\r\n  componentDidMount() {\r\n    SpotifyApi.getAccesToken();\r\n  }\r\n\r\n  updateState = (property, newState) => {\r\n    this.setState({ [property]: newState })\r\n  }\r\n\r\n  searchSpotify = (searchTerm) => {\r\n    SpotifyApi.fullSearch(searchTerm).then((results) => {\r\n      const { playlists, artists, albums, tracks } = results;\r\n      this.tracks = tracks;\r\n      this.setState({\r\n        searchTerm: searchTerm,\r\n        playlists: playlists,\r\n        artists: artists,\r\n        albums: albums,\r\n        tracks: tracks\r\n      } //, this.props.history.push('/search') temp\r\n      )\r\n    })\r\n  }\r\n\r\n  searchMore = (newResults, route) => {  // temp\r\n    this.setState(state => ({\r\n      [route]: [...state[route], ...newResults]\r\n    }));\r\n  }\r\n\r\n\r\n  addToNewPlaylist = (track, type = 'track', trackIndex = 0) => {\r\n    this.setState((state) => {\r\n      const tracks = state.newPlaylist.filter(element => element.id !== track.id); \r\n      const newItem = type === 'track' ? [...tracks, track] : [...tracks, ...track];\r\n      return { newPlaylist: newItem }\r\n    });\r\n  }\r\n\r\n  addToCurrentPlaylist = (tracks) => {\r\n    this.setState({ currentPlaylist: tracks });\r\n  }\r\n\r\n  deleteTrack = (track) => {\r\n    const tracks = this.state.newPlaylist.filter(element => element.id !== track.id);\r\n    this.setState({ newPlaylist: tracks });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <ContextStore.Provider value={this.state} >\r\n        {this.props.children}      \r\n      </ContextStore.Provider>\r\n    );\r\n  }\r\n}","import React, { PureComponent } from 'react';\r\nimport './SearchBar.css';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass SearchBar extends PureComponent {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.delay = null;\r\n  }\r\n  \r\n  static contextType = ContextStore;\r\n\r\n  handleSearchTerm = (e) => {\r\n    let searchTerm = e.target.value;\r\n    this.context.updateState('searchTerm', searchTerm)\r\n    clearTimeout(this.delay);\r\n    this.delay = setTimeout(this.search(searchTerm), 16.7); // makes the results transition more natural delay is set to 60frames per second. can be improved by taking the time react/api takes to update/fetch into account.\r\n  }\r\n\r\n  search = (searchTerm) => {\r\n    this.context.searchSpotify(searchTerm);\r\n    if (this.props.location.pathname === '/') { \r\n      this.props.history.push('/search')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className='SearchBar'>\r\n        <input onChange={this.handleSearchTerm}  placeholder=\"Enter A Song, Album, or Artist\"/>\r\n        <Link to=\"/search\">\r\n          <FontAwesomeIcon className=\"Search_Button\" icon={faSearch}/>\r\n          <button type=\"submit\" onClick={this.submitSearch} name=\"SEARCH\" />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { PureComponent } from 'react';\r\nimport './Navbar.css';\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faAlignJustify, faListUl, faPlusSquare, faTh } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Navbar extends PureComponent {\r\n  render() {\r\n    return(\r\n      <div className='Navbar-wrapper'>\r\n        <div className='Navbar'>\r\n          <NavLink className=\"LinkButton\" to=\"/search\"><FontAwesomeIcon icon={faSearch} />  Search</NavLink>\r\n          <NavLink className=\"LinkButton\" to=\"/currentPlaylist\"><FontAwesomeIcon icon={faAlignJustify} /> Current Playlist</NavLink>\r\n          <NavLink className=\"LinkButton\" to=\"/newPlaylist\"><FontAwesomeIcon icon={faPlusSquare} /> New Playlist</NavLink>\r\n          <NavLink className=\"LinkButton\" to=\"/library\"><FontAwesomeIcon icon={faTh} /> Library</NavLink>\r\n          <NavLink className=\"LinkButton\" to=\"/userPlaylists\"><FontAwesomeIcon icon={faListUl} /> Playlists</NavLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './Text.css';\r\n\r\nconst Text = ({ name, artist, textSize, overfl }) => {\r\n  return(\r\n    <div className=\"Text\">\r\n      <p style={{ fontSize: textSize, overflow: overfl  }}>{name}</p>\r\n      <p style={{ fontSize: textSize, overflow: overfl  }}>{artist}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Text;\r\n","import React from 'react';\r\nimport './Time.css';\r\n\r\nconst Time = ({ ms }) => {\r\n  const trackTime = (ms) => {\r\n    let minute, seconds, fullSeconds;\r\n    seconds = Math.floor(ms / 1000);\r\n    minute = Math.floor(seconds / 60);\r\n    seconds = seconds % 60;\r\n    fullSeconds = `0${seconds}`.slice(-2);\r\n      return `${minute}:${fullSeconds}`;\r\n    }\r\n\r\n    return (\r\n        <div className=\"Time\">\r\n            {trackTime(ms)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Time;\r\n\r\n\r\n","import React from 'react';\r\nimport './PlayButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst PlayButton = ({ onPlayClick }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"play-pause\" onClick={onPlayClick} >\r\n        <FontAwesomeIcon className=\"button\" icon={faPlay} size=\"lg\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PlayButton;","import React from 'react';\r\nimport './AddButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst AddButton = ({ onAdd }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"AddButton\" onClick={onAdd} >\r\n        <FontAwesomeIcon className=\"button\" icon={faPlus} size=\"lg\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AddButton;","import React from 'react';\r\nimport './DeleteButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMinus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst DeleteButton = ({ onDelete }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"DeleteButton\" onClick={onDelete} >\r\n        <FontAwesomeIcon className=\"button\" icon={faMinus} size=\"lg\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default DeleteButton;","import React from 'react';\r\nimport './ActionOverlay.css';\r\n\r\nimport PlayButton from '../Buttons/PlayButton/PlayButton';\r\nimport AddButton from '../Buttons/AddButton/AddButton';\r\nimport DeleteButton from '../Buttons/DeleteButton/DeleteButton';\r\n\r\nconst ActionOverlay = ({ trackAction, onPlayClick, inPlaylist, playlist }) => {\r\n  return (\r\n    <div className={`Action-Overlay ${playlist === \"artist\" ? \"artist\" : null}`}>\r\n      {inPlaylist ? <DeleteButton onDelete={trackAction} /> : <AddButton onAdd={trackAction} />}\r\n      <PlayButton onPlayClick={onPlayClick}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ActionOverlay;","import React, { PureComponent } from 'react';\r\nimport SpotifyApi from '../../util/Spotify';\r\nimport './Track.css'\r\n\r\nimport Text from '../Text/Text';\r\nimport Time from '../Time/Time'; \r\nimport ActionOverlay from '../ActionOverlay/ActionOverlay';\r\n\r\nclass Track extends PureComponent {\r\n  \r\n  handlePlay = (e) => {    \r\n    const urisList = this.props.getUrisList();\r\n    SpotifyApi.playTrack(this.props.track.uri, urisList);\r\n  }\r\n\r\n  handleTrackAction = (e) => {\r\n    this.props.trackAction(this.props.track)\r\n  }\r\n\r\n  render() {\r\n    const {artists, name, album, duration_ms } = this.props.track;\r\n    return(\r\n      <div className=\"Track\">\r\n        <div className=\"Track-information\">\r\n          <div className=\"Album-img\" >\r\n            {album.images[2] ? \r\n              <img src={album.images[2].url} alt=\"album\" /> :\r\n              null\r\n            }            \r\n          </div> \r\n          <div className=\"Track-name\">\r\n            <Text name={name} artist={artists[0].name} />\r\n          </div>  \r\n          <Time ms={duration_ms} />          \r\n        </div>    \r\n        <ActionOverlay trackAction={this.handleTrackAction} onPlayClick={this.handlePlay} inPlaylist={this.props.inPlaylist}/>   \r\n      </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default Track;","import React from 'react';\r\nimport './Grid.css';\r\n\r\nconst Grid = ({children}) => {\r\n  return (\r\n    <div className=\"Grid\">\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\nimport './TrackList.css'\r\n\r\nimport Track from '../Track/Track';\r\nimport Grid from '../Grid/Grid';\r\n\r\nconst TrackList = ({ trackAction, inPlaylist, tracklist }) => {\r\n\r\n const getUrisList = () => {\r\n    const newList = [];\r\n    tracklist.map((track) => newList.push(track.uri));\r\n    return newList;\r\n  }\r\n\r\n  return (\r\n    <Grid>\r\n      {tracklist.map((track) => {\r\n        return (\r\n          <Track\r\n            track={track}\r\n            key={track.id}\r\n            trackAction={trackAction}\r\n            inPlaylist={inPlaylist}\r\n            getUrisList={getUrisList}\r\n          />\r\n        )\r\n      })\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nexport default TrackList;\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\n\r\nconst Button = ({ type, buttonAction, name}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"Button\" type={type} onClick={buttonAction} >{name}</button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { PureComponent } from 'react';\r\nimport './NewPlaylist.css';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\n\r\nimport TrackList from '../../Components/TrackList/TrackList';\r\nimport Button from '../../Components/Buttons/Button/Button';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nclass NewPlaylist extends PureComponent {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      playlistName: ''\r\n    }\r\n  }\r\n\r\n  static contextType = ContextStore; \r\n\r\n  savePlayList = () => {\r\n    const { newPlaylist } = this.context;\r\n    const { playlistName } = this.state;\r\n    if (newPlaylist.length > 0 && playlistName.length > 0) {\r\n      const playlistUris = newPlaylist.map(track => track.uri);\r\n      SpotifyApi.sendPlayList(playlistName, playlistUris);\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ playlistName: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { newPlaylist, deleteTrack } = this.context;\r\n    return(\r\n      <div className=\"Playlist\">\r\n        <input\r\n          onChange={this.handleChange}\r\n          placeholder=\"Playlist\"/>\r\n        <TrackList \r\n          tracklist={newPlaylist}\r\n          trackAction={deleteTrack}\r\n          inPlaylist\r\n        />\r\n        <Button type=\"submit\" buttonAction={this.savePlayList} name=\"SAVE TO SPOTIFY\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewPlaylist;\r\n","import React, { PureComponent } from 'react';\r\nimport './CurrentPlaylist.css';\r\n\r\nimport TrackList from '../TrackList/TrackList';\r\n\r\nclass CurrentPlaylist extends PureComponent {\r\n  render() {\r\n    return (\r\n        <TrackList tracklist={[]} />    \r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrentPlaylist;","import React from 'react';\r\nimport './SearchResults.css';\r\n\r\nimport Grid from '../Grid/Grid';\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nconst SearchResults = ({ children }) => {\r\n  return (\r\n    <Grid>\r\n      <Switch>\r\n        <Route exact path=\"/search\" render={() => children} />\r\n        <Route path=\"/search/playlists\" render={() => children[0]} />\r\n        <Route path=\"/search/tracks\" render={() => children[1]} />\r\n        <Route path=\"/search/albums\" render={() => children[2]} />\r\n        <Route path=\"/search/artists\" render={() => children[3]} />\r\n      </Switch>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nexport default SearchResults;\r\n","import React from 'react';\r\nimport './Title.css';\r\n\r\nconst Title = ({ children }) => {\r\n  return (\r\n    <div className=\"Title\" >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport './Border.css';\r\n\r\nconst Border = () => {\r\n  return(\r\n    <div className=\"Border\"/>\r\n  )\r\n}\r\n\r\nexport default Border;","import React from 'react';\r\nimport './Header.css';\r\nimport Title from '../Title/Title';\r\nimport Button from '../Buttons/Button/Button';\r\nimport Border from '../Border/Border';\r\n\r\nconst Header = ({ children, buttonAction, name }) => {\r\n  return (\r\n    <div className=\"Header\" >\r\n      <Title>{children}</Title>\r\n      <Button type=\"button\" buttonAction={buttonAction} name={name} />\r\n      <Border />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React, { useState, useContext } from 'react';\r\nimport './ResultsTracklist.css';\r\n\r\nimport TrackList from '../../Components/TrackList/TrackList';\r\nimport Header from '../../Components/Header/Header';\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nconst ResultsTracklist = ({ tracklist, addToPlaylist, history }) => {\r\n\r\n  const context = useContext(ContextStore);\r\n\r\n  const [expand, toggleExpand] = useState({\r\n    expanded: false,\r\n    state: 'More',\r\n    results: 4\r\n  });\r\n\r\n  const handleToggleExpand = () => {\r\n    toggleExpand(() => {\r\n      if (history.location.pathname === '/search/tracks') {\r\n        history.push('/search')\r\n        return { expanded: false, state: 'More', results: 4 }\r\n      } else {\r\n        history.push('/search/tracks')\r\n        return { expanded: true, state: 'Less', results: Infinity }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"ResultsTracklist\" >\r\n      <Header name={expand.state} buttonAction={handleToggleExpand}>Tracks</Header>\r\n      <TrackList trackAction={context.addToNewPlaylist} tracklist={context.tracks.slice(0, expand.results)}  />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultsTracklist;\r\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\n\r\nimport Text from '../Text/Text';\r\nimport ActionOverlay from '../ActionOverlay/ActionOverlay';\r\n\r\nconst Card = ({ playlist, handleOnclick, id }) => {\r\n\r\n  const onPlayClick = () => {\r\n    const uri = playlist.uri.split(':').slice(2).join(':');\r\n    SpotifyApi.playTrack('', uri);\r\n  }\r\n\r\n  return (\r\n    <div className={`Card ${playlist.type === \"artist\" ? \"artist\" : false}`}>\r\n      <div className={`Card-Img ${playlist.type === \"artist\" ? \"artist\" : false}`} >\r\n        {playlist.images[0] ? <img src={playlist.images[0].url} alt=\"img\" /> : null}\r\n      </div>\r\n      <Text name={playlist.name} />\r\n      <ActionOverlay \r\n        trackAction={() => handleOnclick(id, playlist)} \r\n        playlist={ playlist.type === \"artist\" ? \"artist\" : null }\r\n        onPlayClick={onPlayClick}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React, { useContext } from 'react';\r\nimport './PlaylistDisplay.css';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\nimport Card from '../../Components/Card/Card';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nconst PlaylistDisplay = ({ playlists, traverse, albums, libary }) => {\r\n\r\n  const context = useContext(ContextStore);  \r\n\r\n  const handleOnclick = (key, playlist) => {\r\n    let images = playlist.images //<======== temp\r\n    let newPlaylist = [];\r\n    let secondPram = 'spotify';\r\n\r\n    if (albums) {\r\n      secondPram = 'spotifyAlbum';\r\n      SpotifyApi.getPlaylist(key, secondPram).then((playlist) => {\r\n        playlist.map((item) => {\r\n          item['album'] = { images }; //<======== temp\r\n          return newPlaylist.push(item);\r\n        });\r\n        context.addToNewPlaylist(newPlaylist, 'tracklist')\r\n      });\r\n    } \r\n\r\n    else if (libary && playlist.type === undefined) {\r\n      SpotifyApi.getCategoriePlaylist(playlist.id).then((playlist) => {\r\n        return traverse(playlist)\r\n      });      \r\n    } \r\n\r\n    else {\r\n      SpotifyApi.getPlaylist(key, secondPram).then((playlists) => {\r\n        playlists.map((playlist) => {\r\n          return newPlaylist.push(playlist.track);\r\n        })\r\n        context.addToNewPlaylist(newPlaylist, 'tracklist')\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"PlaylistDisplay\">\r\n      {playlists.map(playlist => {\r\n        return (\r\n          <Card\r\n            playlist={playlist}\r\n            id={playlist.id}\r\n            key={playlist.id}\r\n            handleOnclick={handleOnclick}\r\n          />)\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaylistDisplay;\r\n","import React, { useState, useContext  } from 'react';\r\nimport './Albumslist.css';\r\n\r\nimport PlaylistDisplay from '../PlaylistDisplay/PlaylistDisplay';\r\nimport Header from '../../Components/Header/Header';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nconst Albumslist = ({ addToCurrentPlaylist, history })  => {\r\n\r\n  const context = useContext(ContextStore);\r\n\r\n  const [expand, toggleExpand] = useState({\r\n    expanded: false,\r\n    state: 'More',\r\n    results: 3\r\n  });\r\n\r\n  const handleToggleExpand = () => {\r\n    toggleExpand(() => {\r\n      if (history.location.pathname === '/search/albums') {\r\n        history.push('/search')\r\n        return { expanded: false, state: 'More', results: 3 }\r\n      } else {\r\n        history.push('/search/albums')\r\n        return { expanded: true, state: 'Less', results: Infinity }\r\n      }\r\n    })\r\n  }\r\n  return(\r\n    <div className=\"Albumslist\" >\r\n      <Header name={expand.state} buttonAction={handleToggleExpand}>Albums</Header>\r\n      <PlaylistDisplay addToCurrentPlaylist={addToCurrentPlaylist} playlists={context.albums.slice(0, expand.results)} albums />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Albumslist;\r\n","import React, { useState, useContext } from 'react';\r\nimport './Artists.css';\r\n\r\nimport PlaylistDisplay from '../PlaylistDisplay/PlaylistDisplay';\r\nimport Header from '../../Components/Header/Header';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nconst Artists = ({ addToCurrentPlaylist, history }) => {\r\n\r\n  const context = useContext(ContextStore);\r\n\r\n  const [expand, toggleExpand] = useState({\r\n    expanded: false,\r\n    state: 'More',\r\n    results: 3\r\n  });\r\n\r\n  const handleToggleExpand = () => {\r\n    if (history.location.pathname === '/search/artists') {\r\n      history.push('/search')\r\n    } else {\r\n      history.push('/search/artists')\r\n    }\r\n  }\r\n\r\n  const results = () => {\r\n    return history.location.pathname === '/search/albums' ? Infinity : 3;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Artists\" >\r\n      <Header name={expand.state} buttonAction={handleToggleExpand} artists>Artists</Header>\r\n      <PlaylistDisplay addToCurrentPlaylist={addToCurrentPlaylist} playlists={context.artists.slice(0, results())} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Artists;\r\n","import React, { useState, useContext } from 'react';\r\nimport './Playlists.css';\r\n\r\nimport PlaylistDisplay from '../PlaylistDisplay/PlaylistDisplay';\r\nimport Header from '../../Components/Header/Header';\r\n\r\nimport { ContextStore } from '../../Context/MainContext';\r\n\r\nconst Playlists = ({ addToCurrentPlaylist, history  }) => {\r\n\r\n  const context = useContext(ContextStore);\r\n\r\n  const [expand, toggleExpand] = useState({\r\n    expanded: false,\r\n    state: 'More',\r\n    results: 3\r\n  });\r\n\r\n  const handleToggleExpand = () => {\r\n    toggleExpand(() => {\r\n      if (history.location.pathname === '/search/playlists') {\r\n        history.push('/search')\r\n        return { expanded: false, state: 'More', results: 3 }\r\n      } else {\r\n        history.push('/search/playlists')\r\n        return { expanded: true, state: 'Less', results: Infinity }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"Playlists\" >\r\n      <Header name={expand.state} buttonAction={handleToggleExpand}>Playlists</Header>\r\n      <PlaylistDisplay addToCurrentPlaylist={addToCurrentPlaylist} playlists={context.playlists.slice(0,expand.results)}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Playlists;\r\n","import React, { PureComponent } from 'react';\r\nimport './Main.css';\r\n\r\nimport SearchResults from '../../Components/SearchResults/SearchResults';\r\n// import NewPlaylist from '../NewPlaylist/NewPlaylist';\r\n// import CurrentPlaylist from '../../Components/CurrentPlaylist/CurrentPlaylist';\r\n// import Library from '../Library/Library';\r\n// import UserPlaylists from '../UserPlaylists/UserPlaylists';\r\nimport ResultsTracklist from '../ResultsTracklist/ResultsTracklist';\r\nimport Albumslist from '../Albumslist/Albumslist';\r\nimport Artists from '../Artists/Artists';\r\nimport Playlists from '../Playlists/Playlists';\r\nimport { ContextStore} from '../../Context/MainContext';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nclass Main extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.scrollHeight = 300;\r\n    this.offset = 50;\r\n  }\r\n\r\n  static contextType = ContextStore;\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.history.location.pathname === '/search') {\r\n      this.offset = 50;\r\n      this.scrollHeight = 300;\r\n    };\r\n  }\r\n\r\n  loadOnScroll = (e) => {\r\n    const { searchTerm, searchMore } =  this.context;\r\n    const search = this.props.location.pathname.split('/')[1];\r\n    const route = this.props.location.pathname.split('/')[2];\r\n\r\n    if (this.scrollHeight <= e.target.scrollTop && search === 'search' ) {\r\n      this.scrollHeight += 2075;\r\n      this.offset += 50;\r\n\r\n      SpotifyApi.nextResults(searchTerm, this.offset, route).then((results) => {\r\n        searchMore(results, route);\r\n      })\r\n     }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"Main\" onScroll={this.loadOnScroll} >\r\n        <Switch>\r\n          <Route path=\"/search\" render={(props) => (\r\n            <SearchResults>\r\n              <Playlists key={1} {...props}/>\r\n              <ResultsTracklist key={2} {...props}/>\r\n              <Albumslist key={3} {...props}/>\r\n              <Artists key={4}  {...props}/>\r\n            </SearchResults>\r\n          )}/>\r\n          <Route path=\"/currentPlaylist\" render={() => this.props.children[0]} />\r\n          <Route path=\"/newPlaylist\" render={() => this.props.children[1]} />\r\n          <Route path=\"/library\" render={() => this.props.children[2]} />\r\n          <Route path=\"/userPlaylists\" render={() => this.props.children[3]} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './ProgressionBar.css';\r\n\r\nconst ProgressionBar = ({ currentPostion, sliderAction, maxValue, handleMouseUp }) => {\r\n  return(\r\n    <div className=\"Bar-container\">\r\n      <input className=\"Bar\" \r\n        onMouseUp={handleMouseUp}\r\n        onChange={(e) => sliderAction(e)} \r\n        step='1' \r\n        type=\"range\" \r\n        min=\"1\" \r\n        value={currentPostion} \r\n        max={maxValue}/>\r\n        <div className=\"progression\" style={{ width: `${(100 / maxValue) * currentPostion}%` }} />      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProgressionBar;\r\n","import React from 'react';\r\nimport './PauseButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPause } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst PauseButton = ({ onPlayClick }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"play-pause\" onClick={onPlayClick} >\r\n        <FontAwesomeIcon className=\"button\" icon={faPause} size=\"lg\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PauseButton;","import React from 'react';\r\nimport './ForwardButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faForward } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ForwardButton = ({ onForward }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"forward\" onClick={onForward} >\r\n        <FontAwesomeIcon className=\"button\" icon={faForward} size=\"sm\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ForwardButton;","import React from 'react';\r\nimport './BackwardButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBackward } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst BackwardButton = ({ onBackward }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"back\" onClick={onBackward} >\r\n        <FontAwesomeIcon className=\"button\" icon={faBackward} size=\"sm\" />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default BackwardButton;","import React from 'react';\r\nimport './PlaylistButton.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faListUl } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst PlaylistButton = ({ togglePlaylist }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className=\"Playlist-Button\" >\r\n        <FontAwesomeIcon icon={faListUl} onClick={togglePlaylist} />  \r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PlaylistButton;","import React from 'react';\r\nimport './TrackProgression.css';\r\n\r\nconst TrackProgression = ({ children }) => {\r\n  return (\r\n    <div className=\"Track-Progression\" >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrackProgression;","import React, { PureComponent } from 'react';\r\nimport './Player.css';\r\n\r\nimport ProgressionBar from '../../Components/ProgressionBar/ProgressionBar';\r\nimport Track from '../../Components/Track/Track';\r\nimport Time from '../../Components/Time/Time';\r\nimport PlayButton from '../../Components/Buttons/PlayButton/PlayButton';\r\nimport PauseButton from '../../Components/Buttons/PauseButton/PauseButton';\r\nimport ForwardButton from '../../Components/Buttons/ForwardButton/ForwardButton';\r\nimport BackwardButton from '../../Components/Buttons/BackwardButton/BackwardButton';\r\nimport PlaylistButton from '../../Components/Buttons/PlaylistButton/PlaylistButton';\r\nimport TrackProgression from '../../Components/TrackProgression/TrackProgression';\r\nimport CurrentPlaylist from '../../Components/CurrentPlaylist/CurrentPlaylist';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faVolumeUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Player extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token: \"\",\r\n      deviceId: \"\",\r\n      loggedIn: true,\r\n      playing: false,\r\n      error: \"\",\r\n      currentTrack: '',\r\n      trackName: '',\r\n      artistName: '',\r\n      albumName: '',\r\n      position: 0,\r\n      duration: 0,\r\n      volume: 0,\r\n      mute: false,\r\n      showPlaylist: 'hidden',\r\n    }\r\n\r\n    this.playerCheckInterval = null;\r\n    this.getPlayerStateTimer = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ token: SpotifyApi.getAccesToken() });\r\n    this.playerCheckInterval = setInterval(() => this.checkForPlayer(), 800);\r\n  }\r\n\r\n  checkForPlayer = () => {\r\n    const { token } = this.state;\r\n    if (window.Spotify !== null) {\r\n      clearInterval(this.playerCheckInterval);\r\n      this.player = new window.Spotify.Player({ name: \"SpotifyClone\", getOAuthToken: cb => { cb(token) } });\r\n      this.createEventHandlers();\r\n      this.player.connect();\r\n      setTimeout( () => this.getPlayerStateTimer = setInterval(() => this.getPlayerCurrentstate(), 500), 1000)\r\n    }\r\n  }\r\n\r\n  createEventHandlers = () => {\r\n    this.player.on('initialization_error', e => console.error(e));\r\n    this.player.on('authentication_error', e => console.error(e));\r\n    this.player.on('account_error', e => console.error(e));\r\n    this.player.on('playback_error', e => console.error(e));\r\n    this.player.on('player_state_changed', state => this.onStateChanged(state));\r\n    this.player.on('ready', data => {\r\n      let { device_id } = data;\r\n      this.setState({ deviceId: device_id });\r\n      SpotifyApi.transferPlaybackHere(device_id)\r\n    });\r\n  }\r\n\r\n  onStateChanged = (state) => {\r\n\r\n    if (state !== null) {\r\n      const { current_track } = state.track_window;\r\n      const trackName = current_track.name;\r\n      const albumName = current_track.album.name;\r\n      const artistName = current_track.artists.map(artist => artist.name).join(\", \");\r\n      const playing = !state.paused;\r\n      const duration = current_track.duration_ms;\r\n      this.setState({\r\n        currentTrack: current_track,\r\n        duration: duration,\r\n        trackName: trackName,\r\n        albumName: albumName,\r\n        artistName: artistName,\r\n        playing: playing\r\n      });\r\n\r\n      this.player.getVolume().then(volume => this.setState({ volume: volume * 100 }));\r\n    }\r\n  }\r\n\r\n  getPlayerCurrentstate = () => {\r\n    this.player.getCurrentState().then((state) => this.setState({ position: state.position}));\r\n  }\r\n\r\n  onPrevClick = () => {\r\n    this.player.previousTrack();\r\n  }\r\n\r\n  onPlayClick = () => {\r\n    this.player.togglePlay();\r\n  }\r\n\r\n  onNextClick = () => {\r\n    this.player.nextTrack();\r\n  }\r\n\r\n  onVolumeClick = (e) => {\r\n    let volume = e.target.value;\r\n    this.player.setVolume(volume/100).then(() => this.setState( { volume: volume } ));\r\n  }\r\n\r\n  onSeek = (e) => {\r\n    clearInterval(this.getPlayerStateTimer);\r\n    this.setState({ position: e.target.value });\r\n  }\r\n\r\n  handleMouseUp = (e) => {\r\n    this.player.seek(this.state.position).then(() => {\r\n      this.getPlayerStateTimer = setInterval(() => this.getPlayerCurrentstate(), 100);\r\n    });\r\n  }\r\n\r\n  toggleMute = (e) => {\r\n    if (!this.state.mute) {\r\n      this.player.setVolume(0);\r\n      this.setState({ mute: true })\r\n    } else {\r\n      this.player.setVolume(this.state.volume/100);\r\n      this.setState({ mute: false });\r\n    }\r\n  }\r\n\r\n  togglePlaylist = (e) => {\r\n    if (this.state.showPlaylist === 'hidden') {\r\n      this.setState({ showPlaylist: 'visible' });\r\n    } else {\r\n      this.setState({ showPlaylist: 'hidden' });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { playing, currentTrack, volume, duration, position, artistName, trackName, showPlaylist } = this.state;\r\n    return(\r\n      <div className=\"Player\">\r\n        <div className=\"Track-info\">\r\n          {this.state.playing ? <Track track={currentTrack} /> : <p>{artistName}: {trackName}</p>   }\r\n        </div>\r\n        <div className=\"Control\">\r\n          <div className=\"Player-buttons\">\r\n            <BackwardButton onBackward={this.onPrevClick} />\r\n            {!playing ? <PlayButton onPlayClick={this.onPlayClick} /> : <PauseButton onPlayClick={this.onPlayClick} />}\r\n            <ForwardButton onForward={this.onNextClick} />\r\n          </div>\r\n          <TrackProgression >\r\n            <Time ms={position} />\r\n            <div className=\"Track-Bar\">\r\n              <ProgressionBar currentPostion={position} sliderAction={this.onSeek} maxValue={duration} handleMouseUp={this.handleMouseUp} />\r\n            </div>\r\n            <Time ms={duration} />\r\n          </TrackProgression>\r\n        </div>\r\n        <div className=\"Control-Leftside\">\r\n          <div className=\"Current-Playlist-Container\" style={{ visibility: showPlaylist }}>\r\n            <CurrentPlaylist playlist={this.props.currentPlaylist} />\r\n          </div>\r\n          <PlaylistButton togglePlaylist={this.togglePlaylist} />\r\n          <div className=\"volume\">\r\n            <FontAwesomeIcon icon={faVolumeUp} size=\"sm\" onClick={this.toggleMute} />\r\n            <div className=\"volume-bar\">\r\n              <ProgressionBar currentPostion={volume} sliderAction={this.onVolumeClick} maxValue={\"100\"} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import React, { PureComponent } from 'react';\r\nimport './Library.css';\r\n\r\nimport PlaylistDisplay from '../PlaylistDisplay/PlaylistDisplay';\r\nimport Grid from '../../Components/Grid/Grid';\r\n\r\nimport SpotifyApi from './../../util/Spotify';\r\n\r\nclass Library extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playlists: [],\r\n      istrackList: false,\r\n      results: 6\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    SpotifyApi.browserSpotify().then((playlists) => {\r\n      this.setState({ playlists: playlists });\r\n    })\r\n  }\r\n\r\n  traverse = (playlists) => {\r\n    if (this.state.istrackList === true) {\r\n      this.props.addToCurrentPlaylist(playlists)\r\n    } else {\r\n      this.setState({ playlists: playlists, istrackList: true });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { playlists } = this.state;\r\n    return (\r\n      <Grid>\r\n        <PlaylistDisplay\r\n          playlists={playlists}\r\n          traverse={this.traverse}\r\n          libary\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Library;\r\n","import React, { PureComponent } from 'react';\r\nimport './UserPlaylists.css';\r\n\r\nimport PlaylistDisplay from '../../Containers/PlaylistDisplay/PlaylistDisplay';\r\nimport Grid from '../../Components/Grid/Grid';\r\n\r\nimport SpotifyApi from './../../util/Spotify';\r\n\r\nclass UserPlaylists extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userPlaylists: []\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    SpotifyApi.getPlaylist().then((playlists) => {\r\n      this.setState({ userPlaylists: playlists });\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    const { userPlaylists } = this.state;\r\n    const { addToCurrentPlaylist } = this.props; \r\n    return (\r\n      <Grid>\r\n        <PlaylistDisplay \r\n          playlists={userPlaylists} \r\n          addToCurrentPlaylist={addToCurrentPlaylist}\r\n        />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPlaylists;","import React, { PureComponent } from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport SearchBar from './Containers/SearchBar/SearchBar';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport NewPlaylist from './Containers/NewPlaylist/NewPlaylist';\r\nimport CurrentPlaylist from './Components/CurrentPlaylist/CurrentPlaylist';\r\nimport Main from './Containers/Main/Main';\r\nimport Player from './Containers/Player/Player';\r\nimport Library from './Containers/Library/Library';\r\nimport UserPlaylists from './Containers/UserPlaylists/UserPlaylists';\r\nimport SpotifyApi from './util/Spotify';\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass App extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.scrollHeight = 200;\r\n    this.offset = 50;\r\n  }\r\n\r\n  componentDidMount() {\r\n    SpotifyApi.getAccesToken();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <SearchBar \r\n          history={this.props.history} //temp  <----    workaround\r\n          location={this.props.location} //temp <----  \r\n        />\r\n        <Navbar />\r\n        <Main\r\n          history={this.props.history} //temp  <----    workaround\r\n          location={this.props.location} //temp <----  \r\n        >\r\n          <CurrentPlaylist />\r\n          <NewPlaylist />\r\n          <Library />\r\n          <UserPlaylists />\r\n        </Main>\r\n        <Player />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { MainContext } from './Context/MainContext';\n\n\n// if (process.env.NODE_ENV !== 'production') {\n//   const { whyDidYouUpdate } = require('why-did-you-update')\n//   whyDidYouUpdate(React)\n// }\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <MainContext>\n      <App />\n    </MainContext>\n  </BrowserRouter>,\n   document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}