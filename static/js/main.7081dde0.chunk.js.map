{"version":3,"sources":["util/Spotify.js","Components/SearchBar/constants.js","constants.js","Components/PlayList/actions.js","Components/PlayList/constants.js","Components/Track/Track.js","Components/Text/Text.js","App.js","Components/Navbar/Navbar.js","Components/TrackList/TrackList.js","Components/Card/Card.js","Components/Button/Button.js","Components/PlaylistDisplay/PlaylistDisplay.js","Components/PlaylistDisplay/actions.js","Components/PlaylistDisplay/constants.js","Components/SearchResults/SearchResults.js","actions.js","Components/PlayList/PlayList.js","Components/Main/Main.js","Components/ProgressionBar/ProgressionBar.js","Components/Player/Player.js","Components/SearchBar/SearchBar.js","Components/SearchBar/actions.js","registerServiceWorker.js","reducers.js","Components/SearchBar/reducers.js","index.js"],"names":["userAccesToken","SpotifyApi","getAccesToken","accessTokenPara","window","location","href","match","expiresInPara","expiresIn","Number","setTimeout","history","pushState","authorizeUrl","concat","getUserId","_getUserId","Object","C_Users_robin_SpotifyClone_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_robin_SpotifyClone_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","access","authorization","userId","response","jsonResponse","wrap","_context","prev","next","this","Authorization","fetch","headers","sent","ok","json","id","abrupt","t0","console","log","stop","apply","arguments","search","_search","_callee2","searchTerm","_context2","tracks","items","map","track","name","artists","songname","album","uri","albumImg","images","duration","duration_ms","_x","fullSearch","_fullSearch","_callee3","resultsList","playlists","_response","_response2","albums","_response3","_context3","t1","t2","t3","_x2","sendPlayList","_sendPlayList","_callee4","playlistName","playlistUris","playlistId","_context4","method","body","JSON","stringify","uris","_x3","_x4","transferPlaybackHere","_transferPlaybackHere","_callee5","deviceId","_context5","Content-Type","device_ids","play","_x5","getPlaylist","_getPlaylist","_callee6","playlist","url","_args6","_context6","length","undefined","user","spotify","spotifyAlbum","playTrack","_playTrack","_callee7","_args7","_context7","offset","_x6","__webpack_require__","d","__webpack_exports__","SEARCHTERM_CHANGE","REQUEST_TRACKS_PENDING","REQUEST_TRACKS_SUCCESS","REQUEST_TRACKS_FAILED","UPDATE_PLAYLIST_TRACKS","UPDATE_PLAYLIST_NAME","actions_updatePlayList","actions_updatePlaylistName","updatePlayList","type","payload","updatePlaylistName","Track","addOnClick","e","_this","props","addToPlaylist","deleteOnClick","deleteTrack","handlePlay","urisList","getUrisList","time","ms","minute","seconds","Math","floor","_this$props$track","trackIndex","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","className","key","onClick","value","src","alt","_Text_Text__WEBPACK_IMPORTED_MODULE_8__","artist","inPlayList","Fragment","PureComponent","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Text","_ref","textSize","overfl","style","fontSize","overflow","App","_Components_SearchBar_SearchBar__WEBPACK_IMPORTED_MODULE_7__","_Components_Navbar_Navbar__WEBPACK_IMPORTED_MODULE_8__","_Components_Main_Main__WEBPACK_IMPORTED_MODULE_9__","_Components_Player_Player__WEBPACK_IMPORTED_MODULE_10__","hot","module","withRouter","Navbar","C_Users_robin_SpotifyClone_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_robin_SpotifyClone_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_robin_SpotifyClone_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleOnClick","state","results","setState","userPlaylists","_this2","then","Playlists","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_10__","icon","faSearch","faAlignJustify","faPlusSquare","faTh","faListUl","Component","TrackList","newList","trackList","push","_this$props","react_default","index","Card","handleOnclick","Button","PlaylistDisplay","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleOnMore","newPlaylist","secondPram","item","onUpdatePlaylist","slice","Components_Card_Card","Components_Button_Button","connect","dispatch","onUpdatePlaylistName","SearchResults","searchResults","Components_PlaylistDisplay_PlaylistDisplay","Components_TrackList_TrackList","searchTracks","PlayList","filter","element","setPlayListName","savePlayList","handleChange","target","onChange","placeholder","Main","route","Switch","Route","path","component","ProgressionBar","currentPostion","sliderAction","maxValue","handleMouseUp","handleOnMouseDown","onMouseUp","onMouseDown","step","min","max","Player","checkForPlayer","token","Spotify","clearInterval","playerCheckInterval","player","getOAuthToken","cb","createEventHandlers","getPlayerStateTimer","setInterval","getPlayerCurrentstate","on","error","onStateChanged","data","device_id","current_track","track_window","trackName","albumName","artistName","join","playing","paused","currentTrack","percentage","getVolume","volume","volume_percentage","position","getCurrentState","onPrevClick","previousTrack","onPlayClick","togglePlay","onNextClick","nextTrack","onVolumeClick","setVolume","onSeek","seek","toggleMute","mute","loggedIn","durationCountDown","_this$state","index_es","faBackward","size","faPause","faPlay","faForward","Components_ProgressionBar_ProgressionBar","faVolumeUp","durationCount","SearchBar","handleSearchTerm","onSearchTermChange","timeout","clearTimeout","onSearchTracks","splice","handleEnter","submitSearch","onKeyPress","Link","isPending","searchChange","catch","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialStatePlaylist","initialStatePlaylistName","initialStateSearchResults","logger","createLogger","rootReducers","combineReducers","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","BrowserRouter","document","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7081dde0.chunk.js","sourcesContent":["const clientId = '7234ae8b9cac4739b9af4f2806d43c7c';\r\nlet userAccesToken;\r\n\r\nconst SpotifyApi = {\r\n\r\n  getAccesToken() {\r\n    if(typeof userAccesToken !== 'undefined') {\r\n      return userAccesToken;\r\n    }\r\n\r\n    const accessTokenPara = window.location.href.match(/access_token=([^&]*)/);\r\n    const expiresInPara = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\n    if (accessTokenPara && expiresInPara) {\r\n      userAccesToken = accessTokenPara[1];\r\n      const expiresIn = Number(expiresInPara[1]);\r\n      window.setTimeout(() => userAccesToken = '', expiresIn * 1000);\r\n      window.history.pushState('Access Token', null, '/');\r\n      return userAccesToken;\r\n    } else {\r\n      const authorizeUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&redirect_uri=http://localhost:3000/&scope=playlist-modify-public%20playlist-modify-private%20streaming%20user-read-birthdate%20user-read-email%20user-read-private&response_type=token`;\r\n      window.location = authorizeUrl;\r\n    }\r\n  },\r\n\r\n  async getUserId () {\r\n    const access = this.getAccesToken();\r\n    const authorization = {Authorization: `Bearer ${access}`};\r\n    let userId = '';\r\n\r\n    try {\r\n      const response = await fetch('https://api.spotify.com/v1/me', {\r\n        headers: authorization\r\n      });\r\n\r\n      if(response.ok) {\r\n        const jsonResponse = await response.json();\r\n        userId = jsonResponse.id;\r\n        return userId;\r\n      }\r\n    }\r\n    catch(error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async search(searchTerm) {\r\n    const access = this.getAccesToken();\r\n    const authorization = { Authorization: `Bearer ${access}` };\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${searchTerm}&type=track`, {\r\n        headers: authorization\r\n      });\r\n      if(response.ok){\r\n        const jsonResponse = await response.json();\r\n        return await jsonResponse.tracks.items.map(track => ({\r\n          id: track.id,\r\n          name: track.artists[0].name,\r\n          songname: track.name,\r\n          album: track.album.name,\r\n          uri: track.uri,\r\n          albumImg: track.album.images[2],\r\n          duration: track.duration_ms\r\n        }));\r\n      }\r\n    }\r\n    catch(error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async fullSearch(searchTerm) {\r\n    const access = this.getAccesToken();\r\n    const authorization = { Authorization: `Bearer ${access}` };\r\n    const resultsList = {\r\n      playlists: [],\r\n      artists: [],\r\n      albums: [],\r\n      tracks: []\r\n    };\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${searchTerm}&type=playlist`, {\r\n        headers: authorization\r\n      });\r\n      if(response.ok){\r\n        const playlists = await response.json();\r\n        resultsList.playlists = playlists.playlists.items;\r\n      }\r\n    }\r\n    catch(error) {\r\n      console.log(error);\r\n    }\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${searchTerm}&type=artist`, {\r\n        headers: authorization\r\n      });\r\n      if(response.ok){\r\n        const artists = await response.json();\r\n        resultsList.artists = artists.artists.items;\r\n      }\r\n    }\r\n    catch(error) {\r\n      console.log(error);\r\n    }\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${searchTerm}&type=album`, {\r\n        headers: authorization\r\n      });\r\n      if(response.ok){\r\n        const albums = await response.json();\r\n        resultsList.albums = albums.albums.items;\r\n      }\r\n    }\r\n    catch(error) {\r\n      console.log(error);\r\n    }\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${searchTerm}&type=track`, {\r\n        headers: authorization\r\n      });\r\n      if(response.ok){\r\n        const tracks = await response.json();\r\n        resultsList.tracks = tracks.tracks.items;\r\n        return resultsList;\r\n      }\r\n    }\r\n    catch(error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async sendPlayList(playlistName, playlistUris) {\r\n    const access = this.getAccesToken();\r\n    const userId = await this.getUserId();\r\n    const authorization = {Authorization: `Bearer ${access}`};\r\n\r\n    try {\r\n      const response = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n        method: 'POST',\r\n        headers: authorization,\r\n        body: JSON.stringify({name: playlistName})\r\n      });\r\n\r\n      if(response.ok) {\r\n        const jsonResponse = await response.json();\r\n        const playlistId = jsonResponse.id;\r\n        \r\n        try {\r\n          const response = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\r\n            headers: authorization,\r\n            method: 'POST',\r\n            body: JSON.stringify({uris:playlistUris})\r\n          });\r\n          if(response.ok){\r\n            return\r\n          }\r\n\r\n        } catch(error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n    catch(error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n\r\n  async transferPlaybackHere(deviceId) { // should be changed\r\n    const access = this.getAccesToken();    \r\n\r\n    const authorization = {\r\n      Authorization: `Bearer ${access}`,\r\n      \"Content-Type\": \"application/json\"\r\n    };\r\n    \r\n    fetch(\"https://api.spotify.com/v1/me/player\", {\r\n      method: \"PUT\",\r\n      headers: authorization,\r\n      body: JSON.stringify({\r\n        \"device_ids\": [ deviceId ],\r\n        \"play\": true,\r\n      })\r\n    });\r\n  },\r\n\r\n  async getPlaylist(playlistId='', playlist='user' ) {\r\n    const access = await this.getAccesToken();\r\n\r\n    const url = {\r\n      user: `https://api.spotify.com/v1/me/playlists`,\r\n      spotify: `https://api.spotify.com/v1/playlists/${playlistId}/tracks` ,\r\n      spotifyAlbum: `https://api.spotify.com/v1/albums/${playlistId}/tracks` \r\n    }\r\n    \r\n    const authorization = {\r\n      Authorization: `Bearer ${access}`,\r\n     \"Content-Type\": \"application/json\"\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url[playlist], {\r\n        headers: authorization\r\n      });\r\n\r\n      if(response.ok) {\r\n        const jsonResponse = await response.json();\r\n        console.log(jsonResponse);\r\n        return jsonResponse.items;\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  },\r\n\r\n  async playTrack(uri, uris=0) {\r\n    const access = this.getAccesToken();\r\n    const authorization = {Authorization: `Bearer ${access}`};\r\n\r\n    try {\r\n      const response = await fetch('https://api.spotify.com/v1/me/player/play', {\r\n        method: \"PUT\",\r\n        headers: authorization,\r\n        body: JSON.stringify({\r\n          \"uris\": uris ,\r\n          \"offset\": {\"uri\": uri }\r\n        })\r\n      });\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        console.log(jsonResponse);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport default SpotifyApi;\r\n","export const SEARCHTERM_CHANGE = \"SEARCHTERM_CHANGE\";\r\n\r\nexport const REQUEST_TRACKS_PENDING = 'REQUEST_TRACKS_PENDING';\r\nexport const REQUEST_TRACKS_SUCCESS = 'REQUEST_TRACKS_SUCCESS';\r\nexport const REQUEST_TRACKS_FAILED = 'REQUEST_TRACKS_FAILED';\r\n","export const UPDATE_PLAYLIST_TRACKS = 'UPDATE_PLAYLIST_TRACKS';\r\nexport const UPDATE_PLAYLIST_NAME = 'UPDATE_PLAYLIST_NAME';\r\n","import {\r\n  UPDATE_PLAYLIST_TRACKS,\r\n  UPDATE_PLAYLIST_NAME\r\n} from './constants';\r\n\r\n\r\nexport const updatePlayList = (playlist) => ({\r\n  type: UPDATE_PLAYLIST_TRACKS,\r\n  payload: playlist\r\n})\r\n\r\nexport const updatePlaylistName = (playlistName) => ({\r\n  type: UPDATE_PLAYLIST_NAME,\r\n  payload: playlistName\r\n})\r\n","export const UPDATE_PLAYLIST_TRACKS = 'UPDATE_PLAYLIST_TRACKS';\r\nexport const UPDATE_PLAYLIST_NAME = 'UPDATE_PLAYLIST_NAME';\r\n\r\n","import React, { PureComponent } from 'react';\r\nimport SpotifyApi from '../../util/Spotify';\r\nimport './Track.css'\r\n\r\nimport Text from '../Text/Text';\r\n\r\nclass Track extends PureComponent {\r\n\r\n  addOnClick = (e) => {\r\n    this.props.addToPlaylist(this.props.track);\r\n  }\r\n\r\n  deleteOnClick = (e) => {\r\n    this.props.deleteTrack(this.props.track);\r\n  }\r\n  \r\n  handlePlay = (e) => {    \r\n    const urisList = this.props.getUrisList();\r\n    SpotifyApi.playTrack(this.props.track.uri, urisList);\r\n  }\r\n\r\n  time = (ms) => {\r\n    let minute, seconds;\r\n    seconds = Math.floor(ms / 1000);\r\n    minute = Math.floor(seconds / 60);\r\n    seconds = seconds % 60;\r\n    return `${minute}:${seconds}`;\r\n  }\r\n\r\n  render() {\r\n    const { id, trackIndex, artists, name, album, uri, duration_ms } = this.props.track;\r\n    return(\r\n      <div className=\"Track\" id={trackIndex} key={id}>\r\n        <div className=\"Track-information\" onClick={this.handlePlay} value={uri}>\r\n          <div>\r\n            <img src={album.images[2].url} alt=\"album\"/>\r\n          </div>\r\n          <Text name={name} artist={artists[0].name}/>\r\n        </div>\r\n          {this.props.inPlayList ? \r\n          <React.Fragment>\r\n          <span>{this.time(duration_ms)}</span>\r\n          <button\r\n            className=\"Track-action\"  //maybe it can be improve by giving it the right prop from parentcomponent\r\n            type=\"button\"\r\n            onClick={this.deleteOnClick}>-\r\n          </button>\r\n          </React.Fragment> :\r\n          <button\r\n            className=\"Track-action\" \r\n            type=\"button\"\r\n            onClick={this.addOnClick}>+\r\n          </button>\r\n          }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Track;\r\n","import React from 'react';\r\nimport './Text.css';\r\n\r\nconst Text = ({ name, artist, textSize, overfl }) => {\r\n  return(\r\n    <div className=\"Text\">\r\n      <p style={{ fontSize: textSize, overflow: overfl  }}>{name}</p>\r\n      <p style={{ fontSize: textSize, overflow: overfl  }}>{artist}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Text;\r\n","import React, { PureComponent } from 'react';\nimport './App.css';\n\nimport SearchBar from './Components/SearchBar/SearchBar';\nimport Navbar from './Components/Navbar/Navbar';\nimport Main from './Components/Main/Main';\nimport Player from './Components/Player/Player';\n\nimport { withRouter } from \"react-router-dom\";\nimport SpotifyApi from './util/Spotify';\n\nimport { hot } from 'react-hot-loader'\n\nclass App extends PureComponent {\n\n  componentDidMount() {\n    SpotifyApi.getAccesToken();\n  } \n\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchBar />\n        <Navbar />\n        <Main />\n        <Player />\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(withRouter(App));\n","import React, { Component } from 'react';\r\nimport './Navbar.css';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\nimport { withRouter, NavLink } from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch, faAlignJustify, faListUl, faPlusSquare, faTh } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userPlaylists: [],\r\n      results: 3\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    SpotifyApi.getPlaylist().then( Playlists => {\r\n      this.setState({ userPlaylists: Playlists })\r\n    })\r\n  }\r\n\r\n  handleOnClick = (e) => {\r\n    this.state.results === 3 ? this.setState({results: 6}) :  this.setState({results: 3});\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className='Navbar-wrapper'>\r\n        <div className='Navbar'>\r\n          <NavLink className=\"LinkButton\" to=\"/search\"><FontAwesomeIcon icon={faSearch} />  Search</NavLink>\r\n          <NavLink className=\"LinkButton\" to=\"/current-playlist\"><FontAwesomeIcon icon={faAlignJustify} /> Current Playlist</NavLink>\r\n          <NavLink className=\"LinkButton\" to=\"/new\"><FontAwesomeIcon icon={faPlusSquare} /> New</NavLink>\r\n          <NavLink className=\"LinkButton\" to=\"/Library\"><FontAwesomeIcon icon={faTh} /> Library</NavLink>\r\n          <NavLink className=\"LinkButton\" to=\"/-\"><FontAwesomeIcon icon={faListUl} /> Playlists</NavLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","import React, { PureComponent } from 'react';\r\nimport './TrackList.css'\r\n\r\nimport Track from '../Track/Track';\r\n\r\nclass TrackList extends PureComponent {\r\n\r\n  getUrisList = () => {\r\n    const newList = []; \r\n    this.props.trackList.map((track)=>  newList.push(track.uri));  \r\n    return newList;\r\n  }\r\n\r\n  render() {\r\n    const { addToPlaylist, deleteTrack, inPlayList, trackList  } = this.props;\r\n    return (\r\n      <div className=\"TrackList\">\r\n        {trackList.map((track, index) => {\r\n            return (\r\n              <Track\r\n                track={track}\r\n                trackIndex={index}\r\n                id={index}\r\n                key={track.id}\r\n                addToPlaylist={addToPlaylist}\r\n                deleteTrack={deleteTrack}\r\n                inPlayList={inPlayList}\r\n                getUrisList={this.getUrisList}\r\n              />\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default TrackList;\r\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nimport Text from '../Text/Text';\r\n\r\nconst Card = ({ playlist, handleOnclick, id }) => {\r\n  return(\r\n    <div className=\"Card\">\r\n      <div onClick={() => handleOnclick(id, playlist.images)}>\r\n        <img src={playlist.images[0].url} alt=\"img\"/>\r\n        <Text name={playlist.name}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import React, { PureComponent } from 'react';\r\nimport './Button.css';\r\n\r\n\r\nclass Button extends PureComponent {\r\n  render() {\r\n    return(\r\n      <React.Fragment>\r\n        <button className=\"Button\" type={this.props.type} onClick={this.props.onClick} >{this.props.name}</button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React, { PureComponent } from 'react';\r\nimport './PlaylistDisplay.css';\r\n\r\nimport Card from '../Card/Card';\r\nimport Button from '../Button/Button';\r\n\r\nimport SpotifyApi from './../../util/Spotify';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { updatePlaylistName, updatePlayList } from './actions';\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onUpdatePlaylistName: (playlistName) => dispatch(updatePlaylistName(playlistName)),\r\n    onUpdatePlaylist: (playlist) => dispatch(updatePlayList(playlist)),\r\n  }\r\n}\r\n\r\nclass PlaylistDisplay extends PureComponent {\r\n  constructor(props){ \r\n    super(props);\r\n    this.state= {\r\n      results: 6\r\n    }\r\n  }\r\n\r\n  handleOnMore = (e) => {\r\n    this.state.results === 6 ? this.setState({results: 20}) :  this.setState({results: 6});\r\n  }\r\n\r\n  handleOnclick = (key, images) => {\r\n    let newPlaylist = [];\r\n    let secondPram = 'spotify';\r\n    if(this.props.albums === true) {\r\n      secondPram = 'spotifyAlbum';\r\n      SpotifyApi.getPlaylist(key, secondPram).then((playlist) => {\r\n        playlist.map((item)=>{\r\n          item['album'] = {images};\r\n          return newPlaylist.push(item);\r\n        });\r\n      });\r\n    } else {\r\n      SpotifyApi.getPlaylist(key, secondPram).then((playlist) => { \r\n        playlist.map((playlists) => {\r\n          return newPlaylist.push(playlists.track);\r\n        })\r\n      });\r\n    }\r\n    this.props.onUpdatePlaylist(newPlaylist) \r\n  }\r\n\r\n  render() {\r\n    const { results } = this.state;\r\n    return(\r\n      <div className=\"PlaylistDisplay\">\r\n        <div className=\"Grid\">\r\n          {this.props.playlists\r\n            .slice(0,results)\r\n            .map(playlist => {\r\n              return (\r\n                <Card \r\n                playlist={playlist} \r\n                id={playlist.id} \r\n                key={playlist.id} \r\n                handleOnclick={this.handleOnclick}\r\n                />)\r\n            })}\r\n          <div>\r\n            <Button type=\"button\" onClick={this.handleOnMore} name=\"More.....\"/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null , mapDispatchToProps)(PlaylistDisplay);\r\n","import {\r\n  UPDATE_PLAYLIST_TRACKS,\r\n  UPDATE_PLAYLIST_NAME\r\n} from './constants';\r\n\r\n\r\nexport const updatePlayList = (playlist) => ({\r\n  type: UPDATE_PLAYLIST_TRACKS,\r\n  payload: playlist\r\n})\r\n\r\nexport const updatePlaylistName = (playlistName) => ({\r\n  type: UPDATE_PLAYLIST_NAME,\r\n  payload: playlistName\r\n})\r\n","export const UPDATE_PLAYLIST_TRACKS = 'UPDATE_PLAYLIST_TRACKS';\r\nexport const UPDATE_PLAYLIST_NAME = 'UPDATE_PLAYLIST_NAME';\r\n","import React, { Component } from 'react';\r\nimport './SearchResults.css';\r\n\r\nimport TrackList from '../TrackList/TrackList';\r\nimport PlaylistDisplay from '../PlaylistDisplay/PlaylistDisplay';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { updatePlayList } from './../../actions';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchResults: state.searchTracks.searchResults\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onUpdatePlaylist: (playlist) => dispatch(updatePlayList(playlist))\r\n  }\r\n}\r\n\r\nclass SearchResults extends Component {\r\n\r\n  render() {\r\n    const { searchResults, addToPlaylist } = this.props;\r\n    return(\r\n      <React.Fragment>\r\n        {\r\n          searchResults.playlists.length > 0 ?\r\n          <div className=\"SearchResults\">\r\n            <PlaylistDisplay playlists={searchResults.playlists} />\r\n            <div className=\"Tracklist\">\r\n              <div className=\"Tracklist-tracks\">\r\n                <TrackList\r\n                  trackList={searchResults.tracks}\r\n                  addToPlaylist={addToPlaylist} />\r\n              </div>\r\n              <div className=\"Tracklist-albums\">\r\n                <PlaylistDisplay playlists={searchResults.albums} albums={true} />\r\n              </div>\r\n            </div>\r\n          </div> :\r\n          <React.Fragment></React.Fragment>\r\n        }      \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);\r\n","import {\r\n  UPDATE_PLAYLIST_TRACKS,\r\n  UPDATE_PLAYLIST_NAME\r\n} from './constants';\r\n\r\n\r\nexport const updatePlayList = (playlist) => ({\r\n  type: UPDATE_PLAYLIST_TRACKS,\r\n  payload: playlist\r\n})\r\n\r\nexport const updatePlaylistName = (playlistName) => ({\r\n  type: UPDATE_PLAYLIST_NAME,\r\n  payload: playlistName\r\n})\r\n","import React, { PureComponent } from 'react';\r\nimport './PlayList.css';\r\n\r\nimport TrackList from '../TrackList/TrackList';\r\nimport SpotifyApi from './../../util/Spotify';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { updatePlaylistName, updatePlayList } from './actions';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    playlist: state.updatePlayList.playlist,\r\n    playlistName: state.updatePlaylistName.playlistName\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onUpdatePlaylist: (playlist) => dispatch(updatePlayList(playlist)),\r\n    onUpdatePlaylistName: (playlistName) => dispatch(updatePlaylistName(playlistName))\r\n  }\r\n}\r\n\r\nclass PlayList extends PureComponent {\r\n\r\n  deleteTrack = (track) => {\r\n    let tracks = this.props.playlist.filter(element => element.id !== track.id);\r\n    this.props.onUpdatePlaylist(tracks);\r\n  }\r\n\r\n  setPlayListName = (playlistName) => {\r\n    this.props.onUpdatePlaylistName(playlistName);\r\n  }\r\n\r\n  savePlayList = () => {\r\n    if (this.props.playlist.length > 0 && this.props.playlistName.length > 0) {\r\n      const playlistUris = this.props.playlist.map(track => track.uri);\r\n      SpotifyApi.sendPlayList(this.props.playlistName, playlistUris);\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.props.onUpdatePlaylistName(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    const { playlist } = this.props;\r\n    return(\r\n      <div className=\"Playlist\">\r\n        <input\r\n          onChange={this.handleChange}\r\n          placeholder=\"Playlist\"/>\r\n        <TrackList \r\n          trackList={playlist}\r\n          deleteTrack={this.deleteTrack}\r\n          inPlayList={true}/>\r\n        <button \r\n          className=\"Playlist-save\"\r\n          type=\"submit\" \r\n          onClick={this.savePlayList}>SAVE TO SPOTIFY\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayList);\r\n","import React, { PureComponent } from 'react';\r\nimport './Main.css';\r\n\r\nimport SearchResults from '../SearchResults/SearchResults';\r\nimport PlayList from '../PlayList/PlayList';\r\n\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\n\r\nclass Main extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      route: 'searchResults'\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"Main\">\r\n        <Switch>\r\n          <Route path=\"/current-playlist\" component={PlayList} />\r\n          <Route path=\"/search\" component={SearchResults} />\r\n        </Switch> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Main);\r\n","import React from 'react';\r\nimport './ProgressionBar.css';\r\n\r\nconst ProgressionBar = ({ currentPostion, sliderAction, maxValue, handleMouseUp, handleOnMouseDown }) => {\r\n  return(\r\n    <div className=\"Bar-container\">\r\n      <input className=\"Bar\" \r\n        onMouseUp={handleMouseUp} \r\n        onMouseDown={handleOnMouseDown} \r\n        onChange={(e) => sliderAction(e)} \r\n        step='1' \r\n        type=\"range\" \r\n        min=\"1\" \r\n        value={currentPostion} \r\n        max={maxValue}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProgressionBar;\r\n","import React, { PureComponent } from 'react';\r\nimport './Player.css';\r\n\r\nimport ProgressionBar from '../ProgressionBar/ProgressionBar';\r\nimport Track from '../Track/Track';\r\n\r\nimport SpotifyApi from '../../util/Spotify';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBackward, faPlay, faPause, faForward, faVolumeUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Player extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token: \"\",\r\n      deviceId: \"\",\r\n      loggedIn: true,\r\n      playing: false,\r\n      error: \"\",\r\n      currentTrack: '',\r\n      trackName: '',\r\n      artistName: '',\r\n      albumName: '',\r\n      position: 0,\r\n      duration: 0,\r\n      percentage: 0,\r\n      volume: 0,\r\n      durationCountDown: 0,\r\n      mute: false\r\n    }\r\n\r\n    this.playerCheckInterval = null;\r\n    this.getPlayerStateTimer = null;      \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ token: SpotifyApi.getAccesToken() });\r\n    this.playerCheckInterval = setInterval(() => this.checkForPlayer(), 800);\r\n  }\r\n \r\n  checkForPlayer = () => {\r\n    const { token } = this.state;\r\n    if (window.Spotify !== null) {\r\n      clearInterval(this.playerCheckInterval);\r\n      this.player = new window.Spotify.Player({ name: \"SpotifyClone\", getOAuthToken: cb => { cb(token) } });\r\n      this.createEventHandlers();\r\n      this.player.connect();\r\n      this.getPlayerStateTimer = setInterval(() => this.getPlayerCurrentstate(), 500);\r\n    }\r\n  }\r\n\r\n  createEventHandlers = () => {\r\n    this.player.on('initialization_error', e => console.error(e));\r\n    this.player.on('authentication_error', e => console.error(e));\r\n    this.player.on('account_error', e => console.error(e));\r\n    this.player.on('playback_error', e => console.error(e));\r\n    this.player.on('player_state_changed', state => this.onStateChanged(state));\r\n    this.player.on('ready', data => {\r\n      let { device_id } = data;\r\n      this.setState({ deviceId: device_id });\r\n      SpotifyApi.transferPlaybackHere(device_id)\r\n    });\r\n  }\r\n\r\n  onStateChanged = (state) => {\r\n    if (state !== null) {\r\n      const { current_track } = state.track_window;\r\n      const trackName = current_track.name;\r\n      const albumName = current_track.album.name;\r\n      const artistName = current_track.artists.map(artist => artist.name).join(\", \");\r\n      const playing = !state.paused;\r\n      const duration = current_track.duration_ms;\r\n      this.setState({\r\n        currentTrack: current_track, \r\n        duration: duration,\r\n        trackName: trackName,\r\n        albumName: albumName,\r\n        artistName: artistName,\r\n        playing: playing,\r\n        percentage: 0\r\n      });\r\n      this.player.getVolume().then(volume => {\r\n        let volume_percentage = volume * 100; \r\n        this.setState({volume: volume_percentage});\r\n      });\r\n    }\r\n  }\r\n\r\n  getPlayerCurrentstate = () => {\r\n    console.log(this.state.position);\r\n    this.player.getCurrentState().then((state) => this.setState({ position: state.position}));\r\n  }\r\n\r\n  onPrevClick = () => {\r\n    this.player.previousTrack();\r\n  }\r\n\r\n  onPlayClick = () => {\r\n    this.player.togglePlay();\r\n  }\r\n\r\n  onNextClick = () => {\r\n    this.player.nextTrack();\r\n  }\r\n\r\n  onVolumeClick = (e) => {\r\n    let volume = e.target.value;\r\n    this.player.setVolume(volume/100).then(() => this.setState( { volume: volume } ));\r\n  }\r\n\r\n  onSeek = (e) => {\r\n    this.setState({ position: e.target.value });\r\n  }\r\n\r\n  handleOnMouseDown = (e) => { \r\n    clearInterval(this.getPlayerStateTimer);\r\n  }\r\n\r\n  handleMouseUp = (e) => {\r\n    this.player.seek(this.state.position).then(() => {\r\n      this.getPlayerStateTimer = setInterval(() => this.getPlayerCurrentstate(), 100);\r\n    });    \r\n  }\r\n \r\n  toggleMute = (e) => {\r\n    if (!this.state.mute) {\r\n      this.player.setVolume(0);\r\n      this.setState({ mute: true })\r\n    } else {\r\n      this.player.setVolume(this.state.volume/100);\r\n      this.setState({ mute: false });\r\n    }   \r\n  }\r\n\r\n  render() {\r\n    const { playing, currentTrack, volume, duration, position, artistName, trackName } = this.state;    \r\n    return(\r\n      <div className=\"Player\">\r\n        <div className=\"track-info\">\r\n          {this.state.playing ? <Track track={currentTrack} /> : <p>{artistName}: {trackName}</p>   }\r\n        </div>\r\n        <div className=\"Control\">\r\n          <div className=\"Player-buttons\"> \r\n            <button className=\"back\" onClick={this.onPrevClick} >\r\n              <FontAwesomeIcon className=\"button\" icon={faBackward} size=\"sm\"/>\r\n            </button>\r\n            <button className=\"play-pause\" onClick={this.onPlayClick} >\r\n              <FontAwesomeIcon className=\"button\" icon={playing ? faPause : faPlay} size=\"lg\"/>\r\n            </button>\r\n            <button className=\"forward\" onClick={this.onNextClick} >\r\n              <FontAwesomeIcon className=\"button\" icon={faForward} size=\"sm\"/>\r\n            </button>\r\n          </div>          \r\n          <ProgressionBar currentPostion={position} sliderAction={this.onSeek} maxValue={duration} handleMouseUp={this.handleMouseUp} handleOnMouseDown={this.handleOnMouseDown} />\r\n        </div>\r\n        <div className=\"volume\">\r\n          <FontAwesomeIcon icon={faVolumeUp} size=\"sm\" onClick={this.toggleMute}/>\r\n          <div className=\"volume-bar\">\r\n            <ProgressionBar currentPostion={volume} sliderAction={this.onVolumeClick} maxValue={\"100\"}/>\r\n            <div>{this.durationCount}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import React, { PureComponent } from 'react';\r\nimport './SearchBar.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { searchChange, searchTracks } from './actions';\r\nimport { updatePlayList } from './../PlayList/actions';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchResults: state.searchTracks.searchResults,\r\n    isPending: state.searchTracks.isPending,\r\n    searchTerm: state.searchChange.searchTerm,\r\n    playlist: state.updatePlayList.playlist,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchTracks: (searchTerm) => dispatch(searchTracks(searchTerm)),\r\n    onSearchTermChange: (searchTerm) => dispatch(searchChange(searchTerm)),\r\n    onUpdatePlaylist: (playlist) => dispatch(updatePlayList(playlist))\r\n  }\r\n}\r\n\r\nclass SearchBar extends PureComponent {\r\n\r\n  handleSearchTerm = (e) => {\r\n    this.props.onSearchTermChange(e.target.value); \r\n    let timeout = null;\r\n    clearTimeout(timeout);       \r\n    timeout = setTimeout(() => {    \r\n      this.props.onSearchTracks(this.props.searchTerm);\r\n    }, 600);\r\n  }\r\n\r\n  addToPlaylist = (track, trackIndex = 0) => {\r\n    let tracks = this.props.playlist.filter(element => element.id !== track.id);\r\n    tracks.splice(trackIndex, 0, track);\r\n    this.props.onUpdatePlaylist(tracks);\r\n  }\r\n\r\n  handleEnter = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.props.onSearchTracks(this.props.searchTerm)\r\n    }\r\n  }\r\n\r\n  submitSearch = (e) => {\r\n    this.props.onSearchTracks(this.props.searchTerm);    \r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className='SearchBar' onKeyPress={this.handleEnter}>\r\n        <input onChange={this.handleSearchTerm}  placeholder=\"Enter A Song, Album, or Artist\"/>\r\n        <Link to=\"/search\"><FontAwesomeIcon className=\"Search_Button\" icon={faSearch}/><button type=\"submit\" onClick={this.submitSearch} name=\"SEARCH\" /></Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\r\n","import {\r\n  REQUEST_TRACKS_PENDING,\r\n  REQUEST_TRACKS_SUCCESS,\r\n  REQUEST_TRACKS_FAILED,\r\n  SEARCHTERM_CHANGE\r\n  } from './constants';\r\n\r\n  \r\nimport SpotifyApi from './../../util/Spotify';\r\n\r\nexport const searchChange = (searchTerm) => ({\r\n  type:SEARCHTERM_CHANGE,\r\n  payload: searchTerm\r\n})\r\n\r\nexport const searchTracks = (searchTerm) => (dispatch) => {\r\n  dispatch({\r\n    type: REQUEST_TRACKS_PENDING })\r\n  SpotifyApi.fullSearch(searchTerm).then( data =>\r\n    dispatch({\r\n    type: REQUEST_TRACKS_SUCCESS,\r\n    payload: data}))\r\n  .catch( error =>\r\n    dispatch({\r\n    type: REQUEST_TRACKS_FAILED}))\r\n}\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  UPDATE_PLAYLIST_TRACKS,\r\n  UPDATE_PLAYLIST_NAME\r\n} from './constants';\r\n\r\nconst initialStatePlaylist = {\r\n  playlist: []\r\n}\r\n\r\nconst initialStatePlaylistName = {\r\n  playlistName: 'New playlist'\r\n}\r\n\r\n\r\nexport const updatePlayList = (state=initialStatePlaylist, action={}) => {\r\n  switch (action.type) {\r\n    case UPDATE_PLAYLIST_TRACKS:\r\n      return Object.assign({}, state, {playlist: action.payload})\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const updatePlaylistName = (state=initialStatePlaylistName, action={}) => {\r\n  switch (action.type) {\r\n    case UPDATE_PLAYLIST_NAME:\r\n      return Object.assign({}, state, {playlistName: action.payload})\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  REQUEST_TRACKS_PENDING,\r\n  REQUEST_TRACKS_SUCCESS,\r\n  REQUEST_TRACKS_FAILED,\r\n  SEARCHTERM_CHANGE\r\n} from './constants';\r\n\r\nconst initialStateSearchResults = {\r\n  searchResults: {\r\n    playlists: [],\r\n    artists: [],\r\n    albums: [],\r\n    tracks: []\r\n  }\r\n}\r\n\r\nexport const searchChange = (state= '', action={}) => {\r\n  switch (action.type) {\r\n    case SEARCHTERM_CHANGE:\r\n      return Object.assign({}, state, {searchTerm: action.payload});\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const searchTracks = (state=initialStateSearchResults, action={}) => {\r\n  switch (action.type) {\r\n    case REQUEST_TRACKS_PENDING:\r\n      return Object.assign({}, state, {isPending: true})\r\n    case REQUEST_TRACKS_SUCCESS:\r\n      return Object.assign({}, state, {searchResults: action.payload, isPending: false})\r\n    case REQUEST_TRACKS_FAILED:\r\n      return Object.assign({}, state, {isPending: false})\r\n    default:\r\n      return state\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { updatePlayList, updatePlaylistName } from './reducers';\nimport { searchTracks, searchChange } from './Components/SearchBar/reducers';\n\nconst logger = createLogger();\n\nconst rootReducers = combineReducers({ searchTracks, updatePlayList, updatePlaylistName, searchChange });\n\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />      \n    </BrowserRouter>    \n  </Provider>,\n   document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}